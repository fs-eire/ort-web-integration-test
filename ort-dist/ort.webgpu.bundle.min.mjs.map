{"version":3,"sources":["../../common/lib/backend-impl.ts","../../common/lib/backend.ts","../../common/lib/version.ts","../../common/lib/env-impl.ts","../../common/lib/env.ts","../../common/lib/tensor-conversion-impl.ts","../../common/lib/tensor-factory-impl.ts","../../common/lib/tensor-impl-type-mapping.ts","../../common/lib/tensor-utils-impl.ts","../../common/lib/tensor-impl.ts","../../common/lib/tensor.ts","../../common/lib/trace.ts","../../common/lib/inference-session-impl.ts","../../common/lib/inference-session.ts","../../common/lib/tensor-conversion.ts","../../common/lib/tensor-factory.ts","../../common/lib/onnx-model.ts","../../common/lib/onnx-value.ts","../../common/lib/index.ts","../lib/wasm/wasm-utils-env.ts","../lib/wasm/proxy-worker/main.ts","ort-wasm-simd-threaded.asyncify.mjs","../lib/wasm/wasm-utils-import.ts","../lib/wasm/wasm-factory.ts","../lib/wasm/wasm-utils.ts","../lib/wasm/run-options.ts","../lib/wasm/session-options.ts","../lib/wasm/wasm-common.ts","../lib/wasm/wasm-utils-load-file.ts","../lib/wasm/jsep/tensor-view.ts","../lib/wasm/jsep/log.ts","../lib/wasm/jsep/webnn/tensor-manager.ts","../lib/wasm/jsep/backend-webnn.ts","../lib/wasm/wasm-core-impl.ts","../lib/wasm/proxy-wrapper.ts","../lib/wasm/session-handler-inference.ts","../lib/backend-wasm.ts","../lib/index.ts","../lib/version.ts"],"names":["backends","backendsSortedByPriority","registerBackend","tryResolveAndInitializeBackend","resolveBackendAndExecutionProviders","init_backend_impl","__esmMin","name","backend","priority","currentBackend","i","backendName","backendInfo","isInitializing","e","options","eps","backendHints","backendNames","errors","availableBackendNames","resolveResult","err","filteredEps","target","prop","init_backend","version","init_version","logLevelValue","env","init_env_impl","value","init_env","tensorToDataURL","tensorToImageData","init_tensor_conversion_impl","tensor","canvas","pixels2DContext","width","height","inputformat","norm","normMean","normBias","stride","rTensorPointer","gTensorPointer","bTensorPointer","aTensorPointer","j","R","G","B","A","image","channels","step","rImagePointer","gImagePointer","bImagePointer","aImagePointer","bufferToTensor","tensorFromImage","tensorFromTexture","tensorFromGpuBuffer","tensorFromMLTensor","tensorFromPinnedBuffer","init_tensor_factory_impl","init_tensor_impl","buffer","outputformat","float32Data","Tensor","isHTMLImageEle","isImageDataEle","isImageBitmap","isString","data","bufferToTensorOptions","createCanvas","createCanvasContext","tempCanvas","resolve","reject","context","newImage","img","texture","download","dispose","dims","gpuBuffer","dataType","mlTensor","type","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","isTypedArrayChecked","checkTypedArray","init_tensor_impl_type_mapping","isBigInt64ArrayAvailable","isBigUint64ArrayAvailable","Float16Array","isFloat16ArrayAvailable","calculateSize","tensorReshape","init_tensor_utils_impl","size","dim","arg0","arg1","arg2","expectedTypedArrayConstructor","maybeDims","typedArrayConstructor","firstElementType","mappedType","releaseData","init_tensor","TRACE","TRACE_FUNC","TRACE_FUNC_BEGIN","TRACE_FUNC_END","TRACE_EVENT_BEGIN","TRACE_EVENT_END","init_trace","deviceType","label","msg","extraMsg","stack","hasTraceFunc","InferenceSession","init_inference_session_impl","_InferenceSession","handler","feeds","fetches","isFetchesEmpty","isFetches","arg1Keys","v","results","returnValue","key","result","arg3","filePathOrUint8Array","byteOffset","byteLength","optionsWithValidatedEPs","init_inference_session","init_tensor_conversion","init_tensor_factory","init_onnx_model","init_onnx_value","esm_exports","__export","init_esm","init_wasm_utils_env","main_exports","main_default","WORKER_NAME","isProxyWorker","init_main","init_wasm_core_impl","init_wasm_factory","init_wasm_utils_import","ev","message","initializeWebAssembly","initRuntime","epName","initEp","bufferData","copyFromExternalBuffer","model","createSession","sessionMetadata","releaseSession","sessionId","inputIndices","inputs","outputIndices","run","outputs","o","extractTransferableBuffers","endProfiling","urlOverride","scriptSrc","ort_wasm_simd_threaded_asyncify_exports","ort_wasm_simd_threaded_asyncify_default","t","n","a","r","$r","Hr","u","c","s","f","d","O","l","m","p","h","g","b","w","y","x","S","T","C","E","Co","D","Ha","ja","Wa","ue","Mr","pa","fe","Pr","La","M","U","k","I","_","W","L","$","zi","F","z","V","N","Y","q","la","pe","ve","xe","Se","Te","Oe","Ae","Be","Ee","Me","ke","Ie","_e","We","Le","Ge","$e","Fe","ze","Ve","Ne","Ye","qe","He","rr","tr","fr","lr","mr","pr","gr","Ar","Br","Cr","Rr","Dr","kr","Ir","_r","Zr","nt","ir","at","it","ot","ut","ct","st","ft","dt","lt","mt","pt","ht","vt","yt","xt","St","Tt","Bt","Ct","Pt","Dt","kt","It","Et","_t","Wt","Lt","At","Gt","$t","Vt","Nt","Ht","jt","mn","pn","vn","gn","bn","wn","yn","xn","Sn","Tn","On","An","Bn","Pn","Rn","re","Un","Dn","kn","_n","Ao","bo","Oo","go","co","qi","Ni","Vi","to","mo","io","ji","ho","wo","lo","To","So","po","fo","so","oo","vo","Hi","Xi","Yi","Bo","Zi","ro","eo","Qi","no","uo","yo","ao","xo","Ji","Ki","Wn","J","Ln","Gn","$n","Fn","zn","Vn","Nn","Yn","qn","Hn","jn","Xn","Zn","Qn","Kn","Jn","ea","ra","ta","aa","ia","oa","ua","ca","sa","H","X","Z","te","se","ce","ne","ie","Q","K","Za","Xa","Ga","ee","ae","oe","$a","va","ti","Fa","de","le","me","we","ge","be","Ka","ei","he","Ya","Qa","ye","qa","Ja","Ce","Pe","Re","Ue","De","je","Xe","Ze","Qe","Ke","Je","er","nr","ar","or","ur","cr","sr","dr","hr","vr","ga","ba","br","wr","yr","xr","Sr","Tr","Or","Er","Va","Ur","da","fa","Wr","Lr","zr","Gr","Gi","Yr","Fr","Vr","Nr","qr","jr","Xr","$i","Li","Fi","Qr","Kr","Jr","ma","et","rt","tt","gt","bt","wt","Ot","za","Mt","Rt","Ut","Ft","zt","Yt","qt","Xt","Zt","Qt","Kt","Jt","en","rn","tn","nn","an","on","un","cn","sn","fn","dn","ln","Ra","_a","Ia","hn","Na","Ua","Da","ka","Cn","En","Mn","In","Aa","Ta","Sa","xa","Oa","Ba","Ca","na","ha","wa","ya","Ea","Ma","Pa","ri","ni","ai","ii","oi","ui","ci","si","fi","di","li","mi","pi","hi","vi","gi","bi","wi","yi","xi","Si","Ti","Oi","Ai","Bi","Ci","Ei","Mi","Pi","Ri","Ui","Di","ki","Ii","_i","Wi","init_ort_wasm_simd_threaded_asyncify","origin","isEsmImportMetaUrlHardcodedAsFileUri","getScriptSrc","inferWasmPathPrefixFromScriptSrc","isSameOrigin","normalizeUrl","fallbackUrl","preload","dynamicImportDefault","createProxyWorker","importProxyWorker","embeddedWasmModule","importWasmModule","URL2","filename","prefixOverride","baseUrl","absoluteUrl","blob","url","isMultiThreaded","isWasmOverridden","useEmbeddedModule","wasmModuleFilename","wasmModuleUrl","needPreload","wasm","initialized","initializing","aborted","isMultiThreadSupported","isSimdSupported","isRelaxedSimdSupported","getInstance","flags","timeout","numThreads","multiThreadSupported","wasmPaths","wasmPrefixOverride","mjsPathOverrideFlag","mjsPathOverride","wasmPathOverrideFlag","wasmPathOverride","wasmBinaryOverride","objectUrl","ortWasmFactory","isTimeout","tasks","config","fileName","inferredWasmPathPrefix","module","what","allocWasmString","iterateExtraOptions","checkLastError","init_wasm_utils","allocs","dataLength","dataOffset","prefix","seen","ptrSize","paramsOffset","errorCode","errorMessagePointer","errorMessage","setRunOptions","init_run_options","runOptionsHandle","runOptions","tagDataOffset","keyDataOffset","valueDataOffset","alloc","getGraphOptimzationLevel","getExecutionMode","appendDefaultOptions","appendSessionConfig","appendEpOption","setExecutionProviders","setSessionOptions","init_session_options","graphOptimizationLevel","executionMode","session","ep","sessionOptionsHandle","epOptions","executionProviders","customDevice","customOptions","info","deviceId","instanceHandle","deviceHandle","epNameDataOffset","epOptionsCount","keysOffset","valuesOffset","sessionOptions","logIdDataOffset","logSeverityLevel","logVerbosityLevel","optimizedModelFilePathOffset","nameOffset","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","calculateTensorSizeInBytes","tensorTypeToTypedArrayConstructor","logLevelStringToEnum","isGpuBufferSupportedType","isMLTensorSupportedType","dataLocationStringToEnum","init_wasm_common","typeProto","dateType","dimsOrSize","elementSize","logLevel","location","loadFile","init_wasm_utils_load_file","file","readFile","createReadStream","stream","chunks","chunk","response","contentLengthHeader","fileSize","reader","pages","offset","done","chunkSize","createView","init_tensor_view","dataBuffer","logLevelPrefix","doLog","configLogLevel","debug","configureLogger","LOG","LOG_DEBUG","init_log","level","$configLogLevel","$debug","messageLevel","configLevel","args","webnnDataTypeToSize","convertDataToInt32","convertInt32ToData","tensorGuid","createNewTensorId","webnnDataTypeToFallback","calculateByteLength","TensorWrapper","TensorIdTracker","TensorManagerImpl","createTensorManager","init_tensor_manager","dataTypeSize","bytesPerElement","numElements","originalArray","int32Array","bigInt64Array","bigUint64Array","int8Array","uint32Array","shape","descriptor","fallbackDataType","dstBuffer","originalData","isConverted","tensorManager","wrapper","copyOld","opLimits","usage","newData","dstData","tensorId","tensorTracker","writable","readable","index","tensorWrapper","backend_webnn_exports","WebNNBackend","onnxDataTypeToWebnnDataType","compareMLContextOptions","init_backend_webnn","aKeys","bKeys","tensorIds","optionsOrDevice","mlContextIndex","entry","mlContext","sessionIds","onnxDataType","dimensions","webnnDataType","id","externalFilePath","builder","desc","mountedFiles","shouldConvertInt64ToInt32","filePath","fileData","bufferView","int32Buffer","inputName","outputName","inputNames","outputNames","isInput","initOrt","activeSessions","getSessionInputOutputCount","getSessionInputOutputMetadata","prepareInputOutputTensor","loggingLevel","webgpuAdapter","powerPreference","forceFallbackAdapter","device","sessionHandle","metadataOffset","elementType","dimsCount","symbolicDimNameOffset","modelDataOffset","modelData","modelDataLength","ioBindingHandle","inputNamesUTF8Encoded","outputNamesUTF8Encoded","loadingPromises","path","provider","webnnOptions","gpuDevice","inputCount","outputCount","enableGraphCapture","inputMetadata","outputMetadata","outputPreferredLocations","nameString","isGraphOutput","bindingState","buf","ioBindingState","tensorHandles","tensorNameUTF8Encoded","actualLocation","rawData","dataByteLength","registerBuffer","registerMLTensor","isGraphInput","tensorName","dataTypeEnum","createTemporaryTensor","uploadTensor","dimsOffset","inputTensors","outputTensors","inputOutputBound","runOptionsAllocs","inputTensorHandles","outputTensorHandles","inputOutputAllocs","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","handle","outputPreferredLocationsEncoded","output","outputPromises","beforeGetTensorDataStack","tensorDataOffset","keepOutputTensor","valueType","dimsLength","preferredLocation","stringData","nextOffset","maxBytesToRead","getBuffer","bufferSize","downloadDataFunction","arrayBuffer","ensureTensor","isGraphInputOutputTypeSupported","profileFileName","tensors","buffers","isProxy","proxyWorker","temporaryObjectUrl","initWasmCallbacks","queuedCallbacks","enqueueCallbacks","ensureWorker","onProxyWorkerMessage","initializeWebAssemblyAndOrtRuntime","initializeOrtEp","init_proxy_wrapper","callbacks","queue","worker","transferable","serializableInputs","encodeTensorMetadata","decodeTensorMetadata","OnnxruntimeWebAssemblySessionHandler","init_session_handler_inference","getName","pathOrBuffer","inputArray","kvp","outputArray","resultMap","backend_wasm_exports","OnnxruntimeWebAssemblyBackend","initializeFlags","wasmBackend","init_backend_wasm","simd","numCpuLogicalCores","index_default"],"mappings":"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AAGC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,GAAGC,GAAG,EAAEC,GAAG,GAAGC,GAAG,GAAGC,GAAG,EAAEC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,EAAEC,GAAG,EAAEC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAG1D,GAAG,GAAG2D,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,GAAGC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,GAAGA,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,EAAEC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,EAAEC,GAAG,GAAGC,GAAG,GAAGC,GAAG,EAAEC,GAAG,GAAGC,GAAG,EAAEC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,EAAEC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,EAAEC,GAAG,EAAEC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,GAAGC,GAAG,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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Backend } from './backend.js';\nimport { InferenceSession } from './inference-session.js';\n\ninterface BackendInfo {\n  backend: Backend;\n  priority: number;\n\n  initPromise?: Promise<void>;\n  initialized?: boolean;\n  aborted?: boolean;\n  error?: string;\n}\n\nconst backends: Map<string, BackendInfo> = new Map();\nconst backendsSortedByPriority: string[] = [];\n\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @ignore\n */\nexport const registerBackend = (name: string, backend: Backend, priority: number): void => {\n  if (backend && typeof backend.init === 'function' && typeof backend.createInferenceSessionHandler === 'function') {\n    const currentBackend = backends.get(name);\n    if (currentBackend === undefined) {\n      backends.set(name, { backend, priority });\n    } else if (currentBackend.priority > priority) {\n      // same name is already registered with a higher priority. skip registeration.\n      return;\n    } else if (currentBackend.priority === priority) {\n      if (currentBackend.backend !== backend) {\n        throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n      }\n    }\n\n    if (priority >= 0) {\n      const i = backendsSortedByPriority.indexOf(name);\n      if (i !== -1) {\n        backendsSortedByPriority.splice(i, 1);\n      }\n\n      for (let i = 0; i < backendsSortedByPriority.length; i++) {\n        if (backends.get(backendsSortedByPriority[i])!.priority <= priority) {\n          backendsSortedByPriority.splice(i, 0, name);\n          return;\n        }\n      }\n      backendsSortedByPriority.push(name);\n    }\n    return;\n  }\n\n  throw new TypeError('not a valid backend');\n};\n\n/**\n * Try to resolve and initialize a backend.\n *\n * @param backendName - the name of the backend.\n * @returns the backend instance if resolved and initialized successfully, or an error message if failed.\n */\nconst tryResolveAndInitializeBackend = async (backendName: string): Promise<Backend | string> => {\n  const backendInfo = backends.get(backendName);\n  if (!backendInfo) {\n    return 'backend not found.';\n  }\n\n  if (backendInfo.initialized) {\n    return backendInfo.backend;\n  } else if (backendInfo.aborted) {\n    return backendInfo.error!;\n  } else {\n    const isInitializing = !!backendInfo.initPromise;\n    try {\n      if (!isInitializing) {\n        backendInfo.initPromise = backendInfo.backend.init(backendName);\n      }\n      await backendInfo.initPromise;\n      backendInfo.initialized = true;\n      return backendInfo.backend;\n    } catch (e) {\n      if (!isInitializing) {\n        backendInfo.error = `${e}`;\n        backendInfo.aborted = true;\n      }\n      return backendInfo.error!;\n    } finally {\n      delete backendInfo.initPromise;\n    }\n  }\n};\n\n/**\n * Resolve execution providers from the specific session options.\n *\n * @param options - the session options object.\n * @returns a promise that resolves to a tuple of an initialized backend instance and a session options object with\n * filtered EP list.\n *\n * @ignore\n */\nexport const resolveBackendAndExecutionProviders = async (\n  options: InferenceSession.SessionOptions,\n): Promise<[backend: Backend, options: InferenceSession.SessionOptions]> => {\n  // extract backend hints from session options\n  const eps = options.executionProviders || [];\n  const backendHints = eps.map((i) => (typeof i === 'string' ? i : i.name));\n  const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n\n  // try to resolve and initialize all requested backends\n  let backend: Backend | undefined;\n  const errors = [];\n  const availableBackendNames = new Set<string>();\n  for (const backendName of backendNames) {\n    const resolveResult = await tryResolveAndInitializeBackend(backendName);\n    if (typeof resolveResult === 'string') {\n      errors.push({ name: backendName, err: resolveResult });\n    } else {\n      if (!backend) {\n        backend = resolveResult;\n      }\n      if (backend === resolveResult) {\n        availableBackendNames.add(backendName);\n      }\n    }\n  }\n\n  // if no backend is available, throw error.\n  if (!backend) {\n    throw new Error(`no available backend found. ERR: ${errors.map((e) => `[${e.name}] ${e.err}`).join(', ')}`);\n  }\n\n  // for each explicitly requested backend, if it's not available, output warning message.\n  for (const { name, err } of errors) {\n    if (backendHints.includes(name)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `removing requested execution provider \"${name}\" from session options because it is not available: ${err}`,\n      );\n    }\n  }\n\n  const filteredEps = eps.filter((i) => availableBackendNames.has(typeof i === 'string' ? i : i.name));\n\n  return [\n    backend,\n    new Proxy(options, {\n      get: (target, prop) => {\n        if (prop === 'executionProviders') {\n          return filteredEps;\n        }\n        return Reflect.get(target, prop);\n      },\n    }),\n  ];\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { InferenceSession } from './inference-session.js';\nimport { OnnxValue } from './onnx-value.js';\n\n/**\n * @ignore\n */\nexport declare namespace SessionHandler {\n  type FeedsType = { [name: string]: OnnxValue };\n  type FetchesType = { [name: string]: OnnxValue | null };\n  type ReturnType = { [name: string]: OnnxValue };\n}\n\n/**\n * Represents shared SessionHandler functionality\n *\n * @ignore\n */\ninterface SessionHandler {\n  dispose(): Promise<void>;\n\n  readonly inputNames: readonly string[];\n  readonly outputNames: readonly string[];\n\n  readonly inputMetadata: readonly InferenceSession.ValueMetadata[];\n  readonly outputMetadata: readonly InferenceSession.ValueMetadata[];\n}\n\n/**\n * Represent a handler instance of an inference session.\n *\n * @ignore\n */\nexport interface InferenceSessionHandler extends SessionHandler {\n  startProfiling(): void;\n  endProfiling(): void;\n\n  run(\n    feeds: SessionHandler.FeedsType,\n    fetches: SessionHandler.FetchesType,\n    options: InferenceSession.RunOptions,\n  ): Promise<SessionHandler.ReturnType>;\n}\n\n/**\n * Represent a backend that provides implementation of model inferencing.\n *\n * @ignore\n */\nexport interface Backend {\n  /**\n   * Initialize the backend asynchronously. Should throw when failed.\n   */\n  init(backendName: string): Promise<void>;\n\n  createInferenceSessionHandler(\n    uriOrBuffer: string | Uint8Array,\n    options?: InferenceSession.SessionOptions,\n  ): Promise<InferenceSessionHandler>;\n}\n\nexport { registerBackend } from './backend-impl.js';\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.23.0-dev.20250703-7fc6235861';\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Env } from './env.js';\nimport { version } from './version.js';\n\ntype LogLevelType = Env['logLevel'];\n\nlet logLevelValue: Required<LogLevelType> = 'warning';\n\nexport const env: Env = {\n  wasm: {} as Env.WebAssemblyFlags,\n  webgl: {} as Env.WebGLFlags,\n  webgpu: {} as Env.WebGpuFlags,\n  versions: { common: version },\n\n  set logLevel(value: LogLevelType) {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n      throw new Error(`Unsupported logging level: ${value}`);\n    }\n    logLevelValue = value;\n  },\n  get logLevel(): Required<LogLevelType> {\n    return logLevelValue;\n  },\n};\n\n// set property 'logLevel' so that they can be correctly transferred to worker by `postMessage()`.\nObject.defineProperty(env, 'logLevel', { enumerable: true });\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { env as envImpl } from './env-impl.js';\nimport { TryGetGlobalType } from './type-helper.js';\n\nexport declare namespace Env {\n  export type WasmPathPrefix = string;\n  export interface WasmFilePaths {\n    /**\n     * Specify the override path for the main .wasm file.\n     *\n     * This path should be an absolute path.\n     *\n     * If not modified, the filename of the .wasm file is:\n     * - `ort-wasm-simd-threaded.wasm` for default build\n     * - `ort-wasm-simd-threaded.jsep.wasm` for JSEP build (with WebGPU and WebNN)\n     * - `ort-wasm-simd-threaded.asyncify.wasm` for WebGPU build with Asyncify (with WebNN)\n     */\n    wasm?: URL | string;\n    /**\n     * Specify the override path for the main .mjs file.\n     *\n     * This path should be an absolute path.\n     *\n     * If not modified, the filename of the .mjs file is:\n     * - `ort-wasm-simd-threaded.mjs` for default build\n     * - `ort-wasm-simd-threaded.jsep.mjs` for JSEP build (with WebGPU and WebNN)\n     * - `ort-wasm-simd-threaded.asyncify.mjs` for WebGPU build with Asyncify (with WebNN)\n     */\n    mjs?: URL | string;\n  }\n  export type WasmPrefixOrFilePaths = WasmPathPrefix | WasmFilePaths;\n  export interface WebAssemblyFlags {\n    /**\n     * set or get number of thread(s). If omitted or set to 0, number of thread(s) will be determined by system. If set\n     * to 1, no worker thread will be spawned.\n     *\n     * This setting is available only when WebAssembly multithread feature is available in current context.\n     *\n     * @defaultValue `0`\n     */\n    numThreads?: number;\n\n    /**\n     * set a value indicating whether to enable SIMD.\n     *\n     * ONNX Runtime will perform feature detection based on the value of this property. Specifically, when the value is\n     * set to:\n     * - `undefined`, `true` or `\"fixed\"`: will check availability of Fixed-width SIMD.\n     * - `\"relaxed\"`: will check availability of Relaxed SIMD.\n     * - `false`: will not perform SIMD feature checking.\n     *\n     * Setting this property does not make ONNX Runtime to switch to the corresponding runtime automatically. User need\n     * to set `wasmPaths` or `wasmBinary` property to load the corresponding runtime.\n     *\n     * This setting is available only when WebAssembly SIMD feature is available in current context.\n     *\n     * @defaultValue `true`\n     */\n    simd?: boolean | 'fixed' | 'relaxed';\n\n    /**\n     * set or get a boolean value indicating whether to enable trace.\n     *\n     * @defaultValue `false`\n     *\n     * @deprecated Use `env.trace` instead. If `env.trace` is set, this property will be ignored.\n     */\n    trace?: boolean;\n\n    /**\n     * Set or get a number specifying the timeout for initialization of WebAssembly backend, in milliseconds. A zero\n     * value indicates no timeout is set.\n     *\n     * @defaultValue `0`\n     */\n    initTimeout?: number;\n\n    /**\n     * Set a custom URL prefix to the .wasm/.mjs files, or an object of overrides for both .wasm/.mjs file. The override\n     * path should be an absolute path.\n     */\n    wasmPaths?: WasmPrefixOrFilePaths;\n\n    /**\n     * Set a custom buffer which contains the WebAssembly binary. If this property is set, the `wasmPaths` property will\n     * be ignored.\n     */\n    wasmBinary?: ArrayBufferLike | Uint8Array;\n\n    /**\n     * Set or get a boolean value indicating whether to proxy the execution of main thread to a worker thread.\n     *\n     * @defaultValue `false`\n     */\n    proxy?: boolean;\n  }\n\n  export interface WebGLFlags {\n    /**\n     * Set or get the WebGL Context ID (webgl or webgl2).\n     *\n     * @defaultValue `'webgl2'`\n     */\n    contextId?: 'webgl' | 'webgl2';\n    /**\n     * Get the WebGL rendering context.\n     */\n    readonly context: WebGLRenderingContext;\n    /**\n     * Set or get the maximum batch size for matmul. 0 means to disable batching.\n     *\n     * @deprecated\n     */\n    matmulMaxBatchSize?: number;\n    /**\n     * Set or get the texture cache mode.\n     *\n     * @defaultValue `'full'`\n     */\n    textureCacheMode?: 'initializerOnly' | 'full';\n    /**\n     * Set or get the packed texture mode\n     *\n     * @defaultValue `false`\n     */\n    pack?: boolean;\n    /**\n     * Set or get whether enable async download.\n     *\n     * @defaultValue `false`\n     */\n    async?: boolean;\n  }\n\n  export interface WebGpuProfilingDataV1TensorMetadata {\n    dims: readonly number[];\n    dataType: string;\n  }\n  export interface WebGpuProfilingDataV1 {\n    version: 1;\n    inputsMetadata: readonly WebGpuProfilingDataV1TensorMetadata[];\n    outputsMetadata: readonly WebGpuProfilingDataV1TensorMetadata[];\n    kernelId: number;\n    kernelType: string;\n    kernelName: string;\n    programName: string;\n    startTime: number;\n    endTime: number;\n  }\n\n  export type WebGpuProfilingData = WebGpuProfilingDataV1;\n\n  export interface WebGpuFlags {\n    /**\n     * Set or get the profiling mode.\n     *\n     * @deprecated Use `env.webgpu.profiling.mode` instead. If `env.webgpu.profiling.mode` is set, this property will be\n     * ignored.\n     */\n    profilingMode?: 'off' | 'default';\n    /**\n     * Set or get the profiling configuration.\n     */\n    profiling: {\n      /**\n       * Set or get the profiling mode.\n       *\n       * @defaultValue `'off'`\n       */\n      mode?: 'off' | 'default';\n\n      /**\n       * Set or get a callback function when a profiling data is received. If not set, the profiling data will be\n       * printed to console.\n       */\n      ondata?: (data: WebGpuProfilingData) => void;\n    };\n    /**\n     * Set or get the power preference.\n     *\n     * Setting this property only has effect before the first WebGPU inference session is created. The value will be\n     * used as options for `navigator.gpu.requestAdapter()`.\n     *\n     * See {@link https://gpuweb.github.io/gpuweb/#dictdef-gpurequestadapteroptions} for more details.\n     *\n     * @defaultValue `undefined`\n     *\n     * @deprecated Create your own GPUAdapter, use it to create a GPUDevice instance and set {@link device} property if\n     * you want to use a specific power preference.\n     */\n    powerPreference?: 'low-power' | 'high-performance';\n    /**\n     * Set or get the force fallback adapter flag.\n     *\n     * Setting this property only has effect before the first WebGPU inference session is created. The value will be\n     * used as options for `navigator.gpu.requestAdapter()`.\n     *\n     * See {@link https://gpuweb.github.io/gpuweb/#dictdef-gpurequestadapteroptions} for more details.\n     *\n     * @defaultValue `undefined`\n     *\n     * @deprecated Create your own GPUAdapter, use it to create a GPUDevice instance and set {@link device} property if\n     * you want to use a specific fallback option.\n     */\n    forceFallbackAdapter?: boolean;\n    /**\n     * Set or get the adapter for WebGPU.\n     *\n     * Setting this property only has effect before the first WebGPU inference session is created. The value will be\n     * used as the GPU adapter for the underlying WebGPU backend to create GPU device.\n     *\n     * If this property is not set, it will be available to get after the first WebGPU inference session is created. The\n     * value will be the GPU adapter that created by the underlying WebGPU backend.\n     *\n     * When use with TypeScript, the type of this property is `GPUAdapter` defined in \"@webgpu/types\".\n     *\n     * @deprecated It is no longer recommended to use this property. The latest WebGPU spec adds `GPUDevice.adapterInfo`\n     * (https://www.w3.org/TR/webgpu/#dom-gpudevice-adapterinfo), which allows to get the adapter information from the\n     * device. When it's available, there is no need to set/get the {@link adapter} property.\n     */\n    adapter: TryGetGlobalType<'GPUAdapter'>;\n    /**\n     * Set or get the GPU device for WebGPU.\n     *\n     * There are 3 valid scenarios of accessing this property:\n     * - Set a value before the first WebGPU inference session is created. The value will be used by the WebGPU backend\n     * to perform calculations. If the value is not a `GPUDevice` object, an error will be thrown.\n     * - Get the value before the first WebGPU inference session is created. This will try to create a new GPUDevice\n     * instance. Returns a `Promise` that resolves to a `GPUDevice` object.\n     * - Get the value after the first WebGPU inference session is created. Returns a resolved `Promise` to the\n     * `GPUDevice` object used by the WebGPU backend.\n     */\n    get device(): Promise<TryGetGlobalType<'GPUDevice'>>;\n    set device(value: TryGetGlobalType<'GPUDevice'>);\n    /**\n     * Set or get whether validate input content.\n     *\n     * @defaultValue `false`\n     */\n    validateInputContent?: boolean;\n  }\n}\n\nexport interface Env {\n  /**\n   * set the severity level for logging.\n   *\n   * @defaultValue `'warning'`\n   */\n  logLevel?: 'verbose' | 'info' | 'warning' | 'error' | 'fatal';\n\n  /**\n   * Indicate whether run in debug mode.\n   *\n   * @defaultValue `false`\n   */\n  debug?: boolean;\n\n  /**\n   * set or get a boolean value indicating whether to enable trace.\n   *\n   * @defaultValue `false`\n   */\n  trace?: boolean;\n\n  /**\n   * Get version of the current package.\n   */\n  readonly versions: {\n    readonly common: string;\n    readonly web?: string;\n    readonly node?: string;\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    readonly 'react-native'?: string;\n  };\n\n  /**\n   * Represent a set of flags for WebAssembly\n   */\n  readonly wasm: Env.WebAssemblyFlags;\n\n  /**\n   * Represent a set of flags for WebGL\n   */\n  readonly webgl: Env.WebGLFlags;\n\n  /**\n   * Represent a set of flags for WebGPU\n   */\n  readonly webgpu: Env.WebGpuFlags;\n\n  [name: string]: unknown;\n}\n\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env: Env = envImpl;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { TensorToDataUrlOptions, TensorToImageDataOptions } from './tensor-conversion.js';\nimport { Tensor } from './tensor.js';\n\n/**\n * implementation of Tensor.toDataURL()\n */\nexport const tensorToDataURL = (tensor: Tensor, options?: TensorToDataUrlOptions): string => {\n  const canvas = typeof document !== 'undefined' ? document.createElement('canvas') : new OffscreenCanvas(1, 1);\n  canvas.width = tensor.dims[3];\n  canvas.height = tensor.dims[2];\n  const pixels2DContext = canvas.getContext('2d') as\n    | CanvasRenderingContext2D\n    | OffscreenCanvasRenderingContext2D\n    | null;\n\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[3];\n    } else {\n      // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n    }\n\n    const inputformat = options?.format !== undefined ? options.format : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof norm.mean === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof norm.bias === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    // Default pointer assignments\n    let rTensorPointer = 0,\n      gTensorPointer = stride,\n      bTensorPointer = stride * 2,\n      aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const R = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0]; // R value\n        const G = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1]; // G value\n        const B = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2]; // B value\n        const A = aTensorPointer === -1 ? 255 : ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3]; // A value\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n        pixels2DContext.fillRect(j, i, 1, 1);\n      }\n    }\n    if ('toDataURL' in canvas) {\n      return canvas.toDataURL();\n    } else {\n      throw new Error('toDataURL is not supported');\n    }\n  } else {\n    throw new Error('Can not access image data');\n  }\n};\n\n/**\n * implementation of Tensor.toImageData()\n */\nexport const tensorToImageData = (tensor: Tensor, options?: TensorToImageDataOptions): ImageData => {\n  const pixels2DContext =\n    typeof document !== 'undefined'\n      ? document.createElement('canvas').getContext('2d')\n      : (new OffscreenCanvas(1, 1).getContext('2d') as OffscreenCanvasRenderingContext2D);\n  let image: ImageData;\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    let channels: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[1];\n      channels = tensor.dims[3];\n    } else {\n      // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n      channels = tensor.dims[1];\n    }\n    const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof norm.mean === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof norm.bias === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    if (options !== undefined) {\n      if (\n        (options.format !== undefined && channels === 4 && options.format !== 'RGBA') ||\n        (channels === 3 && options.format !== 'RGB' && options.format !== 'BGR')\n      ) {\n        throw new Error(\"Tensor format doesn't match input tensor dims\");\n      }\n    }\n\n    // Default pointer assignments\n    const step = 4;\n    let rImagePointer = 0,\n      gImagePointer = 1,\n      bImagePointer = 2,\n      aImagePointer = 3;\n    let rTensorPointer = 0,\n      gTensorPointer = stride,\n      bTensorPointer = stride * 2,\n      aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    image = pixels2DContext.createImageData(width, height);\n\n    for (\n      let i = 0;\n      i < height * width;\n      rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++\n    ) {\n      image.data[rImagePointer] = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0]; // R value\n      image.data[gImagePointer] = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1]; // G value\n      image.data[bImagePointer] = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2]; // B value\n      image.data[aImagePointer] =\n        aTensorPointer === -1 ? 255 : ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3]; // A value\n    }\n  } else {\n    throw new Error('Can not access image data');\n  }\n  return image;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  OptionsDimensions,\n  OptionsFormat,\n  OptionsNormalizationParameters,\n  OptionsTensorFormat,\n  OptionsTensorLayout,\n  TensorFromGpuBufferOptions,\n  TensorFromImageBitmapOptions,\n  TensorFromImageDataOptions,\n  TensorFromImageElementOptions,\n  TensorFromMLTensorOptions,\n  TensorFromTextureOptions,\n  TensorFromUrlOptions,\n} from './tensor-factory.js';\nimport { Tensor } from './tensor-impl.js';\nimport { Tensor as TensorInterface } from './tensor.js';\n\ninterface BufferToTensorOptions\n  extends OptionsDimensions,\n    OptionsTensorLayout,\n    OptionsNormalizationParameters,\n    OptionsFormat,\n    OptionsTensorFormat {}\n\n/**\n * Create a new tensor object from image object\n *\n * @param buffer - Extracted image buffer data - assuming RGBA format\n * @param imageFormat - input image configuration - required configurations height, width, format\n * @param tensorFormat - output tensor configuration - Default is RGB format\n */\nexport const bufferToTensor = (buffer: Uint8ClampedArray | undefined, options: BufferToTensorOptions): Tensor => {\n  if (buffer === undefined) {\n    throw new Error('Image buffer must be defined');\n  }\n  if (options.height === undefined || options.width === undefined) {\n    throw new Error('Image height and width must be defined');\n  }\n  if (options.tensorLayout === 'NHWC') {\n    throw new Error('NHWC Tensor layout is not supported yet');\n  }\n\n  const { height, width } = options;\n\n  const norm = options.norm ?? { mean: 255, bias: 0 };\n  let normMean: [number, number, number, number];\n  let normBias: [number, number, number, number];\n\n  if (typeof norm.mean === 'number') {\n    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n  } else {\n    normMean = [norm.mean![0], norm.mean![1], norm.mean![2], norm.mean![3] ?? 255];\n  }\n\n  if (typeof norm.bias === 'number') {\n    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n  } else {\n    normBias = [norm.bias![0], norm.bias![1], norm.bias![2], norm.bias![3] ?? 0];\n  }\n\n  const inputformat = options.format !== undefined ? options.format : 'RGBA';\n  // default value is RGBA since imagedata and HTMLImageElement uses it\n\n  const outputformat =\n    options.tensorFormat !== undefined ? (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') : 'RGB';\n  const stride = height * width;\n  const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n\n  // Default pointer assignments\n  let step = 4,\n    rImagePointer = 0,\n    gImagePointer = 1,\n    bImagePointer = 2,\n    aImagePointer = 3;\n  let rTensorPointer = 0,\n    gTensorPointer = stride,\n    bTensorPointer = stride * 2,\n    aTensorPointer = -1;\n\n  // Updating the pointer assignments based on the input image format\n  if (inputformat === 'RGB') {\n    step = 3;\n    rImagePointer = 0;\n    gImagePointer = 1;\n    bImagePointer = 2;\n    aImagePointer = -1;\n  }\n\n  // Updating the pointer assignments based on the output tensor format\n  if (outputformat === 'RGBA') {\n    aTensorPointer = stride * 3;\n  } else if (outputformat === 'RBG') {\n    rTensorPointer = 0;\n    bTensorPointer = stride;\n    gTensorPointer = stride * 2;\n  } else if (outputformat === 'BGR') {\n    bTensorPointer = 0;\n    gTensorPointer = stride;\n    rTensorPointer = stride * 2;\n  }\n\n  for (\n    let i = 0;\n    i < stride;\n    i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step\n  ) {\n    float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n    float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n    float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n    if (aTensorPointer !== -1 && aImagePointer !== -1) {\n      float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n    }\n  }\n\n  // Float32Array -> ort.Tensor\n  const outputTensor =\n    outputformat === 'RGBA'\n      ? new Tensor('float32', float32Data, [1, 4, height, width])\n      : new Tensor('float32', float32Data, [1, 3, height, width]);\n  return outputTensor;\n};\n\n/**\n * implementation of Tensor.fromImage().\n */\nexport const tensorFromImage = async (\n  image: ImageData | HTMLImageElement | ImageBitmap | string,\n  options?:\n    | TensorFromImageDataOptions\n    | TensorFromImageElementOptions\n    | TensorFromImageBitmapOptions\n    | TensorFromUrlOptions,\n): Promise<Tensor> => {\n  // checking the type of image object\n  const isHTMLImageEle = typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement;\n  const isImageDataEle = typeof ImageData !== 'undefined' && image instanceof ImageData;\n  const isImageBitmap = typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap;\n  const isString = typeof image === 'string';\n\n  let data: Uint8ClampedArray | undefined;\n  let bufferToTensorOptions: BufferToTensorOptions = options ?? {};\n\n  const createCanvas = () => {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(1, 1);\n    } else {\n      throw new Error('Canvas is not supported');\n    }\n  };\n  const createCanvasContext = (canvas: HTMLCanvasElement | OffscreenCanvas) => {\n    if (typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement) {\n      return canvas.getContext('2d');\n    } else if (canvas instanceof OffscreenCanvas) {\n      return canvas.getContext('2d') as OffscreenCanvasRenderingContext2D;\n    } else {\n      return null;\n    }\n  };\n  // filling and checking image configuration options\n  if (isHTMLImageEle) {\n    // HTMLImageElement - image object - format is RGBA by default\n    const canvas = createCanvas();\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = createCanvasContext(canvas);\n\n    if (pixels2DContext != null) {\n      let height = image.height;\n      let width = image.width;\n      if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n        height = options.resizedHeight;\n        width = options.resizedWidth;\n      }\n\n      if (options !== undefined) {\n        bufferToTensorOptions = options;\n        if (options.tensorFormat !== undefined) {\n          throw new Error('Image input config format must be RGBA for HTMLImageElement');\n        } else {\n          bufferToTensorOptions.tensorFormat = 'RGBA';\n        }\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      } else {\n        bufferToTensorOptions.tensorFormat = 'RGBA';\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      }\n\n      pixels2DContext.drawImage(image, 0, 0);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isImageDataEle) {\n    let height: number;\n    let width: number;\n\n    if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n      height = options.resizedHeight;\n      width = options.resizedWidth;\n    } else {\n      height = image.height;\n      width = image.width;\n    }\n\n    if (options !== undefined) {\n      bufferToTensorOptions = options;\n    }\n    bufferToTensorOptions.format = 'RGBA';\n    bufferToTensorOptions.height = height;\n    bufferToTensorOptions.width = width;\n\n    if (options !== undefined) {\n      const tempCanvas = createCanvas();\n\n      tempCanvas.width = width;\n      tempCanvas.height = height;\n\n      const pixels2DContext = createCanvasContext(tempCanvas);\n\n      if (pixels2DContext != null) {\n        pixels2DContext.putImageData(image, 0, 0);\n        data = pixels2DContext.getImageData(0, 0, width, height).data;\n      } else {\n        throw new Error('Can not access image data');\n      }\n    } else {\n      data = image.data;\n    }\n  } else if (isImageBitmap) {\n    // ImageBitmap - image object - format must be provided by user\n    if (options === undefined) {\n      throw new Error('Please provide image config with format for Imagebitmap');\n    }\n\n    const canvas = createCanvas();\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = createCanvasContext(canvas);\n\n    if (pixels2DContext != null) {\n      const height = image.height;\n      const width = image.width;\n      pixels2DContext.drawImage(image, 0, 0, width, height);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n      bufferToTensorOptions.height = height;\n      bufferToTensorOptions.width = width;\n      return bufferToTensor(data, bufferToTensorOptions);\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isString) {\n    return new Promise((resolve, reject) => {\n      const canvas = createCanvas();\n      const context = createCanvasContext(canvas);\n      if (!image || !context) {\n        return reject();\n      }\n      const newImage = new Image();\n      newImage.crossOrigin = 'Anonymous';\n      newImage.src = image;\n      newImage.onload = () => {\n        canvas.width = newImage.width;\n        canvas.height = newImage.height;\n        context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n        const img = context.getImageData(0, 0, canvas.width, canvas.height);\n\n        bufferToTensorOptions.height = canvas.height;\n        bufferToTensorOptions.width = canvas.width;\n        resolve(bufferToTensor(img.data, bufferToTensorOptions));\n      };\n    });\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n\n  if (data !== undefined) {\n    return bufferToTensor(data, bufferToTensorOptions);\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n};\n\n/**\n * implementation of Tensor.fromTexture().\n */\nexport const tensorFromTexture = <T extends TensorInterface.TextureDataTypes>(\n  texture: TensorInterface.TextureType,\n  options: TensorFromTextureOptions<T>,\n): Tensor => {\n  const { width, height, download, dispose } = options;\n  // Always assume RGBAF32. TODO: support different texture format\n  const dims = [1, height, width, 4];\n  return new Tensor({ location: 'texture', type: 'float32', texture, dims, download, dispose });\n};\n\n/**\n * implementation of Tensor.fromGpuBuffer().\n */\nexport const tensorFromGpuBuffer = <T extends TensorInterface.GpuBufferDataTypes>(\n  gpuBuffer: TensorInterface.GpuBufferType,\n  options: TensorFromGpuBufferOptions<T>,\n): Tensor => {\n  const { dataType, dims, download, dispose } = options;\n  return new Tensor({ location: 'gpu-buffer', type: dataType ?? 'float32', gpuBuffer, dims, download, dispose });\n};\n\n/**\n * implementation of Tensor.fromMLTensor().\n */\nexport const tensorFromMLTensor = <T extends TensorInterface.MLTensorDataTypes>(\n  mlTensor: TensorInterface.MLTensorType,\n  options: TensorFromMLTensorOptions<T>,\n): Tensor => {\n  const { dataType, dims, download, dispose } = options;\n  return new Tensor({ location: 'ml-tensor', type: dataType ?? 'float32', mlTensor, dims, download, dispose });\n};\n\n/**\n * implementation of Tensor.fromPinnedBuffer().\n */\nexport const tensorFromPinnedBuffer = <T extends TensorInterface.CpuPinnedDataTypes>(\n  type: T,\n  buffer: TensorInterface.DataTypeMap[T],\n  dims?: readonly number[],\n): Tensor => new Tensor({ location: 'cpu-pinned', type, data: buffer, dims: dims ?? [buffer.length] });\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Tensor } from './tensor.js';\n\nexport type SupportedTypedArrayConstructors =\n  | Float32ArrayConstructor\n  | Uint8ArrayConstructor\n  | Int8ArrayConstructor\n  | Uint16ArrayConstructor\n  | Int16ArrayConstructor\n  | Int32ArrayConstructor\n  | BigInt64ArrayConstructor\n  | Uint8ArrayConstructor\n  | Float64ArrayConstructor\n  | Uint32ArrayConstructor\n  | BigUint64ArrayConstructor;\nexport type SupportedTypedArray = InstanceType<SupportedTypedArrayConstructors>;\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map<string, SupportedTypedArrayConstructors>([\n  ['float32', Float32Array],\n  ['uint8', Uint8Array],\n  ['int8', Int8Array],\n  ['uint16', Uint16Array],\n  ['int16', Int16Array],\n  ['int32', Int32Array],\n  ['bool', Uint8Array],\n  ['float64', Float64Array],\n  ['uint32', Uint32Array],\n  ['int4', Uint8Array],\n  ['uint4', Uint8Array],\n]);\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map<SupportedTypedArrayConstructors, Tensor.Type>([\n  [Float32Array, 'float32'],\n  [Uint8Array, 'uint8'],\n  [Int8Array, 'int8'],\n  [Uint16Array, 'uint16'],\n  [Int16Array, 'int16'],\n  [Int32Array, 'int32'],\n  [Float64Array, 'float64'],\n  [Uint32Array, 'uint32'],\n]);\n\n// the following code allows delaying execution of BigInt/Float16Array checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt/Float16Array\n// polyfill if available.\nlet isTypedArrayChecked = false;\nexport const checkTypedArray = () => {\n  if (!isTypedArrayChecked) {\n    isTypedArrayChecked = true;\n    const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && BigInt64Array.from;\n    const isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && BigUint64Array.from;\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-explicit-any\n    const Float16Array = (globalThis as any).Float16Array;\n    const isFloat16ArrayAvailable = typeof Float16Array !== 'undefined' && Float16Array.from;\n\n    if (isBigInt64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n    }\n    if (isBigUint64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n    }\n    if (isFloat16ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('float16', Float16Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(Float16Array, 'float16');\n    } else {\n      // if Float16Array is not available, use 'Uint16Array' to store the data.\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('float16', Uint16Array);\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  CpuPinnedConstructorParameters,\n  GpuBufferConstructorParameters,\n  MLTensorConstructorParameters,\n  TextureConstructorParameters,\n} from './tensor-factory.js';\nimport { Tensor } from './tensor-impl.js';\n\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nexport const calculateSize = (dims: readonly unknown[]): number => {\n  let size = 1;\n  for (let i = 0; i < dims.length; i++) {\n    const dim = dims[i];\n    if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n      throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n    }\n    if (dim < 0) {\n      throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n    }\n    size *= dim;\n  }\n  return size;\n};\n\n/**\n * implementation of Tensor.reshape()\n */\nexport const tensorReshape = (tensor: Tensor, dims: readonly number[]): Tensor => {\n  switch (tensor.location) {\n    case 'cpu':\n      return new Tensor(tensor.type, tensor.data, dims);\n    case 'cpu-pinned':\n      return new Tensor({\n        location: 'cpu-pinned',\n        data: tensor.data as CpuPinnedConstructorParameters['data'],\n        type: tensor.type as CpuPinnedConstructorParameters['type'],\n        dims,\n      });\n    case 'texture':\n      return new Tensor({\n        location: 'texture',\n        texture: tensor.texture,\n        type: tensor.type as TextureConstructorParameters['type'],\n        dims,\n      });\n    case 'gpu-buffer':\n      return new Tensor({\n        location: 'gpu-buffer',\n        gpuBuffer: tensor.gpuBuffer,\n        type: tensor.type as GpuBufferConstructorParameters['type'],\n        dims,\n      });\n    case 'ml-tensor':\n      return new Tensor({\n        location: 'ml-tensor',\n        mlTensor: tensor.mlTensor,\n        type: tensor.type as MLTensorConstructorParameters['type'],\n        dims,\n      });\n    default:\n      throw new Error(`tensorReshape: tensor location ${tensor.location} is not supported`);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { tensorToDataURL, tensorToImageData } from './tensor-conversion-impl.js';\nimport { TensorToDataUrlOptions, TensorToImageDataOptions } from './tensor-conversion.js';\nimport {\n  tensorFromGpuBuffer,\n  tensorFromImage,\n  tensorFromMLTensor,\n  tensorFromPinnedBuffer,\n  tensorFromTexture,\n} from './tensor-factory-impl.js';\nimport {\n  CpuPinnedConstructorParameters,\n  GpuBufferConstructorParameters,\n  MLTensorConstructorParameters,\n  TensorFromGpuBufferOptions,\n  TensorFromImageBitmapOptions,\n  TensorFromImageDataOptions,\n  TensorFromImageElementOptions,\n  TensorFromMLTensorOptions,\n  TensorFromTextureOptions,\n  TensorFromUrlOptions,\n  TextureConstructorParameters,\n} from './tensor-factory.js';\nimport {\n  checkTypedArray,\n  NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP,\n  NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP,\n  SupportedTypedArray,\n  SupportedTypedArrayConstructors,\n} from './tensor-impl-type-mapping.js';\nimport { calculateSize, tensorReshape } from './tensor-utils-impl.js';\nimport { Tensor as TensorInterface } from './tensor.js';\n\n// type aliases for those exported from Tensor interface\n\ntype TensorType = TensorInterface.Type;\ntype TensorDataType = TensorInterface.DataType;\ntype TensorDataLocation = TensorInterface.DataLocation;\ntype TensorTextureType = TensorInterface.TextureType;\ntype TensorGpuBufferType = TensorInterface.GpuBufferType;\ntype TensorMLTensorType = TensorInterface.MLTensorType;\n\n/**\n * the implementation of Tensor interface.\n *\n * @ignore\n */\nexport class Tensor implements TensorInterface {\n  // #region constructors\n\n  /**\n   * Construct a new CPU tensor object from the given type, data and dims.\n   */\n  constructor(\n    type: TensorType,\n    data: TensorDataType | Uint8ClampedArray | readonly string[] | readonly number[] | readonly boolean[],\n    dims?: readonly number[],\n  );\n  /**\n   * Construct a new CPU tensor object from the given data and dims. Type is inferred from data.\n   */\n  constructor(\n    data: TensorDataType | Uint8ClampedArray | readonly string[] | readonly boolean[],\n    dims?: readonly number[],\n  );\n  /**\n   * Construct a new tensor object from the pinned CPU data with the given type and dims.\n   *\n   * Tensor's location will be set to 'cpu-pinned'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: CpuPinnedConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGL texture with the given type and dims.\n   *\n   * Tensor's location will be set to 'texture'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: TextureConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGPU buffer with the given type and dims.\n   *\n   * Tensor's location will be set to 'gpu-buffer'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: GpuBufferConstructorParameters);\n\n  /**\n   * Construct a new tensor object from the WebNN MLTensor with the given type and dims.\n   *\n   * Tensor's location will be set to 'ml-tensor'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: MLTensorConstructorParameters);\n\n  /**\n   * implementation.\n   */\n  constructor(\n    arg0:\n      | TensorType\n      | TensorDataType\n      | Uint8ClampedArray\n      | readonly string[]\n      | readonly boolean[]\n      | CpuPinnedConstructorParameters\n      | TextureConstructorParameters\n      | GpuBufferConstructorParameters\n      | MLTensorConstructorParameters,\n    arg1?: TensorDataType | Uint8ClampedArray | readonly number[] | readonly string[] | readonly boolean[],\n    arg2?: readonly number[],\n  ) {\n    // perform one-time check for BigInt/Float16Array support\n    checkTypedArray();\n\n    let type: TensorType;\n    let dims: readonly number[];\n\n    if (typeof arg0 === 'object' && 'location' in arg0) {\n      //\n      // constructing tensor from specific location\n      //\n      this.dataLocation = arg0.location;\n      type = arg0.type;\n      dims = arg0.dims;\n      switch (arg0.location) {\n        case 'cpu-pinned': {\n          const expectedTypedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(type);\n          if (!expectedTypedArrayConstructor) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from pinned buffer`);\n          }\n          if (!(arg0.data instanceof expectedTypedArrayConstructor)) {\n            throw new TypeError(`buffer should be of type ${expectedTypedArrayConstructor.name}`);\n          }\n          this.cpuData = arg0.data;\n          break;\n        }\n        case 'texture': {\n          if (type !== 'float32') {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from texture`);\n          }\n          this.gpuTextureData = arg0.texture;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        case 'gpu-buffer': {\n          if (\n            type !== 'float32' &&\n            type !== 'float16' &&\n            type !== 'int32' &&\n            type !== 'int64' &&\n            type !== 'uint32' &&\n            type !== 'uint8' &&\n            type !== 'bool' &&\n            type !== 'uint4' &&\n            type !== 'int4'\n          ) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from gpu buffer`);\n          }\n          this.gpuBufferData = arg0.gpuBuffer;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        case 'ml-tensor': {\n          if (\n            type !== 'float32' &&\n            type !== 'float16' &&\n            type !== 'int32' &&\n            type !== 'int64' &&\n            type !== 'uint32' &&\n            type !== 'uint64' &&\n            type !== 'int8' &&\n            type !== 'uint8' &&\n            type !== 'bool' &&\n            type !== 'uint4' &&\n            type !== 'int4'\n          ) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from MLTensor`);\n          }\n          this.mlTensorData = arg0.mlTensor;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        default:\n          throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`);\n      }\n    } else {\n      //\n      // constructing tensor of location 'cpu'\n      //\n      let data: TensorDataType;\n      let maybeDims: typeof arg1 | typeof arg2;\n      // check whether arg0 is type or data\n      if (typeof arg0 === 'string') {\n        //\n        // Override: constructor(type, data, ...)\n        //\n        type = arg0;\n        maybeDims = arg2;\n        if (arg0 === 'string') {\n          // string tensor\n          if (!Array.isArray(arg1)) {\n            throw new TypeError(\"A string tensor's data must be a string array.\");\n          }\n          // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n          // error will be populated at inference\n          data = arg1;\n        } else {\n          // numeric tensor\n          const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n          if (typedArrayConstructor === undefined) {\n            throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n          }\n          if (Array.isArray(arg1)) {\n            if ((arg0 === 'float16' && typedArrayConstructor === Uint16Array) || arg0 === 'uint4' || arg0 === 'int4') {\n              // - 'float16':\n              //   When no Float16Array polyfill is used, we cannot create 'float16' tensor from number array.\n              //\n              //   Throw error here because when user try to use number array as data,\n              //   e.g. new Tensor('float16', [1, 2, 3, 4], dims)), it will actually call\n              //   Uint16Array.from(arg1) which generates wrong data.\n              //\n              // - 'uint4' and 'int4':\n              //   Uint8Array.from(arg1) will generate wrong data for 'uint4' and 'int4' tensor.\n              //\n              throw new TypeError(\n                `Creating a ${arg0} tensor from number array is not supported. Please use ${typedArrayConstructor.name} as data.`,\n              );\n            } else if (arg0 === 'uint64' || arg0 === 'int64') {\n              // use 'as any' here because:\n              // 1. TypeScript's check on type of 'Array.isArray()' does not work with readonly arrays.\n              // see https://github.com/microsoft/TypeScript/issues/17002\n              // 2. TypeScript's check on union type of '(BigInt64ArrayConstructor|BigUint64ArrayConstructor).from()'\n              // does not accept parameter mapFn.\n              // 3. parameters of 'SupportedTypedArrayConstructors.from()' does not match the requirement of the union\n              // type.\n\n              // assume 'arg1' is of type \"readonly number[]|readonly bigint[]\" here.\n\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1, BigInt);\n            } else {\n              // assume 'arg1' is of type \"readonly number[]\" here.\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1);\n            }\n          } else if (arg1 instanceof typedArrayConstructor) {\n            data = arg1;\n          } else if (arg1 instanceof Uint8ClampedArray) {\n            if (arg0 === 'uint8') {\n              data = Uint8Array.from(arg1);\n            } else {\n              throw new TypeError(`A Uint8ClampedArray tensor's data must be type of uint8`);\n            }\n          } else if (arg0 === 'float16' && arg1 instanceof Uint16Array && typedArrayConstructor !== Uint16Array) {\n            // when Float16Array is available and data is of type Uint16Array.\n            // We allow Uint16Array to be passed in as data for 'float16' tensor until Float16Array is generally\n            // supported in JavaScript environment.\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            data = new (globalThis as any).Float16Array(arg1.buffer, arg1.byteOffset, arg1.length);\n          } else {\n            throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n          }\n        }\n      } else {\n        //\n        // Override: constructor(data, ...)\n        //\n        maybeDims = arg1;\n        if (Array.isArray(arg0)) {\n          // only boolean[] and string[] is supported\n          if (arg0.length === 0) {\n            throw new TypeError('Tensor type cannot be inferred from an empty array.');\n          }\n          const firstElementType = typeof arg0[0];\n          if (firstElementType === 'string') {\n            type = 'string';\n            data = arg0;\n          } else if (firstElementType === 'boolean') {\n            type = 'bool';\n            // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n            // wrong type. We use 'as any' to make it happy.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            data = Uint8Array.from(arg0 as any[]);\n          } else {\n            throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n          }\n        } else if (arg0 instanceof Uint8ClampedArray) {\n          type = 'uint8';\n          data = Uint8Array.from(arg0);\n        } else {\n          // get tensor type from TypedArray\n          const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(\n            arg0.constructor as SupportedTypedArrayConstructors,\n          );\n          if (mappedType === undefined) {\n            throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n          }\n          type = mappedType;\n          data = arg0 as SupportedTypedArray;\n        }\n      }\n\n      // type and data is processed, now processing dims\n      if (maybeDims === undefined) {\n        // assume 1-D tensor if dims omitted\n        maybeDims = [data.length];\n      } else if (!Array.isArray(maybeDims)) {\n        throw new TypeError(\"A tensor's dims must be a number array\");\n      }\n      dims = maybeDims as readonly number[];\n\n      this.cpuData = data;\n      this.dataLocation = 'cpu';\n    }\n\n    // perform check on dims\n    const size = calculateSize(dims);\n    // if data is on CPU, check whether data length matches tensor size\n    if (this.cpuData && size !== this.cpuData.length) {\n      if ((type === 'uint4' || type === 'int4') && Math.ceil(size / 2) === this.cpuData.length) {\n        // for (u)int4, the data length is half of the tensor size. So we check this special case when size is odd.\n      } else {\n        throw new Error(`Tensor's size(${size}) does not match data length(${this.cpuData.length}).`);\n      }\n    }\n\n    this.type = type;\n    this.dims = dims;\n    this.size = size;\n  }\n  // #endregion\n\n  // #region factory\n  static async fromImage(\n    image: ImageData | HTMLImageElement | ImageBitmap | string,\n    options?:\n      | TensorFromImageDataOptions\n      | TensorFromImageElementOptions\n      | TensorFromImageBitmapOptions\n      | TensorFromUrlOptions,\n  ): Promise<TensorInterface> {\n    return tensorFromImage(image, options);\n  }\n\n  static fromTexture<T extends TensorInterface.TextureDataTypes>(\n    texture: TensorTextureType,\n    options: TensorFromTextureOptions<T>,\n  ): TensorInterface {\n    return tensorFromTexture(texture, options);\n  }\n\n  static fromGpuBuffer<T extends TensorInterface.GpuBufferDataTypes>(\n    gpuBuffer: TensorGpuBufferType,\n    options: TensorFromGpuBufferOptions<T>,\n  ): TensorInterface {\n    return tensorFromGpuBuffer(gpuBuffer, options);\n  }\n\n  static fromMLTensor<T extends TensorInterface.MLTensorDataTypes>(\n    mlTensor: TensorMLTensorType,\n    options: TensorFromMLTensorOptions<T>,\n  ): TensorInterface {\n    return tensorFromMLTensor(mlTensor, options);\n  }\n\n  static fromPinnedBuffer<T extends TensorInterface.CpuPinnedDataTypes>(\n    type: T,\n    buffer: TensorInterface.DataTypeMap[T],\n    dims?: readonly number[],\n  ): Tensor {\n    return tensorFromPinnedBuffer(type, buffer, dims);\n  }\n\n  // #endregion\n\n  // #region conversions\n  toDataURL(options?: TensorToDataUrlOptions): string {\n    return tensorToDataURL(this, options);\n  }\n\n  toImageData(options?: TensorToImageDataOptions): ImageData {\n    return tensorToImageData(this, options);\n  }\n  // #endregion\n\n  // #region public fields\n  readonly dims: readonly number[];\n  readonly type: TensorType;\n  readonly size: number;\n  // #endregion\n\n  // #region private fields\n\n  /**\n   * stores the location of the data.\n   */\n  private dataLocation: TensorDataLocation;\n\n  /**\n   * stores the data on CPU, if location is 'cpu' or 'cpu-pinned'. otherwise empty.\n   */\n  private cpuData?: TensorDataType;\n\n  /**\n   * stores the underlying texture when location is 'texture'. otherwise empty.\n   */\n  private gpuTextureData?: TensorTextureType;\n\n  /**\n   * stores the underlying GPU buffer when location is 'gpu-buffer'. otherwise empty.\n   */\n  private gpuBufferData?: TensorGpuBufferType;\n\n  /**\n   * stores the underlying WebNN MLTensor when location is 'ml-tensor'. otherwise empty.\n   */\n  private mlTensorData?: TensorMLTensorType;\n\n  /**\n   * stores an optional downloader function to download data from GPU to CPU.\n   */\n  private downloader?(): Promise<TensorDataType>;\n\n  /**\n   * a flag indicating whether the data is being downloaded from GPU to CPU.\n   */\n  private isDownloading?: boolean;\n\n  /**\n   * stores an optional disposer function to dispose the underlying data.\n   */\n  private disposer?(): void;\n  // #endregion\n\n  // #region properties\n  get data(): TensorDataType {\n    this.ensureValid();\n    if (!this.cpuData) {\n      throw new Error(\n        'The data is not on CPU. Use `getData()` to download GPU data to CPU, ' +\n          'or use `texture` or `gpuBuffer` property to access the GPU data directly.',\n      );\n    }\n    return this.cpuData;\n  }\n\n  get location(): TensorDataLocation {\n    return this.dataLocation;\n  }\n\n  get texture(): TensorTextureType {\n    this.ensureValid();\n    if (!this.gpuTextureData) {\n      throw new Error('The data is not stored as a WebGL texture.');\n    }\n    return this.gpuTextureData;\n  }\n\n  get gpuBuffer(): TensorGpuBufferType {\n    this.ensureValid();\n    if (!this.gpuBufferData) {\n      throw new Error('The data is not stored as a WebGPU buffer.');\n    }\n    return this.gpuBufferData;\n  }\n\n  get mlTensor(): TensorMLTensorType {\n    this.ensureValid();\n    if (!this.mlTensorData) {\n      throw new Error('The data is not stored as a WebNN MLTensor.');\n    }\n    return this.mlTensorData;\n  }\n  // #endregion\n\n  // #region methods\n\n  async getData(releaseData?: boolean): Promise<TensorDataType> {\n    this.ensureValid();\n    switch (this.dataLocation) {\n      case 'cpu':\n      case 'cpu-pinned':\n        return this.data;\n      case 'texture':\n      case 'gpu-buffer':\n      case 'ml-tensor': {\n        if (!this.downloader) {\n          throw new Error('The current tensor is not created with a specified data downloader.');\n        }\n        if (this.isDownloading) {\n          throw new Error('The current tensor is being downloaded.');\n        }\n        try {\n          this.isDownloading = true;\n          const data = await this.downloader();\n          this.downloader = undefined;\n          this.dataLocation = 'cpu';\n          this.cpuData = data;\n\n          if (releaseData && this.disposer) {\n            this.disposer();\n            this.disposer = undefined;\n          }\n\n          return data;\n        } finally {\n          this.isDownloading = false;\n        }\n      }\n      default:\n        throw new Error(`cannot get data from location: ${this.dataLocation}`);\n    }\n  }\n\n  dispose(): void {\n    if (this.isDownloading) {\n      throw new Error('The current tensor is being downloaded.');\n    }\n\n    if (this.disposer) {\n      this.disposer();\n      this.disposer = undefined;\n    }\n    this.cpuData = undefined;\n    this.gpuTextureData = undefined;\n    this.gpuBufferData = undefined;\n    this.mlTensorData = undefined;\n    this.downloader = undefined;\n    this.isDownloading = undefined;\n\n    this.dataLocation = 'none';\n  }\n\n  // #endregion\n\n  // #region tensor utilities\n  private ensureValid(): void {\n    if (this.dataLocation === 'none') {\n      throw new Error('The tensor is disposed.');\n    }\n  }\n\n  reshape(dims: readonly number[]): TensorInterface {\n    this.ensureValid();\n    if (this.downloader || this.disposer) {\n      throw new Error('Cannot reshape a tensor that owns GPU resource.');\n    }\n    return tensorReshape(this, dims);\n  }\n  // #endregion\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { TensorFactory } from './tensor-factory.js';\nimport { Tensor as TensorImpl } from './tensor-impl.js';\nimport { TypedTensorUtils } from './tensor-utils.js';\nimport { TryGetGlobalType } from './type-helper.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\n/**\n * represent a basic tensor with specified dimensions and data type.\n */\ninterface TypedTensorBase<T extends Tensor.Type> {\n  /**\n   * Get the dimensions of the tensor.\n   */\n  readonly dims: readonly number[];\n  /**\n   * Get the data type of the tensor.\n   */\n  readonly type: T;\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is not on CPU (eg. it's in the form of WebGL texture or WebGPU buffer), throw error.\n   */\n  readonly data: Tensor.DataTypeMap[T];\n  /**\n   * Get the location of the data.\n   */\n  readonly location: Tensor.DataLocation;\n  /**\n   * Get the WebGL texture that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGL texture, throw error.\n   */\n  readonly texture: Tensor.TextureType;\n  /**\n   * Get the WebGPU buffer that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGPU buffer, throw error.\n   */\n  readonly gpuBuffer: Tensor.GpuBufferType;\n\n  /**\n   * Get the WebNN MLTensor that holds the tensor data.\n   *\n   * If the data is not in a WebNN MLTensor, throw error.\n   */\n  readonly mlTensor: Tensor.MLTensorType;\n\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is on CPU, returns the data immediately.\n   * If the data is on GPU, downloads the data and returns the promise.\n   *\n   * @param releaseData - whether release the data on GPU. Ignore if data is already on CPU.\n   */\n  getData(releaseData?: boolean): Promise<Tensor.DataTypeMap[T]>;\n\n  /**\n   * Dispose the tensor data.\n   *\n   * If the data is on CPU, remove its internal reference to the underlying data.\n   * If the data is on GPU, release the data on GPU.\n   *\n   * After calling this function, the tensor is considered no longer valid. Its location will be set to 'none'.\n   */\n  dispose(): void;\n}\n\nexport declare namespace Tensor {\n  interface DataTypeMap {\n    float32: Float32Array;\n    uint8: Uint8Array;\n    int8: Int8Array;\n    uint16: Uint16Array;\n    int16: Int16Array;\n    int32: Int32Array;\n    int64: BigInt64Array;\n    string: string[];\n    bool: Uint8Array;\n    float16: Uint16Array; // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: Float64Array;\n    uint32: Uint32Array;\n    uint64: BigUint64Array;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n    uint4: Uint8Array;\n    int4: Int8Array;\n  }\n\n  interface ElementTypeMap {\n    float32: number;\n    uint8: number;\n    int8: number;\n    uint16: number;\n    int16: number;\n    int32: number;\n    int64: bigint;\n    string: string;\n    bool: boolean;\n    float16: number; // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: number;\n    uint32: number;\n    uint64: bigint;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n    uint4: number;\n    int4: number;\n  }\n\n  type DataType = DataTypeMap[Type];\n  type ElementType = ElementTypeMap[Type];\n\n  /**\n   * supported data types for constructing a tensor from a pinned CPU buffer\n   */\n  export type CpuPinnedDataTypes = Exclude<Tensor.Type, 'string'>;\n\n  /**\n   * type alias for WebGL texture\n   */\n  export type TextureType = WebGLTexture;\n\n  /**\n   * supported data types for constructing a tensor from a WebGL texture\n   */\n  export type TextureDataTypes = 'float32';\n\n  type GpuBufferTypeFallback = { size: number; mapState: 'unmapped' | 'pending' | 'mapped' };\n  /**\n   * type alias for WebGPU buffer\n   */\n  export type GpuBufferType = TryGetGlobalType<'GPUBuffer', GpuBufferTypeFallback>;\n\n  type MLTensorTypeFallback = { destroy(): void };\n  /**\n   * type alias for WebNN MLTensor\n   *\n   * The specification for WebNN's MLTensor is currently in flux.\n   */\n  export type MLTensorType = TryGetGlobalType<'MLTensor', MLTensorTypeFallback>;\n\n  /**\n   * supported data types for constructing a tensor from a WebGPU buffer\n   */\n  export type GpuBufferDataTypes = 'float32' | 'float16' | 'int32' | 'int64' | 'uint32' | 'uint8' | 'bool';\n\n  /**\n   * supported data types for constructing a tensor from a WebNN MLTensor\n   */\n  export type MLTensorDataTypes =\n    | 'float32'\n    | 'float16'\n    | 'int8'\n    | 'uint8'\n    | 'int32'\n    | 'uint32'\n    | 'int64'\n    | 'uint64'\n    | 'bool'\n    | 'uint4'\n    | 'int4';\n\n  /**\n   * represent where the tensor data is stored\n   */\n  export type DataLocation = 'none' | 'cpu' | 'cpu-pinned' | 'texture' | 'gpu-buffer' | 'ml-tensor';\n\n  /**\n   * represent the data type of a tensor\n   */\n  export type Type = keyof DataTypeMap;\n}\n\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface TypedTensor<T extends Tensor.Type> extends TypedTensorBase<T>, TypedTensorUtils<T> {}\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface Tensor extends TypedTensorBase<Tensor.Type>, TypedTensorUtils<Tensor.Type> {}\n\n/**\n * type TensorConstructor defines the constructors of 'Tensor' to create CPU tensor instances.\n */\nexport interface TensorConstructor extends TensorFactory {\n  // #region CPU tensor - specify element type\n  /**\n   * Construct a new string tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (\n    type: 'string',\n    data: Tensor.DataTypeMap['string'] | readonly string[],\n    dims?: readonly number[],\n  ): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (\n    type: 'bool',\n    data: Tensor.DataTypeMap['bool'] | readonly boolean[],\n    dims?: readonly number[],\n  ): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new uint8 tensor object from a Uint8ClampedArray, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (type: 'uint8', data: Uint8ClampedArray, dims?: readonly number[]): TypedTensor<'uint8'>;\n\n  /**\n   * Construct a new 64-bit integer typed tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new <T extends 'uint64' | 'int64'>(\n    type: T,\n    data: Tensor.DataTypeMap[T] | readonly bigint[] | readonly number[],\n    dims?: readonly number[],\n  ): TypedTensor<T>;\n\n  /**\n   * Construct a new numeric tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new <T extends Exclude<Tensor.Type, 'string' | 'bool' | 'uint64' | 'int64'>>(\n    type: T,\n    data: Tensor.DataTypeMap[T] | readonly number[],\n    dims?: readonly number[],\n  ): TypedTensor<T>;\n  // #endregion\n\n  // #region CPU tensor - infer element types\n\n  /**\n   * Construct a new float32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Float32Array, dims?: readonly number[]): TypedTensor<'float32'>;\n\n  /**\n   * Construct a new int8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Int8Array, dims?: readonly number[]): TypedTensor<'int8'>;\n\n  /**\n   * Construct a new uint8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Uint8Array, dims?: readonly number[]): TypedTensor<'uint8'>;\n\n  /**\n   * Construct a new uint8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Uint8ClampedArray, dims?: readonly number[]): TypedTensor<'uint8'>;\n\n  /**\n   * Construct a new uint16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Uint16Array, dims?: readonly number[]): TypedTensor<'uint16'>;\n\n  /**\n   * Construct a new int16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Int16Array, dims?: readonly number[]): TypedTensor<'int16'>;\n\n  /**\n   * Construct a new int32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Int32Array, dims?: readonly number[]): TypedTensor<'int32'>;\n\n  /**\n   * Construct a new int64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: BigInt64Array, dims?: readonly number[]): TypedTensor<'int64'>;\n\n  /**\n   * Construct a new string tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: readonly string[], dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new float64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Float64Array, dims?: readonly number[]): TypedTensor<'float64'>;\n\n  /**\n   * Construct a new uint32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Uint32Array, dims?: readonly number[]): TypedTensor<'uint32'>;\n\n  /**\n   * Construct a new uint64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: BigUint64Array, dims?: readonly number[]): TypedTensor<'uint64'>;\n\n  // #endregion\n\n  // #region CPU tensor - fall back to non-generic tensor type declaration\n\n  /**\n   * Construct a new tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (\n    type: Tensor.Type,\n    data: Tensor.DataType | readonly number[] | readonly string[] | readonly bigint[] | readonly boolean[],\n    dims?: readonly number[],\n  ): Tensor;\n\n  /**\n   * Construct a new tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Tensor.DataType, dims?: readonly number[]): Tensor;\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl as TensorConstructor;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { env } from './env-impl.js';\n\n/**\n * @ignore\n */\nexport const TRACE = (deviceType: string, label: string) => {\n  if (typeof env.trace === 'undefined' ? !env.wasm.trace : !env.trace) {\n    return;\n  }\n  // eslint-disable-next-line no-console\n  console.timeStamp(`${deviceType}::ORT::${label}`);\n};\n\nconst TRACE_FUNC = (msg: string, extraMsg?: string) => {\n  const stack = new Error().stack?.split(/\\r\\n|\\r|\\n/g) || [];\n  let hasTraceFunc = false;\n  for (let i = 0; i < stack.length; i++) {\n    if (hasTraceFunc && !stack[i].includes('TRACE_FUNC')) {\n      let label = `FUNC_${msg}::${stack[i].trim().split(' ')[1]}`;\n      if (extraMsg) {\n        label += `::${extraMsg}`;\n      }\n      TRACE('CPU', label);\n      return;\n    }\n    if (stack[i].includes('TRACE_FUNC')) {\n      hasTraceFunc = true;\n    }\n  }\n};\n\n/**\n * @ignore\n */\nexport const TRACE_FUNC_BEGIN = (extraMsg?: string) => {\n  if (typeof env.trace === 'undefined' ? !env.wasm.trace : !env.trace) {\n    return;\n  }\n  TRACE_FUNC('BEGIN', extraMsg);\n};\n\n/**\n * @ignore\n */\nexport const TRACE_FUNC_END = (extraMsg?: string) => {\n  if (typeof env.trace === 'undefined' ? !env.wasm.trace : !env.trace) {\n    return;\n  }\n  TRACE_FUNC('END', extraMsg);\n};\n\n/**\n * @ignore\n */\nexport const TRACE_EVENT_BEGIN = (extraMsg?: string) => {\n  if (typeof env.trace === 'undefined' ? !env.wasm.trace : !env.trace) {\n    return;\n  }\n  // eslint-disable-next-line no-console\n  console.time(`ORT::${extraMsg}`);\n};\n\n/**\n * @ignore\n */\nexport const TRACE_EVENT_END = (extraMsg?: string) => {\n  if (typeof env.trace === 'undefined' ? !env.wasm.trace : !env.trace) {\n    return;\n  }\n  // eslint-disable-next-line no-console\n  console.timeEnd(`ORT::${extraMsg}`);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { resolveBackendAndExecutionProviders } from './backend-impl.js';\nimport { InferenceSessionHandler } from './backend.js';\nimport { InferenceSession as InferenceSessionInterface } from './inference-session.js';\nimport { OnnxValue } from './onnx-value.js';\nimport { Tensor } from './tensor.js';\nimport { TRACE_FUNC_BEGIN, TRACE_FUNC_END, TRACE_EVENT_BEGIN, TRACE_EVENT_END } from './trace.js';\n\ntype SessionOptions = InferenceSessionInterface.SessionOptions;\ntype RunOptions = InferenceSessionInterface.RunOptions;\ntype FeedsType = InferenceSessionInterface.FeedsType;\ntype FetchesType = InferenceSessionInterface.FetchesType;\ntype ReturnType = InferenceSessionInterface.ReturnType;\n\nexport class InferenceSession implements InferenceSessionInterface {\n  private constructor(handler: InferenceSessionHandler) {\n    this.handler = handler;\n  }\n  run(feeds: FeedsType, options?: RunOptions): Promise<ReturnType>;\n  run(feeds: FeedsType, fetches: FetchesType, options?: RunOptions): Promise<ReturnType>;\n  async run(feeds: FeedsType, arg1?: FetchesType | RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    TRACE_FUNC_BEGIN();\n    TRACE_EVENT_BEGIN('InferenceSession.run');\n    const fetches: { [name: string]: OnnxValue | null } = {};\n    let options: RunOptions = {};\n    // check inputs\n    if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n      throw new TypeError(\n        \"'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.\",\n      );\n    }\n\n    let isFetchesEmpty = true;\n    // determine which override is being used\n    if (typeof arg1 === 'object') {\n      if (arg1 === null) {\n        throw new TypeError('Unexpected argument[1]: cannot be null.');\n      }\n      if (arg1 instanceof Tensor) {\n        throw new TypeError(\"'fetches' cannot be a Tensor\");\n      }\n\n      if (Array.isArray(arg1)) {\n        if (arg1.length === 0) {\n          throw new TypeError(\"'fetches' cannot be an empty array.\");\n        }\n        isFetchesEmpty = false;\n        // output names\n        for (const name of arg1) {\n          if (typeof name !== 'string') {\n            throw new TypeError(\"'fetches' must be a string array or an object.\");\n          }\n          if (this.outputNames.indexOf(name) === -1) {\n            throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n          }\n          fetches[name] = null;\n        }\n\n        if (typeof arg2 === 'object' && arg2 !== null) {\n          options = arg2;\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError(\"'options' must be an object.\");\n        }\n      } else {\n        // decide whether arg1 is fetches or options\n        // if any output name is present and its value is valid OnnxValue, we consider it fetches\n        let isFetches = false;\n        const arg1Keys = Object.getOwnPropertyNames(arg1);\n        for (const name of this.outputNames) {\n          if (arg1Keys.indexOf(name) !== -1) {\n            const v = (arg1 as InferenceSessionInterface.NullableOnnxValueMapType)[name];\n            if (v === null || v instanceof Tensor) {\n              isFetches = true;\n              isFetchesEmpty = false;\n              fetches[name] = v;\n            }\n          }\n        }\n\n        if (isFetches) {\n          if (typeof arg2 === 'object' && arg2 !== null) {\n            options = arg2;\n          } else if (typeof arg2 !== 'undefined') {\n            throw new TypeError(\"'options' must be an object.\");\n          }\n        } else {\n          options = arg1 as RunOptions;\n        }\n      }\n    } else if (typeof arg1 !== 'undefined') {\n      throw new TypeError(\"Unexpected argument[1]: must be 'fetches' or 'options'.\");\n    }\n\n    // check if all inputs are in feed\n    for (const name of this.inputNames) {\n      if (typeof feeds[name] === 'undefined') {\n        throw new Error(`input '${name}' is missing in 'feeds'.`);\n      }\n    }\n\n    // if no fetches is specified, we use the full output names list\n    if (isFetchesEmpty) {\n      for (const name of this.outputNames) {\n        fetches[name] = null;\n      }\n    }\n\n    // feeds, fetches and options are prepared\n\n    const results = await this.handler.run(feeds, fetches, options);\n    const returnValue: { [name: string]: OnnxValue } = {};\n    for (const key in results) {\n      if (Object.hasOwnProperty.call(results, key)) {\n        const result = results[key];\n        if (result instanceof Tensor) {\n          returnValue[key] = result;\n        } else {\n          returnValue[key] = new Tensor(result.type, result.data, result.dims);\n        }\n      }\n    }\n    TRACE_EVENT_END('InferenceSession.run');\n    TRACE_FUNC_END();\n    return returnValue;\n  }\n\n  async release(): Promise<void> {\n    return this.handler.dispose();\n  }\n\n  static create(path: string, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(\n    buffer: ArrayBufferLike,\n    byteOffset: number,\n    byteLength?: number,\n    options?: SessionOptions,\n  ): Promise<InferenceSessionInterface>;\n  static create(buffer: Uint8Array, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static async create(\n    arg0: string | ArrayBufferLike | Uint8Array,\n    arg1?: SessionOptions | number,\n    arg2?: number,\n    arg3?: SessionOptions,\n  ): Promise<InferenceSessionInterface> {\n    TRACE_FUNC_BEGIN();\n    TRACE_EVENT_BEGIN('InferenceSession.create');\n    // either load from a file or buffer\n    let filePathOrUint8Array: string | Uint8Array;\n    let options: SessionOptions = {};\n\n    if (typeof arg0 === 'string') {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError(\"'options' must be an object.\");\n      }\n    } else if (arg0 instanceof Uint8Array) {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError(\"'options' must be an object.\");\n      }\n    } else if (\n      arg0 instanceof ArrayBuffer ||\n      (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)\n    ) {\n      const buffer = arg0;\n      let byteOffset = 0;\n      let byteLength = arg0.byteLength;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 === 'number') {\n        byteOffset = arg1;\n        if (!Number.isSafeInteger(byteOffset)) {\n          throw new RangeError(\"'byteOffset' must be an integer.\");\n        }\n        if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n          throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n        }\n        byteLength = arg0.byteLength - byteOffset;\n        if (typeof arg2 === 'number') {\n          byteLength = arg2;\n          if (!Number.isSafeInteger(byteLength)) {\n            throw new RangeError(\"'byteLength' must be an integer.\");\n          }\n          if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n            throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n          }\n          if (typeof arg3 === 'object' && arg3 !== null) {\n            options = arg3;\n          } else if (typeof arg3 !== 'undefined') {\n            throw new TypeError(\"'options' must be an object.\");\n          }\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError(\"'byteLength' must be a number.\");\n        }\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError(\"'options' must be an object.\");\n      }\n      filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n    } else {\n      throw new TypeError(\"Unexpected argument[0]: must be 'path' or 'buffer'.\");\n    }\n\n    // resolve backend, update session options with validated EPs, and create session handler\n    const [backend, optionsWithValidatedEPs] = await resolveBackendAndExecutionProviders(options);\n    const handler = await backend.createInferenceSessionHandler(filePathOrUint8Array, optionsWithValidatedEPs);\n    TRACE_EVENT_END('InferenceSession.create');\n    TRACE_FUNC_END();\n    return new InferenceSession(handler);\n  }\n\n  startProfiling(): void {\n    this.handler.startProfiling();\n  }\n  endProfiling(): void {\n    this.handler.endProfiling();\n  }\n\n  get inputNames(): readonly string[] {\n    return this.handler.inputNames;\n  }\n  get outputNames(): readonly string[] {\n    return this.handler.outputNames;\n  }\n\n  get inputMetadata(): readonly InferenceSessionInterface.ValueMetadata[] {\n    return this.handler.inputMetadata;\n  }\n\n  get outputMetadata(): readonly InferenceSessionInterface.ValueMetadata[] {\n    return this.handler.outputMetadata;\n  }\n\n  private handler: InferenceSessionHandler;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { InferenceSession as InferenceSessionImpl } from './inference-session-impl.js';\nimport { OnnxModelOptions } from './onnx-model.js';\nimport { OnnxValue, OnnxValueDataLocation } from './onnx-value.js';\nimport type { Tensor } from './tensor.js';\nimport { TryGetGlobalType } from './type-helper.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nexport declare namespace InferenceSession {\n  // #region input/output types\n\n  type OnnxValueMapType = { readonly [name: string]: OnnxValue };\n  type NullableOnnxValueMapType = { readonly [name: string]: OnnxValue | null };\n\n  /**\n   * A feeds (model inputs) is an object that uses input names as keys and OnnxValue as corresponding values.\n   */\n  type FeedsType = OnnxValueMapType;\n\n  /**\n   * A fetches (model outputs) could be one of the following:\n   *\n   * - Omitted. Use model's output names definition.\n   * - An array of string indicating the output names.\n   * - An object that use output names as keys and OnnxValue or null as corresponding values.\n   *\n   * @remark\n   * different from input argument, in output, OnnxValue is optional. If an OnnxValue is present it will be\n   * used as a pre-allocated value by the inference engine; if omitted, inference engine will allocate buffer\n   * internally.\n   */\n  type FetchesType = readonly string[] | NullableOnnxValueMapType;\n\n  /**\n   * A inferencing return type is an object that uses output names as keys and OnnxValue as corresponding values.\n   */\n  type ReturnType = OnnxValueMapType;\n\n  // #endregion\n\n  // #region session options\n\n  /**\n   * A set of configurations for session behavior.\n   */\n  export interface SessionOptions extends OnnxModelOptions {\n    /**\n     * An array of execution provider options.\n     *\n     * An execution provider option can be a string indicating the name of the execution provider,\n     * or an object of corresponding type.\n     */\n    executionProviders?: readonly ExecutionProviderConfig[];\n\n    /**\n     * The intra OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    intraOpNumThreads?: number;\n\n    /**\n     * The inter OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    interOpNumThreads?: number;\n\n    /**\n     * The free dimension override.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    freeDimensionOverrides?: { readonly [dimensionName: string]: number };\n\n    /**\n     * The optimization level.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    graphOptimizationLevel?: 'disabled' | 'basic' | 'extended' | 'layout' | 'all';\n\n    /**\n     * Whether enable CPU memory arena.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableCpuMemArena?: boolean;\n\n    /**\n     * Whether enable memory pattern.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableMemPattern?: boolean;\n\n    /**\n     * Execution mode.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    executionMode?: 'sequential' | 'parallel';\n\n    /**\n     * Optimized model file path.\n     *\n     * If this setting is specified, the optimized model will be dumped. In browser, a blob will be created\n     * with a pop-up window.\n     */\n    optimizedModelFilePath?: string;\n\n    /**\n     * Whether enable profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    enableProfiling?: boolean;\n\n    /**\n     * File prefix for profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    profileFilePrefix?: string;\n\n    /**\n     * Log ID.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logId?: string;\n\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0 | 1 | 2 | 3 | 4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Specify string as a preferred data location for all outputs, or an object that use output names as keys and a\n     * preferred data location as corresponding values.\n     *\n     * This setting is available only in ONNXRuntime Web for WebGL and WebGPU EP.\n     */\n    preferredOutputLocation?: OnnxValueDataLocation | { readonly [outputName: string]: OnnxValueDataLocation };\n\n    /**\n     * Whether enable graph capture.\n     * This setting is available only in ONNXRuntime Web for WebGPU EP.\n     */\n    enableGraphCapture?: boolean;\n\n    /**\n     * Store configurations for a session. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_session_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     * ```js\n     * extra: {\n     *   session: {\n     *     set_denormal_as_zero: \"1\",\n     *     disable_prepacking: \"1\"\n     *   },\n     *   optimization: {\n     *     enable_gelu_approximation: \"1\"\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #region execution providers\n\n  // Currently, we have the following backends to support execution providers:\n  // Backend Node.js binding: supports 'cpu', 'dml' (win32), 'coreml' (macOS) and 'cuda' (linux).\n  // Backend WebAssembly: supports 'cpu', 'wasm', 'webgpu' and 'webnn'.\n  // Backend ONNX.js: supports 'webgl'.\n  // Backend React Native: supports 'cpu', 'xnnpack', 'coreml' (iOS), 'nnapi' (Android).\n  interface ExecutionProviderOptionMap {\n    coreml: CoreMLExecutionProviderOption;\n    cpu: CpuExecutionProviderOption;\n    cuda: CudaExecutionProviderOption;\n    dml: DmlExecutionProviderOption;\n    nnapi: NnapiExecutionProviderOption;\n    tensorrt: TensorRtExecutionProviderOption;\n    wasm: WebAssemblyExecutionProviderOption;\n    webgl: WebGLExecutionProviderOption;\n    webgpu: WebGpuExecutionProviderOption;\n    webnn: WebNNExecutionProviderOption;\n    qnn: QnnExecutionProviderOption;\n    xnnpack: XnnpackExecutionProviderOption;\n  }\n\n  type ExecutionProviderName = keyof ExecutionProviderOptionMap;\n  type ExecutionProviderConfig =\n    | ExecutionProviderOptionMap[ExecutionProviderName]\n    | ExecutionProviderOption\n    | ExecutionProviderName\n    | string;\n\n  export interface ExecutionProviderOption {\n    readonly name: string;\n  }\n  export interface CpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cpu';\n    useArena?: boolean;\n  }\n  export interface CudaExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cuda';\n    deviceId?: number;\n  }\n  export interface DmlExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'dml';\n    deviceId?: number;\n  }\n  export interface TensorRtExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'tensorrt';\n    deviceId?: number;\n  }\n  export interface WebAssemblyExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'wasm';\n  }\n  export interface WebGLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgl';\n    // TODO: add flags\n  }\n  export interface XnnpackExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'xnnpack';\n  }\n  export interface WebGpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgpu';\n    preferredLayout?: 'NCHW' | 'NHWC';\n  }\n\n  // #region WebNN options\n\n  interface WebNNExecutionProviderName extends ExecutionProviderOption {\n    readonly name: 'webnn';\n  }\n\n  /**\n   * Represents a set of options for creating a WebNN MLContext.\n   *\n   * @see https://www.w3.org/TR/webnn/#dictdef-mlcontextoptions\n   */\n  export interface WebNNContextOptions {\n    deviceType?: 'cpu' | 'gpu' | 'npu';\n    numThreads?: number;\n    powerPreference?: 'default' | 'low-power' | 'high-performance';\n  }\n\n  /**\n   * Represents a set of options for WebNN execution provider without MLContext.\n   */\n  export interface WebNNOptionsWithoutMLContext extends WebNNExecutionProviderName, WebNNContextOptions {\n    context?: never;\n  }\n\n  /**\n   * Represents a set of options for WebNN execution provider with MLContext.\n   *\n   * When MLContext is provided, the deviceType is also required so that the WebNN EP can determine the preferred\n   * channel layout.\n   *\n   * @see https://www.w3.org/TR/webnn/#dom-ml-createcontext\n   */\n  export interface WebNNOptionsWithMLContext\n    extends WebNNExecutionProviderName,\n      Omit<WebNNContextOptions, 'deviceType'>,\n      Required<Pick<WebNNContextOptions, 'deviceType'>> {\n    context: TryGetGlobalType<'MLContext'>;\n  }\n\n  /**\n   * Represents a set of options for WebNN execution provider with MLContext which is created from GPUDevice.\n   *\n   * @see https://www.w3.org/TR/webnn/#dom-ml-createcontext-gpudevice\n   */\n  export interface WebNNOptionsWebGpu extends WebNNExecutionProviderName {\n    context: TryGetGlobalType<'MLContext'>;\n    gpuDevice: TryGetGlobalType<'GPUDevice'>;\n  }\n\n  /**\n   * Options for WebNN execution provider.\n   */\n  export type WebNNExecutionProviderOption =\n    | WebNNOptionsWithoutMLContext\n    | WebNNOptionsWithMLContext\n    | WebNNOptionsWebGpu;\n\n  // #endregion\n\n  export interface QnnExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'qnn';\n    /**\n     * Specify the QNN backend type. E.g., 'cpu' or 'htp'.\n     * Mutually exclusive with `backendPath`.\n     *\n     * @default 'htp'\n     */\n    backendType?: string;\n    /**\n     * Specify a path to the QNN backend library.\n     * Mutually exclusive with `backendType`.\n     */\n    backendPath?: string;\n    /**\n     * Specify whether to enable HTP FP16 precision.\n     *\n     * @default true\n     */\n    enableFp16Precision?: boolean;\n  }\n  export interface CoreMLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'coreml';\n    /**\n     * The bit flags for CoreML execution provider.\n     *\n     * ```\n     * COREML_FLAG_USE_CPU_ONLY = 0x001\n     * COREML_FLAG_ENABLE_ON_SUBGRAPH = 0x002\n     * COREML_FLAG_ONLY_ENABLE_DEVICE_WITH_ANE = 0x004\n     * COREML_FLAG_ONLY_ALLOW_STATIC_INPUT_SHAPES = 0x008\n     * COREML_FLAG_CREATE_MLPROGRAM = 0x010\n     * COREML_FLAG_USE_CPU_AND_GPU = 0x020\n     * ```\n     *\n     * See include/onnxruntime/core/providers/coreml/coreml_provider_factory.h for more details.\n     *\n     * This flag is available only in ONNXRuntime (Node.js binding).\n     */\n    coreMlFlags?: number;\n    /**\n     * Specify whether to use CPU only in CoreML EP.\n     *\n     * This setting is available only in ONNXRuntime (react-native).\n     */\n    useCPUOnly?: boolean;\n    useCPUAndGPU?: boolean;\n    /**\n     * Specify whether to enable CoreML EP on subgraph.\n     *\n     * This setting is available only in ONNXRuntime (react-native).\n     */\n    enableOnSubgraph?: boolean;\n    /**\n     * Specify whether to only enable CoreML EP for Apple devices with ANE (Apple Neural Engine).\n     *\n     * This setting is available only in ONNXRuntime (react-native).\n     */\n    onlyEnableDeviceWithANE?: boolean;\n  }\n  export interface NnapiExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'nnapi';\n    useFP16?: boolean;\n    useNCHW?: boolean;\n    cpuDisabled?: boolean;\n    cpuOnly?: boolean;\n  }\n  // #endregion\n\n  // #endregion\n\n  // #region run options\n\n  /**\n   * A set of configurations for inference run behavior\n   */\n  export interface RunOptions {\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0 | 1 | 2 | 3 | 4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Terminate all incomplete OrtRun calls as soon as possible if true\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    terminate?: boolean;\n\n    /**\n     * A tag for the Run() calls using this\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    tag?: string;\n\n    /**\n     * Set a single run configuration entry. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_run_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     *\n     * ```js\n     * extra: {\n     *   memory: {\n     *     enable_memory_arena_shrinkage: \"1\",\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #endregion\n\n  // #region value metadata\n\n  /**\n   * The common part of the value metadata type for both tensor and non-tensor values.\n   */\n  export interface ValueMetadataBase {\n    /**\n     * The name of the specified input or output.\n     */\n    readonly name: string;\n  }\n\n  /**\n   * Represents the metadata of a non-tensor value.\n   */\n  export interface NonTensorValueMetadata extends ValueMetadataBase {\n    /**\n     * Get a value indicating whether the value is a tensor.\n     */\n    readonly isTensor: false;\n  }\n\n  /**\n   * Represents the metadata of a tensor value.\n   */\n  export interface TensorValueMetadata extends ValueMetadataBase {\n    /**\n     * Get a value indicating whether the value is a tensor.\n     */\n    readonly isTensor: true;\n    /**\n     * Get the data type of the tensor.\n     */\n    readonly type: Tensor.Type;\n    /**\n     * Get the shape of the tensor.\n     *\n     * If the shape is not defined, the value will an empty array. Otherwise, it will be an array representing the shape\n     * of the tensor. Each element in the array can be a number or a string. If the element is a number, it represents\n     * the corresponding dimension size. If the element is a string, it represents a symbolic dimension.\n     */\n    readonly shape: ReadonlyArray<number | string>;\n  }\n\n  /**\n   * Represents the metadata of a value.\n   */\n  export type ValueMetadata = NonTensorValueMetadata | TensorValueMetadata;\n\n  // #endregion\n}\n\n/**\n * Represent a runtime instance of an ONNX model.\n */\nexport interface InferenceSession {\n  // #region run()\n\n  /**\n   * Execute the model asynchronously with the given feeds and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Execute the model asynchronously with the given feeds, fetches and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param fetches - Representation of the model output. See type description of `InferenceSession.OutputType` for\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(\n    feeds: InferenceSession.FeedsType,\n    fetches: InferenceSession.FetchesType,\n    options?: InferenceSession.RunOptions,\n  ): Promise<InferenceSession.ReturnType>;\n\n  // #endregion\n\n  // #region release()\n\n  /**\n   * Release the inference session and the underlying resources.\n   */\n  release(): Promise<void>;\n\n  // #endregion\n\n  // #region profiling\n\n  /**\n   * Start profiling.\n   */\n  startProfiling(): void;\n\n  /**\n   * End profiling.\n   */\n  endProfiling(): void;\n\n  // #endregion\n\n  // #region metadata\n\n  /**\n   * Get input names of the loaded model.\n   */\n  readonly inputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded model.\n   */\n  readonly outputNames: readonly string[];\n\n  /**\n   * Get input metadata of the loaded model.\n   */\n  readonly inputMetadata: readonly InferenceSession.ValueMetadata[];\n\n  /**\n   * Get output metadata of the loaded model.\n   */\n  readonly outputMetadata: readonly InferenceSession.ValueMetadata[];\n\n  // #endregion\n}\n\nexport interface InferenceSessionFactory {\n  // #region create()\n\n  /**\n   * Create a new inference session and load model asynchronously from an ONNX model file.\n   *\n   * @param uri - The URI or file path of the model to load.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(uri: string, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from segment of an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param byteOffset - The beginning of the specified portion of the array buffer.\n   * @param byteLength - The length in bytes of the array buffer.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(\n    buffer: ArrayBufferLike,\n    byteOffset: number,\n    byteLength?: number,\n    options?: InferenceSession.SessionOptions,\n  ): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from a Uint8Array.\n   *\n   * @param buffer - A Uint8Array representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession: InferenceSessionFactory = InferenceSessionImpl;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { OptionsFormat, OptionsNormalizationParameters, OptionsTensorLayout } from './tensor-factory.js';\n\nexport interface TensorToDataUrlOptions extends OptionsTensorLayout, OptionsFormat, OptionsNormalizationParameters {}\n\nexport interface TensorToImageDataOptions extends OptionsTensorLayout, OptionsFormat, OptionsNormalizationParameters {}\n\nexport interface ConversionUtils {\n  /**\n   * creates a DataURL instance from tensor\n   *\n   * @param options - An optional object representing options for creating a DataURL instance from the tensor.\n   *\n   * The following default settings will be applied:\n   * - `format`: `'RGB'`\n   * - `tensorLayout`: `'NCHW'`\n   * @returns a DataURL string representing the image converted from tensor data\n   */\n  toDataURL(options?: TensorToDataUrlOptions): string;\n\n  /**\n   * creates an ImageData instance from tensor\n   *\n   * @param options - An optional object representing options for creating an ImageData instance from the tensor.\n   *\n   * The following default settings will be applied:\n   * - `format`: `'RGB'`\n   * - `tensorLayout`: `'NCHW'`\n   * @returns an ImageData instance representing the image converted from tensor data\n   */\n  toImageData(options?: TensorToImageDataOptions): ImageData;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Tensor, TypedTensor } from './tensor.js';\n\nexport type ImageFormat = 'RGB' | 'RGBA' | 'BGR' | 'RBG';\nexport type ImageTensorLayout = 'NHWC' | 'NCHW';\n\n// the following region contains type definitions for constructing tensor from a specific location.\n\n// #region types for constructing a tensor from a specific location\n\n/**\n * represent common properties of the parameter for constructing a tensor from a specific location.\n */\ninterface CommonConstructorParameters<T> extends Pick<Tensor, 'dims'> {\n  /**\n   * Specify the data type of the tensor.\n   */\n  readonly type: T;\n}\n\n/**\n * represent the parameter for constructing a tensor from a GPU resource.\n */\ninterface GpuResourceConstructorParameters<T extends Tensor.Type> {\n  /**\n   * an optional callback function to download data from GPU to CPU.\n   *\n   * If not provided, the tensor treat the GPU data as external resource.\n   */\n  download?(): Promise<Tensor.DataTypeMap[T]>;\n\n  /**\n   * an optional callback function that will be called when the tensor is disposed.\n   *\n   * If not provided, the tensor treat the GPU data as external resource.\n   */\n  dispose?(): void;\n}\n\n/**\n * represent the parameter for constructing a tensor from a pinned CPU buffer\n */\nexport interface CpuPinnedConstructorParameters<T extends Tensor.CpuPinnedDataTypes = Tensor.CpuPinnedDataTypes>\n  extends CommonConstructorParameters<T> {\n  /**\n   * Specify the location of the data to be 'cpu-pinned'.\n   */\n  readonly location: 'cpu-pinned';\n  /**\n   * Specify the CPU pinned buffer that holds the tensor data.\n   */\n  readonly data: Tensor.DataTypeMap[T];\n}\n\n/**\n * represent the parameter for constructing a tensor from a WebGL texture\n */\nexport interface TextureConstructorParameters<T extends Tensor.TextureDataTypes = Tensor.TextureDataTypes>\n  extends CommonConstructorParameters<T>,\n    GpuResourceConstructorParameters<T> {\n  /**\n   * Specify the location of the data to be 'texture'.\n   */\n  readonly location: 'texture';\n  /**\n   * Specify the WebGL texture that holds the tensor data.\n   */\n  readonly texture: Tensor.TextureType;\n}\n\n/**\n * represent the parameter for constructing a tensor from a WebGPU buffer\n */\nexport interface GpuBufferConstructorParameters<T extends Tensor.GpuBufferDataTypes = Tensor.GpuBufferDataTypes>\n  extends CommonConstructorParameters<T>,\n    GpuResourceConstructorParameters<T> {\n  /**\n   * Specify the location of the data to be 'gpu-buffer'.\n   */\n  readonly location: 'gpu-buffer';\n  /**\n   * Specify the WebGPU buffer that holds the tensor data.\n   */\n  readonly gpuBuffer: Tensor.GpuBufferType;\n}\n\nexport interface MLTensorConstructorParameters<T extends Tensor.MLTensorDataTypes = Tensor.MLTensorDataTypes>\n  extends CommonConstructorParameters<T>,\n    GpuResourceConstructorParameters<T> {\n  /**\n   * Specify the location of the data to be 'ml-tensor'.\n   */\n  readonly location: 'ml-tensor';\n\n  /**\n   * Specify the WebNN MLTensor that holds the tensor data.\n   */\n  readonly mlTensor: Tensor.MLTensorType;\n}\n\n// #endregion\n\n// the following region contains type definitions of each individual options.\n// the tensor factory functions use a composition of those options as the parameter type.\n\n// #region Options fields\n\nexport interface OptionsFormat {\n  /**\n   * Describes the image format represented in RGBA color space.\n   */\n  format?: ImageFormat;\n}\n\nexport interface OptionsTensorFormat {\n  /**\n   * Describes the image format of the tensor.\n   *\n   * NOTE: this is different from option 'format'. While option 'format' represents the original image, 'tensorFormat'\n   * represents the target format of the tensor. A transpose will be performed if they are different.\n   */\n  tensorFormat?: ImageFormat;\n}\n\nexport interface OptionsTensorDataType {\n  /**\n   * Describes the data type of the tensor.\n   */\n  dataType?: 'float32' | 'uint8';\n}\n\nexport interface OptionsTensorLayout {\n  /**\n   * Describes the tensor layout when representing data of one or more image(s).\n   */\n  tensorLayout?: ImageTensorLayout;\n}\n\nexport interface OptionsDimensions {\n  /**\n   * Describes the image height in pixel\n   */\n  height?: number;\n  /**\n   * Describes the image width in pixel\n   */\n  width?: number;\n}\n\nexport interface OptionResizedDimensions {\n  /**\n   * Describes the resized height. If omitted, original height will be used.\n   */\n  resizedHeight?: number;\n  /**\n   * Describes resized width - can be accessed via tensor dimensions as well\n   */\n  resizedWidth?: number;\n}\n\nexport interface OptionsNormalizationParameters {\n  /**\n   * Describes normalization parameters when preprocessing the image as model input.\n   *\n   * Data element are ranged from 0 to 255.\n   */\n  norm?: {\n    /**\n     * The 'bias' value for image normalization.\n     * - If omitted, use default value 0.\n     * - If it's a single number, apply to each channel\n     * - If it's an array of 3 or 4 numbers, apply element-wise. Number of elements need to match the number of channels\n     * for the corresponding image format\n     */\n    bias?: number | [number, number, number] | [number, number, number, number];\n    /**\n     * The 'mean' value for image normalization.\n     * - If omitted, use default value 255.\n     * - If it's a single number, apply to each channel\n     * - If it's an array of 3 or 4 numbers, apply element-wise. Number of elements need to match the number of channels\n     * for the corresponding image format\n     */\n    mean?: number | [number, number, number] | [number, number, number, number];\n  };\n}\n\n// #endregion\n\n// #region Options composition\n\nexport interface TensorFromImageDataOptions\n  extends OptionResizedDimensions,\n    OptionsTensorFormat,\n    OptionsTensorLayout,\n    OptionsTensorDataType,\n    OptionsNormalizationParameters {}\n\nexport interface TensorFromImageElementOptions\n  extends OptionResizedDimensions,\n    OptionsTensorFormat,\n    OptionsTensorLayout,\n    OptionsTensorDataType,\n    OptionsNormalizationParameters {}\n\nexport interface TensorFromUrlOptions\n  extends OptionsDimensions,\n    OptionResizedDimensions,\n    OptionsTensorFormat,\n    OptionsTensorLayout,\n    OptionsTensorDataType,\n    OptionsNormalizationParameters {}\n\nexport interface TensorFromImageBitmapOptions\n  extends OptionResizedDimensions,\n    OptionsTensorFormat,\n    OptionsTensorLayout,\n    OptionsTensorDataType,\n    OptionsNormalizationParameters {}\n\nexport interface TensorFromTextureOptions<T extends Tensor.TextureDataTypes>\n  extends Required<OptionsDimensions>,\n    OptionsFormat,\n    GpuResourceConstructorParameters<T> /* TODO: add more */ {}\n\nexport interface TensorFromGpuBufferOptions<T extends Tensor.GpuBufferDataTypes>\n  extends Pick<Tensor, 'dims'>,\n    GpuResourceConstructorParameters<T> {\n  /**\n   * Describes the data type of the tensor.\n   */\n  dataType?: T;\n}\n\nexport interface TensorFromMLTensorOptions<T extends Tensor.MLTensorDataTypes>\n  extends Pick<Tensor, 'dims'>,\n    GpuResourceConstructorParameters<T> {\n  /**\n   * Describes the data type of the tensor.\n   */\n  dataType?: T;\n}\n\n// #endregion\n\n/**\n * type TensorFactory defines the factory functions of 'Tensor' to create tensor instances from existing data or\n * resources.\n */\nexport interface TensorFactory {\n  /**\n   * create a tensor from an ImageData object\n   *\n   * @param imageData - the ImageData object to create tensor from\n   * @param options - An optional object representing options for creating tensor from ImageData.\n   *\n   * The following default settings will be applied:\n   * - `tensorFormat`: `'RGB'`\n   * - `tensorLayout`: `'NCHW'`\n   * - `dataType`: `'float32'`\n   * @returns A promise that resolves to a tensor object\n   */\n  fromImage(\n    imageData: ImageData,\n    options?: TensorFromImageDataOptions,\n  ): Promise<TypedTensor<'float32'> | TypedTensor<'uint8'>>;\n\n  /**\n   * create a tensor from a HTMLImageElement object\n   *\n   * @param imageElement - the HTMLImageElement object to create tensor from\n   * @param options - An optional object representing options for creating tensor from HTMLImageElement.\n   *\n   * The following default settings will be applied:\n   * - `tensorFormat`: `'RGB'`\n   * - `tensorLayout`: `'NCHW'`\n   * - `dataType`: `'float32'`\n   * @returns A promise that resolves to a tensor object\n   */\n  fromImage(\n    imageElement: HTMLImageElement,\n    options?: TensorFromImageElementOptions,\n  ): Promise<TypedTensor<'float32'> | TypedTensor<'uint8'>>;\n\n  /**\n   * create a tensor from URL\n   *\n   * @param urlSource - a string as a URL to the image or a data URL containing the image data.\n   * @param options - An optional object representing options for creating tensor from URL.\n   *\n   * The following default settings will be applied:\n   * - `tensorFormat`: `'RGB'`\n   * - `tensorLayout`: `'NCHW'`\n   * - `dataType`: `'float32'`\n   * @returns A promise that resolves to a tensor object\n   */\n  fromImage(urlSource: string, options?: TensorFromUrlOptions): Promise<TypedTensor<'float32'> | TypedTensor<'uint8'>>;\n\n  /**\n   * create a tensor from an ImageBitmap object\n   *\n   * @param bitmap - the ImageBitmap object to create tensor from\n   * @param options - An optional object representing options for creating tensor from URL.\n   *\n   * The following default settings will be applied:\n   * - `tensorFormat`: `'RGB'`\n   * - `tensorLayout`: `'NCHW'`\n   * - `dataType`: `'float32'`\n   * @returns A promise that resolves to a tensor object\n   */\n  fromImage(\n    bitmap: ImageBitmap,\n    options: TensorFromImageBitmapOptions,\n  ): Promise<TypedTensor<'float32'> | TypedTensor<'uint8'>>;\n\n  /**\n   * create a tensor from a WebGL texture\n   *\n   * @param texture - the WebGLTexture object to create tensor from\n   * @param options - An optional object representing options for creating tensor from WebGL texture.\n   *\n   * The options include following properties:\n   * - `width`: the width of the texture. Required.\n   * - `height`: the height of the texture. Required.\n   * - `format`: the format of the texture. If omitted, assume 'RGBA'.\n   * - `download`: an optional function to download the tensor data from GPU to CPU. If omitted, the GPU data\n   * will not be able to download. Usually, this is provided by a GPU backend for the inference outputs. Users don't\n   * need to provide this function.\n   * - `dispose`: an optional function to dispose the tensor data on GPU. If omitted, the GPU data will not be disposed.\n   * Usually, this is provided by a GPU backend for the inference outputs. Users don't need to provide this function.\n   *\n   * @returns a tensor object\n   */\n  fromTexture<T extends Tensor.TextureDataTypes = 'float32'>(\n    texture: Tensor.TextureType,\n    options: TensorFromTextureOptions<T>,\n  ): TypedTensor<'float32'>;\n\n  /**\n   * create a tensor from a WebGPU buffer\n   *\n   * @param buffer - the GPUBuffer object to create tensor from\n   * @param options - An optional object representing options for creating tensor from WebGPU buffer.\n   *\n   * The options include following properties:\n   * - `dataType`: the data type of the tensor. If omitted, assume 'float32'.\n   * - `dims`: the dimension of the tensor. Required.\n   * - `download`: an optional function to download the tensor data from GPU to CPU. If omitted, the GPU data\n   * will not be able to download. Usually, this is provided by a GPU backend for the inference outputs. Users don't\n   * need to provide this function.\n   * - `dispose`: an optional function to dispose the tensor data on GPU. If omitted, the GPU data will not be disposed.\n   * Usually, this is provided by a GPU backend for the inference outputs. Users don't need to provide this function.\n   *\n   * @returns a tensor object\n   */\n  fromGpuBuffer<T extends Tensor.GpuBufferDataTypes>(\n    buffer: Tensor.GpuBufferType,\n    options: TensorFromGpuBufferOptions<T>,\n  ): TypedTensor<T>;\n\n  /**\n   * create a tensor from a WebNN MLTensor\n   *\n   * @param tensor - the MLTensor object to create tensor from\n   * @param options - An optional object representing options for creating tensor from a WebNN MLTensor.\n   *\n   * The options include following properties:\n   * - `dataType`: the data type of the tensor. If omitted, assume 'float32'.\n   * - `dims`: the dimension of the tensor. Required.\n   * - `download`: an optional function to download the tensor data from the MLTensor to CPU. If omitted, the MLTensor\n   * data will not be able to download. Usually, this is provided by the WebNN backend for the inference outputs.\n   * Users don't need to provide this function.\n   * - `dispose`: an optional function to dispose the tensor data on the WebNN MLTensor. If omitted, the MLTensor will\n   * not be disposed. Usually, this is provided by the WebNN backend for the inference outputs. Users don't need to\n   * provide this function.\n   *\n   * @returns a tensor object\n   */\n  fromMLTensor<T extends Tensor.MLTensorDataTypes>(\n    tensor: Tensor.MLTensorType,\n    options: TensorFromMLTensorOptions<T>,\n  ): TypedTensor<T>;\n\n  /**\n   * create a tensor from a pre-allocated buffer. The buffer will be used as a pinned buffer.\n   *\n   * @param type - the tensor element type.\n   * @param buffer - a TypedArray corresponding to the type.\n   * @param dims - specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   *\n   * @returns a tensor object\n   */\n  fromPinnedBuffer<T extends Exclude<Tensor.Type, 'string'>>(\n    type: T,\n    buffer: Tensor.DataTypeMap[T],\n    dims?: readonly number[],\n  ): TypedTensor<T>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * A string that represents a file's URL or path.\n *\n * Path is vailable only in onnxruntime-node or onnxruntime-web running in Node.js.\n */\nexport type FileUrlOrPath = string;\n\n/**\n * A Blob object that represents a file.\n */\nexport type FileBlob = Blob;\n\n/**\n * A Uint8Array, ArrayBuffer or SharedArrayBuffer object that represents a file content.\n *\n * When it is an ArrayBuffer or SharedArrayBuffer, the whole buffer is assumed to be the file content.\n */\nexport type FileData = Uint8Array | ArrayBufferLike;\n\n/**\n * Represents a file that can be loaded by the ONNX Runtime JavaScript API.\n */\nexport type FileType = FileUrlOrPath | FileBlob | FileData;\n\n/**\n * Represents an external data file.\n */\nexport interface ExternalDataFileDescription {\n  /**\n   * Specify the external data file.\n   */\n  data: FileType;\n  /**\n   * Specify the file path.\n   */\n  path: string;\n}\n\n/**\n * Represents an external data file.\n *\n * When using a string, it should be a file URL or path that in the same directory as the model file.\n */\nexport type ExternalDataFileType = ExternalDataFileDescription | FileUrlOrPath;\n\n/**\n * Options for model loading.\n */\nexport interface OnnxModelOptions {\n  /**\n   * Specifying a list of files that represents the external data.\n   */\n  externalData?: readonly ExternalDataFileType[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Tensor } from './tensor.js';\n\nexport type NonTensorType = never;\n\n/**\n * Type OnnxValue Represents both tensors and non-tensors value for model's inputs/outputs.\n *\n * NOTE: currently not support non-tensor\n */\nexport type OnnxValue = Tensor | NonTensorType;\n\n/**\n * Type OnnxValueDataLocation represents the location of the data of an OnnxValue.\n */\nexport type OnnxValueDataLocation = Tensor.DataLocation;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * # ONNX Runtime JavaScript API\n *\n * ONNX Runtime JavaScript API is a unified API for all JavaScript usages, including the following NPM packages:\n *\n * - [onnxruntime-node](https://www.npmjs.com/package/onnxruntime-node)\n * - [onnxruntime-web](https://www.npmjs.com/package/onnxruntime-web)\n * - [onnxruntime-react-native](https://www.npmjs.com/package/onnxruntime-react-native)\n *\n * See also:\n * - [Get Started](https://onnxruntime.ai/docs/get-started/with-javascript/)\n * - [Inference examples](https://github.com/microsoft/onnxruntime-inference-examples/tree/main/js)\n *\n * @packageDocumentation\n */\n\nexport * from './backend.js';\nexport * from './env.js';\nexport * from './inference-session.js';\nexport * from './tensor.js';\nexport * from './tensor-conversion.js';\nexport * from './tensor-factory.js';\nexport * from './trace.js';\nexport * from './onnx-model.js';\nexport * from './onnx-value.js';\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport const isNode = !!(typeof process !== 'undefined' && process.versions && process.versions.node);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/// <reference lib=\"webworker\" />\n\n//\n// * type hack for \"HTMLImageElement\"\n//\n// in typescript, the type of \"HTMLImageElement\" is defined in lib.dom.d.ts, which is conflict with lib.webworker.d.ts.\n// when we use webworker, the lib.webworker.d.ts will be used, which does not have HTMLImageElement defined.\n//\n// we will get the following errors complaining that HTMLImageElement is not defined:\n//\n// ====================================================================================================================\n//\n// ../common/dist/cjs/tensor-factory.d.ts:187:29 - error TS2552: Cannot find name 'HTMLImageElement'. Did you mean\n// 'HTMLLIElement'?\n//\n// 187     fromImage(imageElement: HTMLImageElement, options?: TensorFromImageElementOptions):\n// Promise<TypedTensor<'float32'> | TypedTensor<'uint8'>>;\n//                                 ~~~~~~~~~~~~~~~~\n//\n// node_modules/@webgpu/types/dist/index.d.ts:83:7 - error TS2552: Cannot find name 'HTMLImageElement'. Did you mean\n// 'HTMLLIElement'?\n//\n// 83     | HTMLImageElement\n//          ~~~~~~~~~~~~~~~~\n//\n// ====================================================================================================================\n//\n// `HTMLImageElement` is only used in type declaration and not in real code. So we define it as `unknown` here to\n// bypass the type check.\n\n//\n// * type hack for \"document\"\n//\n// in typescript, the type of \"document\" is defined in lib.dom.d.ts, so it's not available in webworker.\n//\n// we will get the following errors complaining that document is not defined:\n//\n// ====================================================================================================================\n//\n// lib/wasm/wasm-utils-import.ts:7:33 - error TS2584: Cannot find name 'document'. Do you need to change your target\n// library? Try changing the 'lib' compiler option to include 'dom'.\n//\n// 7 export const scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src :\n//                                   ~~~~~~~~\n//\n// lib/wasm/wasm-utils-import.ts:7:61 - error TS2584: Cannot find name 'document'. Do you need to change your target\n// library? Try changing the 'lib' compiler option to include 'dom'.\n//\n// 7 export const scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src :\n//                                                               ~~~~~~~~\n//\n// lib/wasm/wasm-utils-import.ts:7:88 - error TS2552: Cannot find name 'HTMLScriptElement'. Did you mean\n// 'HTMLLIElement'?\n//\n// 7 export const scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src :\n//                                                                                          ~~~~~~~~~~~~~~~~~\n// ====================================================================================================================\n//\n// `document` is used to get the current script URL, which is not available in webworker. This file is served as a\n// \"dual\" file for entries of both webworker and the esm module.\n//\ndeclare global {\n  type HTMLImageElement = unknown;\n  type HTMLScriptElement = { src?: string };\n  const document: undefined | { currentScript?: HTMLScriptElement };\n}\n\n/**\n * @summary\n *\n * This file is served as a \"dual\" file for both entries of the following:\n * - The proxy worker itself.\n *   - When used as a worker, it listens to the messages from the main thread and performs the corresponding operations.\n *   - Should be imported directly using `new Worker()` in the main thread.\n *\n * - The ESM module that creates the proxy worker (as a worker launcher).\n *   - When used as a worker launcher, it creates the proxy worker and returns it.\n *   - Should be imported using `import()` in the main thread, with the query parameter `import=1`.\n *\n * This file will be always compiling into ESM format.\n */\n\nimport type { OrtWasmMessage, SerializableTensorMetadata } from '../proxy-messages.js';\nimport {\n  createSession,\n  copyFromExternalBuffer,\n  endProfiling,\n  extractTransferableBuffers,\n  initEp,\n  initRuntime,\n  releaseSession,\n  run,\n} from '../wasm-core-impl.js';\nimport { initializeWebAssembly } from '../wasm-factory.js';\nimport { scriptSrc } from '../wasm-utils-import.js';\n\nconst WORKER_NAME = 'ort-wasm-proxy-worker';\nconst isProxyWorker = globalThis.self?.name === WORKER_NAME;\n\nif (isProxyWorker) {\n  // Worker thread\n  self.onmessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n    const { type, in: message } = ev.data;\n    try {\n      switch (type) {\n        case 'init-wasm':\n          initializeWebAssembly(message!.wasm).then(\n            () => {\n              initRuntime(message!).then(\n                () => {\n                  postMessage({ type });\n                },\n                (err) => {\n                  postMessage({ type, err });\n                },\n              );\n            },\n            (err) => {\n              postMessage({ type, err });\n            },\n          );\n          break;\n        case 'init-ep': {\n          const { epName, env } = message!;\n          initEp(env, epName).then(\n            () => {\n              postMessage({ type });\n            },\n            (err) => {\n              postMessage({ type, err });\n            },\n          );\n          break;\n        }\n        case 'copy-from': {\n          const { buffer } = message!;\n          const bufferData = copyFromExternalBuffer(buffer);\n          postMessage({ type, out: bufferData } as OrtWasmMessage);\n          break;\n        }\n        case 'create': {\n          const { model, options } = message!;\n          createSession(model, options).then(\n            (sessionMetadata) => {\n              postMessage({ type, out: sessionMetadata } as OrtWasmMessage);\n            },\n            (err) => {\n              postMessage({ type, err });\n            },\n          );\n          break;\n        }\n        case 'release':\n          releaseSession(message!);\n          postMessage({ type });\n          break;\n        case 'run': {\n          const { sessionId, inputIndices, inputs, outputIndices, options } = message!;\n          run(sessionId, inputIndices, inputs, outputIndices, new Array(outputIndices.length).fill(null), options).then(\n            (outputs) => {\n              if (outputs.some((o) => o[3] !== 'cpu')) {\n                postMessage({ type, err: 'Proxy does not support non-cpu tensor location.' });\n              } else {\n                postMessage(\n                  { type, out: outputs } as OrtWasmMessage,\n                  extractTransferableBuffers([...inputs, ...outputs] as SerializableTensorMetadata[]),\n                );\n              }\n            },\n            (err) => {\n              postMessage({ type, err });\n            },\n          );\n          break;\n        }\n        case 'end-profiling':\n          endProfiling(message!);\n          postMessage({ type });\n          break;\n        default:\n      }\n    } catch (err) {\n      postMessage({ type, err } as OrtWasmMessage);\n    }\n  };\n}\n\nexport default isProxyWorker\n  ? null\n  : (urlOverride?: string) =>\n      new Worker(urlOverride ?? scriptSrc!, { type: BUILD_DEFS.IS_ESM ? 'module' : 'classic', name: WORKER_NAME });\n","async function e(e={}){var r=e,t=\"object\"==typeof window,n=\"undefined\"!=typeof WorkerGlobalScope,a=n&&self.name?.startsWith(\"em-pthread\");r.mountExternalData=(e,t)=>{e.startsWith(\"./\")&&(e=e.substring(2)),(r.Zc||(r.Zc=new Map)).set(e,t)},r.unmountExternalData=()=>{delete r.Zc};var i=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,Me:!0}).buffer.constructor;let o=()=>{const e=e=>(...r)=>{const t=$r;return r=e(...r),$r!=t?new Promise(((e,r)=>{Hr={resolve:e,reject:r}})):r};(()=>{for(const t of[\"_OrtAppendExecutionProvider\",\"_OrtCreateSession\",\"_OrtRun\",\"_OrtRunWithBinding\",\"_OrtBindInput\"])r[t]=e(r[t])})(),\"undefined\"!=typeof jsepRunAsync&&(r._OrtRun=jsepRunAsync(r._OrtRun),r._OrtRunWithBinding=jsepRunAsync(r._OrtRunWithBinding)),o=void 0};r.asyncInit=()=>{o?.()};var u,c,s=(e,r)=>{throw r},f=import.meta.url,d=\"\";if(t||n){try{d=new URL(\".\",f).href}catch{}n&&(c=e=>{var r=new XMLHttpRequest;return r.open(\"GET\",e,!1),r.responseType=\"arraybuffer\",r.send(null),new Uint8Array(r.response)}),u=async e=>{if(O(e))return new Promise(((r,t)=>{var n=new XMLHttpRequest;n.open(\"GET\",e,!0),n.responseType=\"arraybuffer\",n.onload=()=>{200==n.status||0==n.status&&n.response?r(n.response):t(n.status)},n.onerror=t,n.send(null)}));var r=await fetch(e,{credentials:\"same-origin\"});if(r.ok)return r.arrayBuffer();throw Error(r.status+\" : \"+r.url)}}var l,m,p,h,v,g,b,w=console.log.bind(console),y=console.error.bind(console),x=w,S=y,T=!1,O=e=>e.startsWith(\"file://\");function A(){C.buffer!=E.buffer&&G()}if(a){var B=!1;function Co(e){try{var t=e.data,n=t.Vc;if(\"load\"===n){let e=[];self.onmessage=r=>e.push(r),b=()=>{postMessage({Vc:\"loaded\"});for(let r of e)Co(r);self.onmessage=Co};for(const e of t.le)r[e]&&!r[e].proxy||(r[e]=(...r)=>{postMessage({Vc:\"callHandler\",ke:e,args:r})},\"print\"==e&&(x=r[e]),\"printErr\"==e&&(S=r[e]));C=t.Fe,G(),g(t.Ge)}else if(\"run\"===n){!function(e){var r=(A(),D)[e+52>>>2>>>0];e=(A(),D)[e+56>>>2>>>0],Ha(r,r-e),ja(r)}(t.Tc),Wa(t.Tc,0,0,1,0,0),ue(),Mr(t.Tc),B||(pa(),B=!0);try{fe(t.se,t.dd)}catch(e){if(\"unwind\"!=e)throw e}}else\"setimmediate\"!==t.target&&(\"checkMailbox\"===n?B&&Pr():n&&(S(`worker: received unknown command ${n}`),S(t)))}catch(e){throw La(),e}}self.onunhandledrejection=e=>{throw e.reason||e},self.onmessage=Co}var C,E,M,P,R,U,D,k,I,_,W,L=!1;function G(){var e=C.buffer;r.HEAP8=E=new Int8Array(e),P=new Int16Array(e),r.HEAPU8=M=new Uint8Array(e),R=new Uint16Array(e),r.HEAP32=U=new Int32Array(e),r.HEAPU32=D=new Uint32Array(e),k=new Float32Array(e),I=new Float64Array(e),_=new BigInt64Array(e),W=new BigUint64Array(e)}function $(){L=!0,a?b():zi.cc()}var F,z=0,V=null;function N(){if(0==--z&&V){var e=V;V=null,e()}}function Y(e){throw S(e=\"Aborted(\"+e+\")\"),T=!0,e=new WebAssembly.RuntimeError(e+\". Build with -sASSERTIONS for more info.\"),v?.(e),e}function q(){return{a:{ra:la,g:pe,K:ve,f:xe,m:Se,h:Te,ua:Oe,b:Ae,ea:Be,Ha:Ee,n:Me,fa:ke,Xa:Ie,$b:_e,bc:We,Ya:Le,Va:Ge,Oa:$e,Ua:Fe,pa:ze,ac:Ve,Zb:Ne,Wa:Ye,_b:qe,bb:He,Ea:rr,Ub:tr,Sb:fr,Da:lr,P:mr,I:pr,Tb:gr,ka:Ar,Vb:Br,Ra:Cr,Xb:Rr,Ia:Dr,Pb:kr,Fa:Ir,Qa:Mr,_a:_r,V:Zr,s:nt,c:ir,qb:at,y:it,N:ot,C:ut,p:ct,t:st,rb:st,J:ft,U:dt,j:lt,u:mt,r:pt,l:ht,La:vt,Ma:yt,Na:xt,Ja:St,Ka:Tt,Rb:Bt,db:Ct,ab:Pt,Y:Dt,pb:kt,la:It,$a:Et,X:_t,Za:Wt,Yb:Lt,G:At,gb:Gt,_:$t,qa:Vt,Wb:Nt,fb:Ht,eb:jt,mb:mn,F:pn,ta:vn,sa:gn,ob:bn,Z:wn,x:yn,lb:xn,kb:Sn,nb:Tn,jb:On,ib:An,hb:Bn,Sa:Pn,Ta:Rn,Ga:re,ga:Un,oa:Dn,Pa:kn,ma:_n,Db:Ao,ya:bo,Eb:Oo,za:go,H:co,e:qi,o:Ni,w:Vi,B:to,Jb:mo,L:io,v:ji,Aa:ho,ca:wo,ia:lo,Fb:To,Gb:So,Hb:po,Ba:fo,Kb:so,O:oo,da:vo,d:Hi,A:Xi,k:Yi,Cb:Bo,q:Zi,z:ro,D:eo,E:Qi,M:no,Lb:uo,R:yo,ja:ao,ba:xo,Nb:Ji,Ob:Ki,i:Wn,a:C,cb:J,Bb:Ln,ha:Gn,Q:$n,na:Fn,Ib:zn,S:Vn,yb:Nn,zb:Yn,va:qn,T:Hn,Ca:jn,wa:Xn,aa:Zn,wb:Qn,Qb:Kn,W:Jn,sb:ea,Ab:ra,tb:ta,ub:aa,vb:ia,$:oa,xa:ua,xb:ca,Mb:sa}}}class H{name=\"ExitStatus\";constructor(e){this.message=`Program terminated with exit(${e})`,this.status=e}}var j=e=>{e.terminate(),e.onmessage=()=>{}},X=[],Z=e=>{0==te.length&&(se(),ce(te[0]));var r=te.pop();if(!r)return 6;ne.push(r),ie[e.Tc]=r,r.Tc=e.Tc;var t={Vc:\"run\",se:e.qe,dd:e.dd,Tc:e.Tc};return r.postMessage(t,e.fe),0},Q=0,K=(e,r,...t)=>{for(var n=2*t.length,a=Za(),i=Xa(8*n),o=i>>>3,u=0;u<t.length;u++){var c=t[u];\"bigint\"==typeof c?((A(),_)[o+2*u>>>0]=1n,(A(),_)[o+2*u+1>>>0]=c):((A(),_)[o+2*u>>>0]=0n,(A(),I)[o+2*u+1>>>0]=c)}return e=Ga(e,0,n,i,r),ja(a),e};function J(e){if(a)return K(0,1,e);if(p=e,!(0<Q)){for(var r of ne)j(r);for(r of te)j(r);te=[],ne=[],ie={},T=!0}s(0,new H(e))}function ee(e){if(a)return K(1,0,e);re(e)}var re=e=>{if(p=e,a)throw ee(e),\"unwind\";J(e)},te=[],ne=[],ae=[],ie={},oe=e=>{var r=e.Tc;delete ie[r],te.push(e),ne.splice(ne.indexOf(e),1),e.Tc=0,$a(r)};function ue(){ae.forEach((e=>e()))}var ce=e=>new Promise((t=>{e.onmessage=n=>{var a=(n=n.data).Vc;if(n.$c&&n.$c!=va()){var i=ie[n.$c];i?i.postMessage(n,n.fe):S(`Internal error! Worker sent a message \"${a}\" to target pthread ${n.$c}, but that thread no longer exists!`)}else\"checkMailbox\"===a?Pr():\"spawnThread\"===a?Z(n):\"cleanupThread\"===a?oe(ie[n.te]):\"loaded\"===a?(e.loaded=!0,t(e)):\"setimmediate\"===n.target?e.postMessage(n):\"callHandler\"===a?r[n.ke](...n.args):a&&S(`worker sent an unknown command ${a}`)},e.onerror=e=>{throw S(`worker sent an error! ${e.filename}:${e.lineno}: ${e.message}`),e};var n,a=[];for(n of[])r.propertyIsEnumerable(n)&&a.push(n);e.postMessage({Vc:\"load\",le:a,Fe:C,Ge:m})}));function se(){var e=new Worker((()=>{const e=URL;return import.meta.url>\"file:\"&&import.meta.url<\"file;\"?new e(BUILD_DEFS.BUNDLE_FILENAME,import.meta.url):new URL(import.meta.url)})(),{type:\"module\",workerData:\"em-pthread\",name:\"em-pthread\"});te.push(e)}var fe=(e,r)=>{Q=0,e=ti(e,r),0<Q?p=e:Fa(e)},de=[],le=0,me=e=>-9007199254740992>e||9007199254740992<e?NaN:Number(e);function pe(e){var r=new we(e>>>=0);return 0==(A(),E)[r.Uc+12>>>0]&&(ge(r,!0),le--),be(r,!1),de.push(r),Ka(e),ei(e)}var he=0,ve=()=>{Ya(0,0);var e=de.pop();Qa(e.Ud),he=0};function ge(e,r){r=r?1:0,(A(),E)[e.Uc+12>>>0]=r}function be(e,r){r=r?1:0,(A(),E)[e.Uc+13>>>0]=r}class we{constructor(e){this.Ud=e,this.Uc=e-24}}var ye=e=>{var r=he;if(!r)return qa(0),0;var t=new we(r);(A(),D)[t.Uc+16>>>2>>>0]=r;var n=(A(),D)[t.Uc+4>>>2>>>0];if(!n)return qa(0),r;for(var a of e){if(0===a||a===n)break;if(Ja(a,n,t.Uc+16))return qa(a),r}return qa(n),r};function xe(){return ye([])}function Se(e){return ye([e>>>0])}function Te(e,r,t,n){return ye([e>>>0,r>>>0,t>>>0,n>>>0])}var Oe=()=>{var e=de.pop();e||Y(\"no exception to throw\");var r=e.Ud;throw 0==(A(),E)[e.Uc+13>>>0]&&(de.push(e),be(e,!0),ge(e,!1),le++),he=r};function Ae(e,r,t){var n=new we(e>>>=0);throw r>>>=0,t>>>=0,(A(),D)[n.Uc+16>>>2>>>0]=0,(A(),D)[n.Uc+4>>>2>>>0]=r,(A(),D)[n.Uc+8>>>2>>>0]=t,le++,he=e}var Be=()=>le;function Ce(e,r,t,n){return a?K(2,1,e,r,t,n):Ee(e,r,t,n)}function Ee(e,r,t,n){if(e>>>=0,t>>>=0,n>>>=0,void 0===i)return 6;var o=[];return a&&0===o.length?Ce(e,r>>>=0,t,n):(e={qe:t,Tc:e,dd:n,fe:o},a?(e.Vc=\"spawnThread\",postMessage(e,o),0):Z(e))}function Me(e){throw he||=e>>>0,he}var Pe=\"undefined\"!=typeof TextDecoder?new TextDecoder:void 0,Re=(e,r,t,n)=>{if(t=r+t,n)return t;for(;e[r]&&!(r>=t);)++r;return r},Ue=(e,r=0,t,n)=>{if(16<(t=Re(e,r>>>=0,t,n))-r&&e.buffer&&Pe)return Pe.decode(e.buffer instanceof ArrayBuffer?e.subarray(r,t):e.slice(r,t));for(n=\"\";r<t;){var a=e[r++];if(128&a){var i=63&e[r++];if(192==(224&a))n+=String.fromCharCode((31&a)<<6|i);else{var o=63&e[r++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&e[r++])?n+=String.fromCharCode(a):(a-=65536,n+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else n+=String.fromCharCode(a)}return n},De=(e,r,t)=>(e>>>=0)?Ue((A(),M),e,r,t):\"\";function ke(e,r,t){return a?K(3,1,e,r,t):0}function Ie(e,r){if(a)return K(4,1,e,r)}function _e(e,r){if(a)return K(5,1,e,r)}function We(e,r,t){if(a)return K(6,1,e,r,t)}function Le(e,r,t){return a?K(7,1,e,r,t):0}function Ge(e,r){if(a)return K(8,1,e,r)}function $e(e,r,t){if(a)return K(9,1,e,r,t)}function Fe(e,r,t,n){if(a)return K(10,1,e,r,t,n)}function ze(e,r,t,n){if(a)return K(11,1,e,r,t,n)}function Ve(e,r,t,n){if(a)return K(12,1,e,r,t,n)}function Ne(e){if(a)return K(13,1,e)}function Ye(e,r){if(a)return K(14,1,e,r)}function qe(e,r,t){if(a)return K(15,1,e,r,t)}var He=()=>Y(\"\"),je=e=>{e>>>=0;for(var r=\"\";;){var t=(A(),M)[e++>>>0];if(!t)return r;r+=String.fromCharCode(t)}},Xe={},Ze={},Qe={},Ke=class extends Error{constructor(e){super(e),this.name=\"BindingError\"}};function Je(e,r,t={}){return function(e,r,t={}){var n=r.name;if(!e)throw new Ke(`type \"${n}\" must have a positive integer typeid pointer`);if(Ze.hasOwnProperty(e)){if(t.ne)return;throw new Ke(`Cannot register type '${n}' twice`)}Ze[e]=r,delete Qe[e],Xe.hasOwnProperty(e)&&(r=Xe[e],delete Xe[e],r.forEach((e=>e())))}(e,r,t)}var er=(e,r,t)=>{switch(r){case 1:return t?e=>(A(),E)[e>>>0]:e=>(A(),M)[e>>>0];case 2:return t?e=>(A(),P)[e>>>1>>>0]:e=>(A(),R)[e>>>1>>>0];case 4:return t?e=>(A(),U)[e>>>2>>>0]:e=>(A(),D)[e>>>2>>>0];case 8:return t?e=>(A(),_)[e>>>3>>>0]:e=>(A(),W)[e>>>3>>>0];default:throw new TypeError(`invalid integer width (${r}): ${e}`)}};function rr(e,r,t,n,a){e>>>=0,t>>>=0,r=je(r>>>0);let i=e=>e;if(n=0n===n){const e=8*t;i=r=>BigInt.asUintN(e,r),a=i(a)}Je(e,{name:r,Rc:i,Xc:(e,r)=>(\"number\"==typeof r&&(r=BigInt(r)),r),Wc:er(r,t,!n),Yc:null})}function tr(e,r,t,n){Je(e>>>=0,{name:r=je(r>>>0),Rc:function(e){return!!e},Xc:function(e,r){return r?t:n},Wc:function(e){return this.Rc((A(),M)[e>>>0])},Yc:null})}var nr=[],ar=[0,1,,1,null,1,!0,1,!1,1];function ir(e){9<(e>>>=0)&&0==--ar[e+1]&&(ar[e]=void 0,nr.push(e))}var or=e=>{if(!e)throw new Ke(`Cannot use deleted val. handle = ${e}`);return ar[e]},ur=e=>{switch(e){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:const r=nr.pop()||ar.length;return ar[r]=e,ar[r+1]=1,r}};function cr(e){return this.Rc((A(),D)[e>>>2>>>0])}var sr={name:\"emscripten::val\",Rc:e=>{var r=or(e);return ir(e),r},Xc:(e,r)=>ur(r),Wc:cr,Yc:null};function fr(e){return Je(e>>>0,sr)}var dr=(e,r)=>{switch(r){case 4:return function(e){return this.Rc((A(),k)[e>>>2>>>0])};case 8:return function(e){return this.Rc((A(),I)[e>>>3>>>0])};default:throw new TypeError(`invalid float width (${r}): ${e}`)}};function lr(e,r,t){t>>>=0,Je(e>>>=0,{name:r=je(r>>>0),Rc:e=>e,Xc:(e,r)=>r,Wc:dr(r,t),Yc:null})}function mr(e,r,t,n,a){e>>>=0,t>>>=0,r=je(r>>>0);let i=e=>e;if(0===n){var o=32-8*t;i=e=>e<<o>>>o,a=i(a)}Je(e,{name:r,Rc:i,Xc:(e,r)=>r,Wc:er(r,t,0!==n),Yc:null})}function pr(e,r,t){function n(e){var r=(A(),D)[e>>>2>>>0];return e=(A(),D)[e+4>>>2>>>0],new a((A(),E).buffer,e,r)}var a=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][r];Je(e>>>=0,{name:t=je(t>>>0),Rc:n,Wc:n},{ne:!0})}var hr=(e,r,t)=>{var n=(A(),M);if(r>>>=0,0<t){var a=r;t=r+t-1;for(var i=0;i<e.length;++i){var o=e.codePointAt(i);if(127>=o){if(r>=t)break;n[r++>>>0]=o}else if(2047>=o){if(r+1>=t)break;n[r++>>>0]=192|o>>6,n[r++>>>0]=128|63&o}else if(65535>=o){if(r+2>=t)break;n[r++>>>0]=224|o>>12,n[r++>>>0]=128|o>>6&63,n[r++>>>0]=128|63&o}else{if(r+3>=t)break;n[r++>>>0]=240|o>>18,n[r++>>>0]=128|o>>12&63,n[r++>>>0]=128|o>>6&63,n[r++>>>0]=128|63&o,i++}}n[r>>>0]=0,e=r-a}else e=0;return e},vr=e=>{for(var r=0,t=0;t<e.length;++t){var n=e.charCodeAt(t);127>=n?r++:2047>=n?r+=2:55296<=n&&57343>=n?(r+=4,++t):r+=3}return r};function gr(e,r){Je(e>>>=0,{name:r=je(r>>>0),Rc(e){var r=(A(),D)[e>>>2>>>0];return r=De(e+4,r,!0),ga(e),r},Xc(e,r){r instanceof ArrayBuffer&&(r=new Uint8Array(r));var t=\"string\"==typeof r;if(!(t||ArrayBuffer.isView(r)&&1==r.BYTES_PER_ELEMENT))throw new Ke(\"Cannot pass non-string to std::string\");var n=t?vr(r):r.length,a=ba(4+n+1),i=a+4;return(A(),D)[a>>>2>>>0]=n,t?hr(r,i,n+1):(A(),M).set(r,i>>>0),null!==e&&e.push(ga,a),a},Wc:cr,Yc(e){ga(e)}})}var br=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0,wr=(e,r,t)=>{if(e>>>=1,16<(r=Re((A(),R),e,r/2,t))-e&&br)return br.decode((A(),R).buffer instanceof ArrayBuffer?(A(),R).subarray(e>>>0,r>>>0):(A(),R).slice(e,r));for(t=\"\";e<r;++e){var n=(A(),R)[e>>>0];t+=String.fromCharCode(n)}return t},yr=(e,r,t)=>{if(t??=2147483647,2>t)return 0;var n=r;t=(t-=2)<2*e.length?t/2:e.length;for(var a=0;a<t;++a){var i=e.charCodeAt(a);(A(),P)[r>>>1>>>0]=i,r+=2}return(A(),P)[r>>>1>>>0]=0,r-n},xr=e=>2*e.length,Sr=(e,r,t)=>{var n=\"\";e>>>=2;for(var a=0;!(a>=r/4);a++){var i=(A(),D)[e+a>>>0];if(!i&&!t)break;n+=String.fromCodePoint(i)}return n},Tr=(e,r,t)=>{if(r>>>=0,t??=2147483647,4>t)return 0;var n=r;t=n+t-4;for(var a=0;a<e.length;++a){var i=e.codePointAt(a);if(65535<i&&a++,(A(),U)[r>>>2>>>0]=i,(r+=4)+4>t)break}return(A(),U)[r>>>2>>>0]=0,r-n},Or=e=>{for(var r=0,t=0;t<e.length;++t)65535<e.codePointAt(t)&&t++,r+=4;return r};function Ar(e,r,t){if(e>>>=0,r>>>=0,t=je(t>>>=0),2===r)var n=wr,a=yr,i=xr;else n=Sr,a=Tr,i=Or;Je(e,{name:t,Rc:e=>{var t=(A(),D)[e>>>2>>>0];return t=n(e+4,t*r,!0),ga(e),t},Xc:(e,n)=>{if(\"string\"!=typeof n)throw new Ke(`Cannot pass non-string to C++ string type ${t}`);var o=i(n),u=ba(4+o+r);return(A(),D)[u>>>2>>>0]=o/r,a(n,u+4,o+r),null!==e&&e.push(ga,u),u},Wc:cr,Yc(e){ga(e)}})}function Br(e,r){Je(e>>>=0,{oe:!0,name:r=je(r>>>0),Rc:()=>{},Xc:()=>{}})}function Cr(e){Wa(e>>>0,!n,1,!t,131072,!1),ue()}var Er=e=>{if(!T)try{if(e(),!(0<Q))try{a?Fa(p):re(p)}catch(e){e instanceof H||\"unwind\"==e||s(0,e)}}catch(e){e instanceof H||\"unwind\"==e||s(0,e)}};function Mr(e){e>>>=0,\"function\"==typeof Atomics.Ee&&(Atomics.Ee((A(),U),e>>>2,e).value.then(Pr),e+=128,Atomics.store((A(),U),e>>>2,1))}var Pr=()=>{var e=va();e&&(Mr(e),Er(Va))};function Rr(e,r){(e>>>=0)==r>>>0?setTimeout(Pr):a?postMessage({$c:e,Vc:\"checkMailbox\"}):(e=ie[e])&&e.postMessage({Vc:\"checkMailbox\"})}var Ur=[];function Dr(e,r,t,n,a){for(r>>>=0,n/=2,Ur.length=n,t=a>>>0>>>3,a=0;a<n;a++)(A(),_)[t+2*a>>>0]?Ur[a]=(A(),_)[t+2*a+1>>>0]:Ur[a]=(A(),I)[t+2*a+1>>>0];return(r?da[r]:fa[e])(...Ur)}var kr=()=>{Q=0};function Ir(e){e>>>=0,a?postMessage({Vc:\"cleanupThread\",te:e}):oe(ie[e])}function _r(e){}var Wr=e=>{try{e()}catch(e){Y(e)}};function Lr(e){var r=(...r)=>{zr.push(e);try{return e(...r)}finally{T||(zr.pop(),$r&&1===Gr&&0===zr.length&&(Gr=0,Q+=1,Wr(Gi),\"undefined\"!=typeof Fibers&&Fibers.Oe()))}};return Yr.set(e,r),r}var Gr=0,$r=null,Fr=0,zr=[],Vr=new Map,Nr=new Map,Yr=new Map,qr=0,Hr=null,jr=[];var Xr=e=>function(e){if(!T){if(0===Gr){var r=!1,t=!1;e(((e=0)=>{if(!T&&(Fr=e,r=!0,t)){Gr=2,Wr((()=>$i($r))),\"undefined\"!=typeof MainLoop&&MainLoop.je&&MainLoop.resume(),e=!1;try{var n=function(){var e=(A(),U)[$r+8>>>2>>>0];return e=Nr.get(e),e=Yr.get(e),--Q,e()}()}catch(r){n=r,e=!0}var a=!1;if(!$r){var i=Hr;i&&(Hr=null,(e?i.reject:i.resolve)(n),a=!0)}if(e&&!a)throw n}})),t=!0,r||(Gr=1,$r=function(){var e=ba(65548),r=e+12;if((A(),D)[e>>>2>>>0]=r,(A(),D)[e+4>>>2>>>0]=r+65536,r=zr[0],!Vr.has(r)){var t=qr++;Vr.set(r,t),Nr.set(t,r)}return r=Vr.get(r),(A(),U)[e+8>>>2>>>0]=r,e}(),\"undefined\"!=typeof MainLoop&&MainLoop.je&&MainLoop.pause(),Wr((()=>Li($r))))}else 2===Gr?(Gr=0,Wr(Fi),ga($r),$r=null,jr.forEach(Er)):Y(`invalid state: ${Gr}`);return Fr}}((r=>{e().then(r)}));function Zr(e){return e>>>=0,Xr((async()=>{var r=await or(e);return ur(r)}))}var Qr=[],Kr=e=>{var r=Qr.length;return Qr.push(e),r},Jr=(e,r)=>{for(var t=Array(e),n=0;n<e;++n){var a=n,i=(A(),D)[r+4*n>>>2>>>0],o=Ze[i];if(void 0===o)throw e=`parameter ${n}`,i=ma(i),r=je(i),ga(i),new Ke(`${e} has unknown type ${r}`);t[a]=o}return t},et=(e,r,t)=>{var n=[];return e=e(n,t),n.length&&((A(),D)[r>>>2>>>0]=ur(n)),e},rt={},tt=e=>{var r=rt[e];return void 0===r?je(e):r};function nt(e,r,t){var[n,...a]=Jr(e,r>>>0);r=n.Xc.bind(n);var i=a.map((e=>e.Wc.bind(e)));e--;var o={toValue:or};switch(e=i.map(((e,r)=>{var t=`argFromPtr${r}`;return o[t]=e,`${t}(args${r?\"+\"+8*r:\"\"})`})),t){case 0:var u=\"toValue(handle)\";break;case 2:u=\"new (toValue(handle))\";break;case 3:u=\"\";break;case 1:o.getStringOrSymbol=tt,u=\"toValue(handle)[getStringOrSymbol(methodName)]\"}return u+=`(${e})`,n.oe||(o.toReturnWire=r,o.emval_returnValue=et,u=`return emval_returnValue(toReturnWire, destructorsRef, ${u})`),u=`return function (handle, methodName, destructorsRef, args) {\\n  ${u}\\n  }`,t=new Function(Object.keys(o),u)(...Object.values(o)),u=`methodCaller<(${a.map((e=>e.name))}) => ${n.name}>`,Kr(Object.defineProperty(t,\"name\",{value:u}))}function at(e,r){return r>>>=0,(e=or(e>>>0))==or(r)}function it(e){return 0==(e>>>=0)?ur(globalThis):(e=tt(e),ur(globalThis[e]))}function ot(e){return e=tt(e>>>0),ur(r[e])}function ut(e,r){return r>>>=0,e=or(e>>>0),r=or(r),ur(e[r])}function ct(e){9<(e>>>=0)&&(ar[e+1]+=1)}function st(e,r,t,n,a){return Qr[e>>>0](r>>>0,t>>>0,n>>>0,a>>>0)}function ft(){return ur([])}function dt(e){e=or(e>>>0);for(var r=Array(e.length),t=0;t<e.length;t++)r[t]=e[t];return ur(r)}function lt(e){return ur(tt(e>>>0))}function mt(){return ur({})}function pt(e){for(var r=or(e>>>=0);r.length;){var t=r.pop();r.pop()(t)}ir(e)}function ht(e,r,t){r>>>=0,t>>>=0,e=or(e>>>0),r=or(r),t=or(t),e[r]=t}function vt(e,r){e=me(e),r>>>=0,e=new Date(1e3*e),(A(),U)[r>>>2>>>0]=e.getUTCSeconds(),(A(),U)[r+4>>>2>>>0]=e.getUTCMinutes(),(A(),U)[r+8>>>2>>>0]=e.getUTCHours(),(A(),U)[r+12>>>2>>>0]=e.getUTCDate(),(A(),U)[r+16>>>2>>>0]=e.getUTCMonth(),(A(),U)[r+20>>>2>>>0]=e.getUTCFullYear()-1900,(A(),U)[r+24>>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,(A(),U)[r+28>>>2>>>0]=e}var gt=e=>0==e%4&&(0!=e%100||0==e%400),bt=[0,31,60,91,121,152,182,213,244,274,305,335],wt=[0,31,59,90,120,151,181,212,243,273,304,334];function yt(e,r){e=me(e),r>>>=0,e=new Date(1e3*e),(A(),U)[r>>>2>>>0]=e.getSeconds(),(A(),U)[r+4>>>2>>>0]=e.getMinutes(),(A(),U)[r+8>>>2>>>0]=e.getHours(),(A(),U)[r+12>>>2>>>0]=e.getDate(),(A(),U)[r+16>>>2>>>0]=e.getMonth(),(A(),U)[r+20>>>2>>>0]=e.getFullYear()-1900,(A(),U)[r+24>>>2>>>0]=e.getDay();var t=(gt(e.getFullYear())?bt:wt)[e.getMonth()]+e.getDate()-1|0;(A(),U)[r+28>>>2>>>0]=t,(A(),U)[r+36>>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var n=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(t!=n&&e.getTimezoneOffset()==Math.min(n,t)),(A(),U)[r+32>>>2>>>0]=e}function xt(e){e>>>=0;var r=new Date((A(),U)[e+20>>>2>>>0]+1900,(A(),U)[e+16>>>2>>>0],(A(),U)[e+12>>>2>>>0],(A(),U)[e+8>>>2>>>0],(A(),U)[e+4>>>2>>>0],(A(),U)[e>>>2>>>0],0),t=(A(),U)[e+32>>>2>>>0],n=r.getTimezoneOffset(),a=new Date(r.getFullYear(),6,1).getTimezoneOffset(),i=new Date(r.getFullYear(),0,1).getTimezoneOffset(),o=Math.min(i,a);return 0>t?(A(),U)[e+32>>>2>>>0]=Number(a!=i&&o==n):0<t!=(o==n)&&(a=Math.max(i,a),r.setTime(r.getTime()+6e4*((0<t?o:a)-n))),(A(),U)[e+24>>>2>>>0]=r.getDay(),t=(gt(r.getFullYear())?bt:wt)[r.getMonth()]+r.getDate()-1|0,(A(),U)[e+28>>>2>>>0]=t,(A(),U)[e>>>2>>>0]=r.getSeconds(),(A(),U)[e+4>>>2>>>0]=r.getMinutes(),(A(),U)[e+8>>>2>>>0]=r.getHours(),(A(),U)[e+12>>>2>>>0]=r.getDate(),(A(),U)[e+16>>>2>>>0]=r.getMonth(),(A(),U)[e+20>>>2>>>0]=r.getYear(),e=r.getTime(),BigInt(isNaN(e)?-1:e/1e3)}function St(e,r,t,n,i,o,u){return a?K(16,1,e,r,t,n,i,o,u):-52}function Tt(e,r,t,n,i,o){if(a)return K(17,1,e,r,t,n,i,o)}var Ot={},At=()=>performance.timeOrigin+performance.now();function Bt(e,r){if(a)return K(18,1,e,r);if(Ot[e]&&(clearTimeout(Ot[e].id),delete Ot[e]),!r)return 0;var t=setTimeout((()=>{delete Ot[e],Er((()=>za(e,performance.timeOrigin+performance.now())))}),r);return Ot[e]={id:t,Ne:r},0}function Ct(e,r,t,n){e>>>=0,r>>>=0,t>>>=0,n>>>=0;var a=(new Date).getFullYear(),i=new Date(a,0,1).getTimezoneOffset();a=new Date(a,6,1).getTimezoneOffset();var o=Math.max(i,a);(A(),D)[e>>>2>>>0]=60*o,(A(),U)[r>>>2>>>0]=Number(i!=a),e=(r=e=>{var r=Math.abs(e);return`UTC${0<=e?\"-\":\"+\"}${String(Math.floor(r/60)).padStart(2,\"0\")}${String(r%60).padStart(2,\"0\")}`})(i),r=r(a),a<i?(hr(e,t,17),hr(r,n,17)):(hr(e,n,17),hr(r,t,17))}var Et=()=>Date.now(),Mt=1;function Pt(e,r,t){if(t>>>=0,!(0<=e&&3>=e))return 28;if(0===e)e=Date.now();else{if(!Mt)return 52;e=performance.timeOrigin+performance.now()}return e=Math.round(1e6*e),(A(),_)[t>>>3>>>0]=BigInt(e),0}var Rt=[],Ut=(e,r)=>{Rt.length=0;for(var t;t=(A(),M)[e++>>>0];){var n=105!=t;r+=(n&=112!=t)&&r%8?4:0,Rt.push(112==t?(A(),D)[r>>>2>>>0]:106==t?(A(),_)[r>>>3>>>0]:105==t?(A(),U)[r>>>2>>>0]:(A(),I)[r>>>3>>>0]),r+=n?8:4}return Rt};function Dt(e,r,t){return e>>>=0,r=Ut(r>>>0,t>>>0),da[e](...r)}function kt(e,r,t){return e>>>=0,r=Ut(r>>>0,t>>>0),da[e](...r)}var It=()=>{};function _t(e,r){return S(De(e>>>0,r>>>0))}var Wt=()=>{throw Q+=1,\"unwind\"};function Lt(){return 4294901760}var Gt=()=>1,$t=()=>navigator.hardwareConcurrency,Ft={},zt=e=>{var r=vr(e)+1,t=ba(r);return t&&hr(e,t,r),t};function Vt(e){if(!(2147483648&(e>>>=0)))return Y(\"Cannot use emscripten_pc_get_function on native functions without -sUSE_OFFSET_CONVERTER\"),0;if(!(e=Ft[e]))return 0;var r;if(r=/^\\s+at (.*) \\(.*\\)$/.exec(e))e=r[1];else{if(!(r=/^(.+?)@/.exec(e)))return 0;e=r[1]}return ga(Vt.ee??0),Vt.ee=zt(e),Vt.ee}function Nt(e){e>>>=0;var r=(A(),M).length;if(e<=r||4294901760<e)return!1;for(var t=1;4>=t;t*=2){var n=r*(1+.2/t);n=Math.min(n,e+100663296);e:{n=(Math.min(4294901760,65536*Math.ceil(Math.max(e,n)/65536))-C.buffer.byteLength+65535)/65536|0;try{C.grow(n),G();var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1}var Yt=e=>{var r;if(r=/\\bwasm-function\\[\\d+\\]:(0x[0-9a-f]+)/.exec(e))return+r[1];if(/\\bwasm-function\\[(\\d+)\\]:(\\d+)/.exec(e))Y(\"Legacy backtrace format detected but -sUSE_OFFSET_CONVERTER not present.\");else if(r=/:(\\d+):\\d+(?:\\)|$)/.exec(e))return 2147483648|+r[1];return 0},qt=e=>{e.forEach((e=>{var r=Yt(e);r&&(Ft[r]=e)}))};function Ht(){var e=Error().stack.toString().split(\"\\n\");return\"Error\"==e[0]&&e.shift(),qt(e),Ft.de=Yt(e[3]),Ft.pe=e,Ft.de}function jt(e,r,t){if(e>>>=0,r>>>=0,Ft.de==e)var n=Ft.pe;else\"Error\"==(n=Error().stack.toString().split(\"\\n\"))[0]&&n.shift(),qt(n);for(var a=3;n[a]&&Yt(n[a])!=e;)++a;for(e=0;e<t&&n[e+a];++e)(A(),U)[r+4*e>>>2>>>0]=Yt(n[e+a]);return e}var Xt=e=>{var r=vr(e)+1,t=Xa(r);return hr(e,t,r),t},Zt=[],Qt=(e,r)=>{Zt[e>>>=0]=r},Kt=[],Jt=[],en=(e,r)=>{Jt[e]=new Promise((t=>r.finally((()=>t(e)))))},rn=e=>{if(e)return Zt[e>>>0]},tn=(e,r,t)=>{(A(),D)[e>>>2>>>0]=r,(A(),D)[e+4>>>2>>>0]=t},nn=e=>{var r=(A(),D)[e>>>2>>>0];return e=(A(),D)[e+4>>>2>>>0],De(r,e)},an=e=>{var r=(A(),D)[e>>>2>>>0];return e=(A(),D)[e+4>>>2>>>0],r?De(r,e):0===e?\"\":void 0},on=(e,r)=>{function t(t,n){t=e[t],(A(),U)[r+n>>>2>>>0]=t}function n(t,n){t=e[t],(A(),_)[r+n>>>3>>>0]=BigInt(t)}t(\"maxTextureDimension1D\",4),t(\"maxTextureDimension2D\",8),t(\"maxTextureDimension3D\",12),t(\"maxTextureArrayLayers\",16),t(\"maxBindGroups\",20),t(\"maxBindGroupsPlusVertexBuffers\",24),t(\"maxBindingsPerBindGroup\",28),t(\"maxDynamicUniformBuffersPerPipelineLayout\",32),t(\"maxDynamicStorageBuffersPerPipelineLayout\",36),t(\"maxSampledTexturesPerShaderStage\",40),t(\"maxSamplersPerShaderStage\",44),t(\"maxStorageBuffersPerShaderStage\",48),t(\"maxStorageTexturesPerShaderStage\",52),t(\"maxUniformBuffersPerShaderStage\",56),t(\"minUniformBufferOffsetAlignment\",80),t(\"minStorageBufferOffsetAlignment\",84),n(\"maxUniformBufferBindingSize\",64),n(\"maxStorageBufferBindingSize\",72),t(\"maxVertexBuffers\",88),n(\"maxBufferSize\",96),t(\"maxVertexAttributes\",104),t(\"maxVertexBufferArrayStride\",108),t(\"maxInterStageShaderVariables\",112),t(\"maxColorAttachments\",116),t(\"maxColorAttachmentBytesPerSample\",120),t(\"maxComputeWorkgroupStorageSize\",124),t(\"maxComputeInvocationsPerWorkgroup\",128),t(\"maxComputeWorkgroupSizeX\",132),t(\"maxComputeWorkgroupSizeY\",136),t(\"maxComputeWorkgroupSizeZ\",140),t(\"maxComputeWorkgroupsPerDimension\",144),void 0!==e.Le&&t(\"maxImmediateSize\",148)},un=[,\"validation\",\"out-of-memory\",\"internal\"],cn=[,\"compatibility\",\"core\"],sn={1:\"core-features-and-limits\",2:\"depth-clip-control\",3:\"depth32float-stencil8\",4:\"texture-compression-bc\",5:\"texture-compression-bc-sliced-3d\",6:\"texture-compression-etc2\",7:\"texture-compression-astc\",8:\"texture-compression-astc-sliced-3d\",9:\"timestamp-query\",10:\"indirect-first-instance\",11:\"shader-f16\",12:\"rg11b10ufloat-renderable\",13:\"bgra8unorm-storage\",14:\"float32-filterable\",15:\"float32-blendable\",16:\"clip-distances\",17:\"dual-source-blending\",18:\"subgroups\",19:\"texture-formats-tier1\",20:\"texture-formats-tier2\",21:\"primitive-index\",327692:\"chromium-experimental-unorm16-texture-formats\",327693:\"chromium-experimental-snorm16-texture-formats\",327732:\"chromium-experimental-multi-draw-indirect\"},fn=[,\"low-power\",\"high-performance\"],dn=[,\"occlusion\",\"timestamp\"],ln={undefined:1,unknown:1,destroyed:2};function mn(e,r,t,n,a,i){r=me(r),t=me(t),n>>>=0,a>>>=0,i>>>=0,e=rn(e>>>0);var o={};if(i){var u=(A(),D)[i+12>>>2>>>0];if(u){var c=(A(),D)[i+16>>>2>>>0];o.requiredFeatures=Array.from((A(),D).subarray(c>>>2>>>0,c+4*u>>>2>>>0),(e=>sn[e]))}var s=(A(),D)[i+20>>>2>>>0];if(s){var f={};function d(e,r,t=!1){r=s+r,4294967295==(r=(A(),D)[r>>>2>>>0])||t&&0==r||(f[e]=r)}function l(e,r){r=s+r;var t=(A(),D)[r>>>2>>>0],n=(A(),D)[r+4>>>2>>>0];4294967295==t&&4294967295==n||(f[e]=4294967296*(A(),D)[r+4>>>2>>>0]+(A(),D)[r>>>2>>>0])}d(\"maxTextureDimension1D\",4),d(\"maxTextureDimension2D\",8),d(\"maxTextureDimension3D\",12),d(\"maxTextureArrayLayers\",16),d(\"maxBindGroups\",20),d(\"maxBindGroupsPlusVertexBuffers\",24),d(\"maxDynamicUniformBuffersPerPipelineLayout\",32),d(\"maxDynamicStorageBuffersPerPipelineLayout\",36),d(\"maxSampledTexturesPerShaderStage\",40),d(\"maxSamplersPerShaderStage\",44),d(\"maxStorageBuffersPerShaderStage\",48),d(\"maxStorageTexturesPerShaderStage\",52),d(\"maxUniformBuffersPerShaderStage\",56),d(\"minUniformBufferOffsetAlignment\",80),d(\"minStorageBufferOffsetAlignment\",84),l(\"maxUniformBufferBindingSize\",64),l(\"maxStorageBufferBindingSize\",72),d(\"maxVertexBuffers\",88),l(\"maxBufferSize\",96),d(\"maxVertexAttributes\",104),d(\"maxVertexBufferArrayStride\",108),d(\"maxInterStageShaderVariables\",112),d(\"maxColorAttachments\",116),d(\"maxColorAttachmentBytesPerSample\",120),d(\"maxComputeWorkgroupStorageSize\",124),d(\"maxComputeInvocationsPerWorkgroup\",128),d(\"maxComputeWorkgroupSizeX\",132),d(\"maxComputeWorkgroupSizeY\",136),d(\"maxComputeWorkgroupSizeZ\",140),d(\"maxComputeWorkgroupsPerDimension\",144),d(\"maxImmediateSize\",148,!0),o.requiredLimits=f}(u=(A(),D)[i+24>>>2>>>0])&&(u={label:an(u+4)},o.defaultQueue=u),o.label=an(i+4)}Q+=1,en(r,e.requestDevice(o).then((e=>{--Q,Qt(a,e.queue),Qt(n,e),t&&(Q+=1,en(t,e.lost.then((r=>{--Q,e.onuncapturederror=()=>{};var n=Za(),a=Xt(r.message);Ra(t,ln[r.reason],a),ja(n)})))),e.onuncapturederror=e=>{var r=5;e.error instanceof GPUValidationError?r=2:e.error instanceof GPUOutOfMemoryError?r=3:e.error instanceof GPUInternalError&&(r=4);var t=Za();e=Xt(e.error.message),_a(n,r,e),ja(t)},Ia(r,1,n,0)}),(e=>{--Q;var a=Za();e=Xt(e.message),Ia(r,3,n,e),t&&Ra(t,4,e),ja(a)})))}function pn(e){var r=rn(e>>>=0),t=Kt[e];if(t){for(var n=0;n<t.length;++n)t[n]();delete Kt[e]}r.destroy()}var hn=()=>{var e=\"getMappedRange size=0 no longer means WGPU_WHOLE_MAP_SIZE\";hn.ld||(hn.ld={}),hn.ld[e]||(hn.ld[e]=1,S(e))};function vn(e,r,t){r>>>=0,t>>>=0;var n=rn(e>>>=0);0===t&&hn(),4294967295==t&&(t=void 0);try{var a=n.getMappedRange(r,t)}catch(e){return 0}var i=Na(16,a.byteLength);return(A(),M).set(new Uint8Array(a),i>>>0),Kt[e].push((()=>ga(i))),i}function gn(e,r,t){r>>>=0,t>>>=0;var n=rn(e>>>=0);0===t&&hn(),4294967295==t&&(t=void 0);try{var a=n.getMappedRange(r,t)}catch(e){return 0}var i=Na(16,a.byteLength);return(A(),M).fill(0,i,a.byteLength),Kt[e].push((()=>{new Uint8Array(a).set((A(),M).subarray(i>>>0,i+a.byteLength>>>0)),ga(i)})),i}function bn(e,r,t,n,a){e>>>=0,r=me(r),t=me(t),a>>>=0;var i=rn(e);Kt[e]=[],4294967295==a&&(a=void 0),Q+=1,en(r,i.mapAsync(t,n>>>0,a).then((()=>{--Q,Ua(r,1,0)}),(t=>{--Q,Za();var n=Xt(t.message);Ua(r,\"AbortError\"===t.name?4:\"OperationError\"===t.name?3:0,n),delete Kt[e]})))}function wn(e){var r=rn(e>>>=0),t=Kt[e];if(t){for(var n=0;n<t.length;++n)t[n]();delete Kt[e],r.unmap()}}function yn(e){delete Zt[e>>>0]}function xn(e,r,t){e>>>=0,r>>>=0,t>>>=0;var n=!!(A(),D)[r+32>>>2>>>0];r={label:an(r+4),usage:(A(),D)[r+16>>>2>>>0],size:4294967296*(A(),D)[r+28>>>2>>>0]+(A(),D)[r+24>>>2>>>0],mappedAtCreation:n},e=rn(e);try{var a=e.createBuffer(r)}catch(e){return!1}return Qt(t,a),n&&(Kt[t]=[]),!0}function Sn(e,r,t){e>>>=0,r>>>=0,t>>>=0;var n=(A(),D)[r>>>2>>>0],a=(A(),D)[n+4>>>2>>>0];r={label:an(r+4),code:\"\"},2===a&&(r.code=nn(n+8)),Qt(t,rn(e).createShaderModule(r))}var Tn=e=>{(e=rn(e)).onuncapturederror=null,e.destroy()};function On(e,r){r=me(r),e=rn(e>>>0),Q+=1,en(r,e.popErrorScope().then((e=>{--Q;var t=5;e?e instanceof GPUValidationError?t=2:e instanceof GPUOutOfMemoryError?t=3:e instanceof GPUInternalError&&(t=4):t=1;var n=Za();e=e?Xt(e.message):0,Da(r,1,t,e),ja(n)}),(e=>{--Q;var t=Za();e=Xt(e.message),Da(r,1,5,e),ja(t)})))}function An(e,r,t,n){if(r=me(r),n>>>=0,t>>>=0){var a=(A(),D)[t+4>>>2>>>0];a={featureLevel:cn[a],powerPreference:fn[(A(),D)[t+8>>>2>>>0]],forceFallbackAdapter:!!(A(),D)[t+12>>>2>>>0]},0!==(t=(A(),D)[t>>>2>>>0])&&(A(),a.Qe=!!(A(),D)[t+8>>>2>>>0])}\"gpu\"in navigator?(Q+=1,en(r,navigator.gpu.requestAdapter(a).then((e=>{if(--Q,e)Qt(n,e),ka(r,1,n,0);else{e=Za();var t=Xt(\"WebGPU not available on this browser (requestAdapter returned null)\");ka(r,3,n,t),ja(e)}}),(e=>{--Q;var t=Za();e=Xt(e.message),ka(r,4,n,e),ja(t)})))):(t=Za(),a=Xt(\"WebGPU not available on this browser (navigator.gpu is not available)\"),ka(r,3,n,a),ja(t))}function Bn(e,r,t){return e>>>=0,r>>>=0,t>>>=0,Xr((async()=>{var n=[];if(t){var a=(A(),U)[t>>>2>>>0];n.length=r+1,n[r]=new Promise((e=>setTimeout(e,a,0)))}else n.length=r;for(var i=0;i<r;++i){var o=4294967296*(A(),D)[e+8*i+4>>>2>>>0]+(A(),D)[e+8*i>>>2>>>0];if(!(o in Jt))return o;n[i]=Jt[o]}return n=await Promise.race(n),delete Jt[n],n}))}var Cn,En={},Mn=()=>{if(!Cn){var e,r={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.language||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:\"./this.program\"};for(e in En)void 0===En[e]?delete r[e]:r[e]=En[e];var t=[];for(e in r)t.push(`${e}=${r[e]}`);Cn=t}return Cn};function Pn(e,r){if(a)return K(19,1,e,r);e>>>=0,r>>>=0;var t,n=0,i=0;for(t of Mn()){var o=r+n;(A(),D)[e+i>>>2>>>0]=o,n+=hr(t,o,1/0)+1,i+=4}return 0}function Rn(e,r){if(a)return K(20,1,e,r);e>>>=0,r>>>=0;var t=Mn();for(var n of((A(),D)[e>>>2>>>0]=t.length,e=0,t))e+=vr(n)+1;return(A(),D)[r>>>2>>>0]=e,0}function Un(e){return a?K(21,1,e):52}function Dn(e,r,t,n){return a?K(22,1,e,r,t,n):52}function kn(e,r,t,n){return a?K(23,1,e,r,t,n):70}var In=[null,[],[]];function _n(e,r,t,n){if(a)return K(24,1,e,r,t,n);r>>>=0,t>>>=0,n>>>=0;for(var i=0,o=0;o<t;o++){var u=(A(),D)[r>>>2>>>0],c=(A(),D)[r+4>>>2>>>0];r+=8;for(var s=0;s<c;s++){var f=e,d=(A(),M)[u+s>>>0],l=In[f];0===d||10===d?((1===f?x:S)(Ue(l)),l.length=0):l.push(d)}i+=c}return(A(),D)[n>>>2>>>0]=i,0}function Wn(e){return e>>>0}function Ln(e,r){return on(rn(e>>>0).limits,r>>>0),1}function Gn(e,r){return rn(e>>>0).features.has(sn[r])}function $n(e){return BigInt(rn(e>>>0).size)}function Fn(e){return BigInt(rn(e>>>0).usage)}function zn(e,r){if(e>>>=0,r>>>=0){var t=an(r+4);t={label:t,timestampWrites:r=0!==(r=(A(),D)[r+12>>>2>>>0])?{querySet:rn((A(),D)[r+4>>>2>>>0]),beginningOfPassWriteIndex:(A(),D)[r+8>>>2>>>0],endOfPassWriteIndex:(A(),D)[r+12>>>2>>>0]}:void 0}}return e=rn(e),r=Aa(0),Qt(r,e.beginComputePass(t)),r}function Vn(e,r,t,n,a,i){t=me(t),a=me(a),i=me(i),rn(e>>>0).copyBufferToBuffer(rn(r>>>0),t,rn(n>>>0),a,i)}function Nn(e){e=rn(e>>>0);var r=Ta(0);return Qt(r,e.finish()),r}function Yn(e,r,t,n,a,i){i=me(i),rn(e>>>0).resolveQuerySet(rn(r>>>0),t,n,rn(a>>>0),i)}function qn(e,r,t,n){rn(e>>>0).dispatchWorkgroups(r,t,n)}function Hn(e){rn(e>>>0).end()}function jn(e,r,t,n,a){n>>>=0,a>>>=0,e=rn(e>>>0),t=rn(t>>>0),0==n?e.setBindGroup(r,t):e.setBindGroup(r,t,(A(),D),a>>>2,n)}function Xn(e,r){rn(e>>>0).setPipeline(rn(r>>>0))}function Zn(e,r,t){rn(e>>>0).Pe(rn(r>>>0),t)}function Qn(e,r){e=rn(e>>>0);var t=Sa(0);return Qt(t,e.getBindGroupLayout(r)),t}function Kn(e,r){e>>>=0;var t=an(4+(r>>>=0)),n=rn((A(),D)[r+12>>>2>>>0]),a=(A(),D)[r+16>>>2>>>0];r=(A(),D)[r+20>>>2>>>0];for(var i=[],o=0;o<a;++o){var u=i,c=u.push,s=r+40*o,f=(A(),D)[s+8>>>2>>>0],d=(A(),D)[s+32>>>2>>>0],l=(A(),D)[s+36>>>2>>>0],m=(A(),D)[s+4>>>2>>>0];f?(d=s+24,-1==(d=(A(),D)[d>>>2>>>0]+4294967296*(A(),U)[d+4>>>2>>>0])&&(d=void 0),s={binding:m,resource:{buffer:rn(f),offset:4294967296*(A(),D)[s+4+16>>>2>>>0]+(A(),D)[s+16>>>2>>>0],size:d}}):s=d?{binding:m,resource:rn(d)}:{binding:m,resource:rn(l)},c.call(u,s)}return t={label:t,layout:n,entries:i},e=rn(e),n=xa(0),Qt(n,e.createBindGroup(t)),n}function Jn(e,r){var t;return e>>>=0,(r>>>=0)&&(t={label:an(r+4)}),e=rn(e),r=Oa(0),Qt(r,e.createCommandEncoder(t)),r}function ea(e,r){e>>>=0;var t=r>>>0;r=an(t+4);var n=(n=(A(),D)[t+12>>>2>>>0])?rn(n):\"auto\";if(t+=16){var a=rn((A(),D)[t+4>>>2>>>0]),i=(A(),D)[t+16>>>2>>>0],o=(A(),D)[t+20>>>2>>>0];if(i){for(var u={},c=0;c<i;++c){var s=o+24*c;u[nn(s+4)]=(A(),I)[s+16>>>3>>>0]}i=u}else i=void 0;t={module:a,constants:i,entryPoint:an(t+8)}}else t=void 0;return r={label:r,layout:n,compute:t},e=rn(e),n=Ba(0),Qt(n,e.createComputePipeline(r)),n}function ra(e,r){e>>>=0,r>>>=0,r={type:dn[(A(),D)[r+12>>>2>>>0]],count:(A(),D)[r+16>>>2>>>0]},e=rn(e);var t=Ca(0);return Qt(t,e.createQuerySet(r)),t}function ta(e,r){e=rn(e>>>0).adapterInfo,r>>>=0,(A(),U)[r+52>>>2>>>0]=e.subgroupMinSize,(A(),U)[r+56>>>2>>>0]=e.subgroupMaxSize;var t=zt(e.vendor+e.architecture+e.device+e.description),n=vr(e.vendor);return tn(r+4,t,n),t+=n,n=vr(e.architecture),tn(r+12,t,n),t+=n,n=vr(e.device),tn(r+20,t,n),tn(r+28,t+n,vr(e.description)),(A(),U)[r+36>>>2>>>0]=2,e=e.isFallbackAdapter?3:4,(A(),U)[r+40>>>2>>>0]=e,(A(),U)[r+44>>>2>>>0]=0,(A(),U)[r+48>>>2>>>0]=0,1}var na={\"core-features-and-limits\":1,\"depth-clip-control\":2,\"depth32float-stencil8\":3,\"texture-compression-bc\":4,\"texture-compression-bc-sliced-3d\":5,\"texture-compression-etc2\":6,\"texture-compression-astc\":7,\"texture-compression-astc-sliced-3d\":8,\"timestamp-query\":9,\"indirect-first-instance\":10,\"shader-f16\":11,\"rg11b10ufloat-renderable\":12,\"bgra8unorm-storage\":13,\"float32-filterable\":14,\"float32-blendable\":15,\"clip-distances\":16,\"dual-source-blending\":17,subgroups:18,\"texture-formats-tier1\":19,\"texture-formats-tier2\":20,\"primitive-index\":21,\"chromium-experimental-unorm16-texture-formats\":327692,\"chromium-experimental-snorm16-texture-formats\":327693,\"chromium-experimental-multi-draw-indirect\":327732};function aa(e,r){r>>>=0,e=rn(e>>>0);var t=ba(4*e.features.size),n=0,a=0;e.features.forEach((e=>{0<=(e=na[e])&&((A(),U)[t+n>>>2>>>0]=e,n+=4,a++)})),(A(),D)[r+4>>>2>>>0]=t,(A(),D)[r>>>2>>>0]=a}function ia(e,r){return on(rn(e>>>0).limits,r>>>0),1}function oa(e,r){return rn(e>>>0).features.has(sn[r])}function ua(e,r){rn(e>>>0).pushErrorScope(un[r])}function ca(e,r,t){r>>>=0,t>>>=0,e=rn(e>>>0),r=Array.from((A(),U).subarray(t>>>2>>>0,t+4*r>>>2>>>0),(e=>rn(e))),e.submit(r)}function sa(e,r,t,n,a){t=me(t),n>>>=0,a>>>=0,e=rn(e>>>0),r=rn(r>>>0),n=(A(),M).subarray(n>>>0,n+a>>>0),e.writeBuffer(r,t,n,0,a)}a||function(){for(var e=r.numThreads-1;e--;)se();X.push((()=>{z++,function(e){a?e():Promise.all(te.map(ce)).then(e)}((()=>N()))}))}(),a||(C=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),G()),r.wasmBinary&&(l=r.wasmBinary),r.stackSave=()=>Za(),r.stackRestore=e=>ja(e),r.stackAlloc=e=>Xa(e),r.setValue=function(e,r,t=\"i8\"){switch(t.endsWith(\"*\")&&(t=\"*\"),t){case\"i1\":case\"i8\":(A(),E)[e>>>0]=r;break;case\"i16\":(A(),P)[e>>>1>>>0]=r;break;case\"i32\":(A(),U)[e>>>2>>>0]=r;break;case\"i64\":(A(),_)[e>>>3>>>0]=BigInt(r);break;case\"float\":(A(),k)[e>>>2>>>0]=r;break;case\"double\":(A(),I)[e>>>3>>>0]=r;break;case\"*\":(A(),D)[e>>>2>>>0]=r;break;default:Y(`invalid type for setValue: ${t}`)}},r.getValue=function(e,r=\"i8\"){switch(r.endsWith(\"*\")&&(r=\"*\"),r){case\"i1\":case\"i8\":return(A(),E)[e>>>0];case\"i16\":return(A(),P)[e>>>1>>>0];case\"i32\":return(A(),U)[e>>>2>>>0];case\"i64\":return(A(),_)[e>>>3>>>0];case\"float\":return(A(),k)[e>>>2>>>0];case\"double\":return(A(),I)[e>>>3>>>0];case\"*\":return(A(),D)[e>>>2>>>0];default:Y(`invalid type for getValue: ${r}`)}},r.UTF8ToString=De,r.stringToUTF8=hr,r.lengthBytesUTF8=vr;var fa=[J,ee,Ce,ke,Ie,_e,We,Le,Ge,$e,Fe,ze,Ve,Ne,Ye,qe,St,Tt,Bt,Pn,Rn,Un,Dn,kn,_n],da={1055692:(e,t,n,a,i)=>{if(void 0===r||!r.Zc)return 1;if((e=De(Number(e>>>0))).startsWith(\"./\")&&(e=e.substring(2)),!(e=r.Zc.get(e)))return 2;if(t=Number(t>>>0),n=Number(n>>>0),a=Number(a>>>0),t+n>e.byteLength)return 3;try{const o=e.subarray(t,t+n);switch(i){case 0:(A(),M).set(o,a>>>0);break;case 1:r.ge?r.ge(a,o):r.Ke(a,o);break;default:return 4}return 0}catch{return 4}},1056516:(e,t,n)=>{r.ie(e,(A(),M).subarray(t>>>0,t+n>>>0))},1056580:()=>r.Ie(),1056622:e=>{r.he(e)},1056659:()=>\"undefined\"!=typeof wasmOffsetConverter};function la(){return\"undefined\"!=typeof wasmOffsetConverter}var ma,pa,ha,va,ga,ba,wa,ya,xa,Sa,Ta,Oa,Aa,Ba,Ca,Ea,Ma,Pa,Ra,Ua,Da,ka,Ia,_a,Wa,La,Ga,$a,Fa,za,Va,Na,Ya,qa,Ha,ja,Xa,Za,Qa,Ka,Ja,ei,ri,ti,ni,ai,ii,oi,ui,ci,si,fi,di,li,mi,pi,hi,vi,gi,bi,wi,yi,xi,Si,Ti,Oi,Ai,Bi,Ci,Ei,Mi,Pi,Ri,Ui,Di,ki,Ii,_i,Wi,Li,Gi,$i,Fi,zi=await async function(){function e(e,t){var n=zi=e.exports;e={};for(let[r,t]of Object.entries(n))\"function\"==typeof t?(n=Lr(t),e[r]=n):e[r]=t;return zi=e,zi=function(){var e=zi,r=e=>r=>e(r)>>>0,t=e=>()=>e()>>>0;return(e=Object.assign({},e)).dc=r(e.dc),e.Gc=t(e.Gc),e.Ic=r(e.Ic),e.td=(e=>(r,t)=>e(r,t)>>>0)(e.td),e.yd=r(e.yd),e.zd=t(e.zd),e.Dd=r(e.Dd),e}(),ae.push(zi.kd),m=t,ma=(t=zi).dc,pa=t.ec,r._OrtInit=t.fc,r._OrtGetLastError=t.gc,r._OrtCreateSessionOptions=t.hc,r._OrtAppendExecutionProvider=t.ic,r._OrtAddFreeDimensionOverride=t.jc,r._OrtAddSessionConfigEntry=t.kc,r._OrtReleaseSessionOptions=t.lc,r._OrtCreateSession=t.mc,r._OrtReleaseSession=t.nc,r._OrtGetInputOutputCount=t.oc,r._OrtGetInputOutputMetadata=t.pc,r._OrtFree=t.qc,r._OrtCreateTensor=t.rc,r._OrtGetTensorData=t.sc,r._OrtReleaseTensor=t.tc,r._OrtCreateRunOptions=t.uc,r._OrtAddRunConfigEntry=t.vc,r._OrtReleaseRunOptions=t.wc,r._OrtCreateBinding=t.xc,r._OrtBindInput=t.yc,r._OrtBindOutput=t.zc,r._OrtClearBoundOutputs=t.Ac,r._OrtReleaseBinding=t.Bc,r._OrtRunWithBinding=t.Cc,r._OrtRun=t.Dc,r._OrtEndProfiling=t.Ec,r._OrtGetWebGpuDevice=ha=t.Fc,va=t.Gc,r._free=ga=t.Hc,r._malloc=ba=t.Ic,r._wgpuBufferRelease=wa=t.Jc,r._wgpuCreateInstance=ya=t.Kc,xa=t.Lc,Sa=t.Mc,Ta=t.Nc,Oa=t.Oc,Aa=t.Pc,Ba=t.Qc,Ca=t.Sc,Ea=t.ad,Ma=t.bd,Pa=t.cd,Ra=t.ed,Ua=t.fd,Da=t.gd,ka=t.hd,Ia=t.id,_a=t.jd,Wa=t.md,La=t.nd,Ga=t.od,$a=t.pd,Fa=t.qd,za=t.rd,Va=t.sd,Na=t.td,Ya=t.ud,qa=t.vd,Ha=t.wd,ja=t.xd,Xa=t.yd,Za=t.zd,Qa=t.Ad,Ka=t.Bd,Ja=t.Cd,ei=t.Dd,ri=t.Ed,ti=t.Fd,ni=t.Gd,ai=t.Hd,ii=t.Id,oi=t.Jd,ui=t.Kd,ci=t.Ld,si=t.Md,fi=t.Nd,di=t.Od,li=t.Pd,mi=t.Qd,pi=t.Rd,hi=t.Sd,vi=t.Td,gi=t.Vd,bi=t.Wd,wi=t.Xd,yi=t.Yd,xi=t.Zd,Si=t.$d,Ti=t.ae,Oi=t.be,Ai=t.ce,Bi=t.me,Ci=t.re,Ei=t.ue,Mi=t.ve,Pi=t.we,Ri=t.xe,Ui=t.ye,Di=t.ze,ki=t.Ae,Ii=t.Be,_i=t.Ce,Wi=t.De,Li=t.cf,Gi=t.df,$i=t.ef,Fi=t.ff,N(),zi}z++;var t,n=q();return r.instantiateWasm?new Promise((t=>{r.instantiateWasm(n,((r,n)=>{t(e(r,n))}))})):a?new Promise((r=>{g=t=>{var n=new WebAssembly.Instance(t,q());r(e(n,t))}})):(F??=r.locateFile?r.locateFile?r.locateFile(\"ort-wasm-simd-threaded.asyncify.wasm\",d):d+\"ort-wasm-simd-threaded.asyncify.wasm\":new URL(\"ort-wasm-simd-threaded.asyncify.wasm\",import.meta.url).href,t=await async function(e){var r=F;if(!l&&\"function\"==typeof WebAssembly.instantiateStreaming&&!O(r))try{var t=fetch(r,{credentials:\"same-origin\"});return await WebAssembly.instantiateStreaming(t,e)}catch(e){S(`wasm streaming compile failed: ${e}`),S(\"falling back to ArrayBuffer instantiation\")}return async function(e,r){try{var t=await async function(e){if(!l)try{var r=await u(e);return new Uint8Array(r)}catch{}if(e==F&&l)e=new Uint8Array(l);else{if(!c)throw\"both async and sync fetching of the wasm failed\";e=c(e)}return e}(e);return await WebAssembly.instantiate(t,r)}catch(e){S(`failed to asynchronously prepare wasm: ${e}`),Y(e)}}(r,e)}(n),e(t.instance,t.module))}();function Vi(e,r,t,n){var a=Za();try{return ci(e,r,t,n)}catch(e){if(ja(a),e!==e+0)throw e;Ya(1,0)}}function Ni(e,r,t){var n=Za();try{return ui(e,r,t)}catch(e){if(ja(n),e!==e+0)throw e;Ya(1,0)}}function Yi(e,r,t){var n=Za();try{ri(e,r,t)}catch(e){if(ja(n),e!==e+0)throw e;Ya(1,0)}}function qi(e,r){var t=Za();try{return ti(e,r)}catch(e){if(ja(t),e!==e+0)throw e;Ya(1,0)}}function Hi(e){var r=Za();try{ni(e)}catch(e){if(ja(r),e!==e+0)throw e;Ya(1,0)}}function ji(e,r,t,n,a,i,o){var u=Za();try{return oi(e,r,t,n,a,i,o)}catch(e){if(ja(u),e!==e+0)throw e;Ya(1,0)}}function Xi(e,r){var t=Za();try{di(e,r)}catch(e){if(ja(t),e!==e+0)throw e;Ya(1,0)}}function Zi(e,r,t,n){var a=Za();try{fi(e,r,t,n)}catch(e){if(ja(a),e!==e+0)throw e;Ya(1,0)}}function Qi(e,r,t,n,a,i,o){var u=Za();try{mi(e,r,t,n,a,i,o)}catch(e){if(ja(u),e!==e+0)throw e;Ya(1,0)}}function Ki(e,r,t,n,a,i,o){var u=Za();try{pi(e,r,t,n,a,i,o)}catch(e){if(ja(u),e!==e+0)throw e;Ya(1,0)}}function Ji(e,r,t,n,a,i,o,u){var c=Za();try{Si(e,r,t,n,a,i,o,u)}catch(e){if(ja(c),e!==e+0)throw e;Ya(1,0)}}function eo(e,r,t,n,a,i){var o=Za();try{ai(e,r,t,n,a,i)}catch(e){if(ja(o),e!==e+0)throw e;Ya(1,0)}}function ro(e,r,t,n,a){var i=Za();try{ii(e,r,t,n,a)}catch(e){if(ja(i),e!==e+0)throw e;Ya(1,0)}}function to(e,r,t,n,a){var i=Za();try{return li(e,r,t,n,a)}catch(e){if(ja(i),e!==e+0)throw e;Ya(1,0)}}function no(e,r,t,n,a,i,o,u){var c=Za();try{Ti(e,r,t,n,a,i,o,u)}catch(e){if(ja(c),e!==e+0)throw e;Ya(1,0)}}function ao(e,r,t,n,a,i,o,u,c,s,f,d){var l=Za();try{hi(e,r,t,n,a,i,o,u,c,s,f,d)}catch(e){if(ja(l),e!==e+0)throw e;Ya(1,0)}}function io(e,r,t,n,a,i){var o=Za();try{return Oi(e,r,t,n,a,i)}catch(e){if(ja(o),e!==e+0)throw e;Ya(1,0)}}function oo(e,r,t){var n=Za();try{return bi(e,r,t)}catch(e){if(ja(n),e!==e+0)throw e;return Ya(1,0),0n}}function uo(e,r,t,n,a,i,o,u,c){var s=Za();try{si(e,r,t,n,a,i,o,u,c)}catch(e){if(ja(s),e!==e+0)throw e;Ya(1,0)}}function co(e){var r=Za();try{return yi(e)}catch(e){if(ja(r),e!==e+0)throw e;Ya(1,0)}}function so(e,r){var t=Za();try{return Wi(e,r)}catch(e){if(ja(t),e!==e+0)throw e;return Ya(1,0),0n}}function fo(e){var r=Za();try{return vi(e)}catch(e){if(ja(r),e!==e+0)throw e;return Ya(1,0),0n}}function lo(e,r,t,n,a,i){var o=Za();try{return Ei(e,r,t,n,a,i)}catch(e){if(ja(o),e!==e+0)throw e;Ya(1,0)}}function mo(e,r,t,n,a,i){var o=Za();try{return Mi(e,r,t,n,a,i)}catch(e){if(ja(o),e!==e+0)throw e;Ya(1,0)}}function po(e,r,t){var n=Za();try{return Pi(e,r,t)}catch(e){if(ja(n),e!==e+0)throw e;Ya(1,0)}}function ho(e,r,t,n,a,i,o,u){var c=Za();try{return Ai(e,r,t,n,a,i,o,u)}catch(e){if(ja(c),e!==e+0)throw e;Ya(1,0)}}function vo(e,r,t,n,a){var i=Za();try{return Ri(e,r,t,n,a)}catch(e){if(ja(i),e!==e+0)throw e;return Ya(1,0),0n}}function go(e,r,t,n){var a=Za();try{return Ui(e,r,t,n)}catch(e){if(ja(a),e!==e+0)throw e;Ya(1,0)}}function bo(e,r,t,n){var a=Za();try{return Di(e,r,t,n)}catch(e){if(ja(a),e!==e+0)throw e;Ya(1,0)}}function wo(e,r,t,n,a,i,o,u,c,s,f,d){var l=Za();try{return ki(e,r,t,n,a,i,o,u,c,s,f,d)}catch(e){if(ja(l),e!==e+0)throw e;Ya(1,0)}}function yo(e,r,t,n,a,i,o,u,c,s,f){var d=Za();try{Bi(e,r,t,n,a,i,o,u,c,s,f)}catch(e){if(ja(d),e!==e+0)throw e;Ya(1,0)}}function xo(e,r,t,n,a,i,o,u,c,s,f,d,l,m,p,h){var v=Za();try{Ci(e,r,t,n,a,i,o,u,c,s,f,d,l,m,p,h)}catch(e){if(ja(v),e!==e+0)throw e;Ya(1,0)}}function So(e,r,t,n){var a=Za();try{return Ii(e,r,t,n)}catch(e){if(ja(a),e!==e+0)throw e;Ya(1,0)}}function To(e,r,t,n,a){var i=Za();try{return _i(e,r,t,n,a)}catch(e){if(ja(i),e!==e+0)throw e;Ya(1,0)}}function Oo(e,r,t){var n=Za();try{return gi(e,r,t)}catch(e){if(ja(n),e!==e+0)throw e;Ya(1,0)}}function Ao(e,r,t){var n=Za();try{return wi(e,r,t)}catch(e){if(ja(n),e!==e+0)throw e;Ya(1,0)}}function Bo(e,r,t,n){var a=Za();try{xi(e,r,t,n)}catch(e){if(ja(a),e!==e+0)throw e;Ya(1,0)}}return function e(){if(0<z)V=e;else if(a)h?.(r),$();else{for(;0<X.length;)X.shift()(r);0<z?V=e:(r.calledRun=!0,T||($(),h?.(r)))}}(),r.PTR_SIZE=4,r.webgpuInit=e=>{const t=new WeakMap;let n,a,i=1;r.webgpuRegisterDevice=e=>{if(void 0!==a)throw Error(\"another WebGPU EP inference session is being created.\");if(e){var r=t.get(e);if(!r){const n=((e,r=0)=>{var t=Pa(r);return r=Ma(r,t),Qt(t,e.queue),Qt(r,e),r})(e,r=ya(0));r=[i++,r,n],t.set(e,r)}return n=e,a=r[0],r}n=void 0,a=0};const o=new Map;r.webgpuOnCreateSession=r=>{if(void 0!==a){var t=a;if(a=void 0,r){const a=ha(t);o.set(r,a),0===t&&e(n??rn(a))}n=void 0}},r.webgpuOnReleaseSession=e=>{o.delete(e)};const u=Symbol(\"gpuBufferMetadata\");r.webgpuRegisterBuffer=(e,r,t)=>{if(t)return e[u]=[t,NaN],t;if(t=e[u])return t[1]++,t[0];if(void 0===(r=o.get(r)))throw Error(\"Invalid session handle passed to webgpuRegisterBuffer\");return r=((e,r=0)=>(\"pending\"!=e.mapState||Y(),r=Ea(r,\"mapped\"==e.mapState?3:1),Qt(r,e),\"mapped\"==e.mapState&&(Kt[r]=[]),r))(e,r),e[u]=[r,1],r},r.webgpuUnregisterBuffer=e=>{const r=e[u];if(!r)throw Error(\"Buffer is not registered\");r[1]--,0===r[1]&&(wa(r[0]),delete e[u])},r.webgpuGetBuffer=e=>rn(e),r.webgpuCreateDownloader=(e,r,t)=>{if(void 0===(t=o.get(t)))throw Error(\"Invalid session handle passed to webgpuRegisterBuffer\");const n=rn(t),a=16*Math.ceil(Number(r)/16);return async()=>{const t=n.createBuffer({size:a,usage:9});try{const i=n.createCommandEncoder();return i.copyBufferToBuffer(e,0,t,0,a),n.queue.submit([i.finish()]),await t.mapAsync(GPUMapMode.READ),t.getMappedRange().slice(0,r)}finally{t.destroy()}}},r.ge=(e,r)=>{var t=r.buffer;const i=r.byteOffset,o=r.byteLength;if(r=16*Math.ceil(Number(o)/16),e=rn(e),!n){var u=ha(a);n=rn(u)}const c=(u=n.createBuffer({mappedAtCreation:!0,size:r,usage:6})).getMappedRange();new Uint8Array(c).set(new Uint8Array(t,i,o)),u.unmap(),(t=n.createCommandEncoder()).copyBufferToBuffer(u,0,e,0,r),n.queue.submit([t.finish()]),u.destroy()}},r.webnnInit=e=>{const t=e[0];[r.Ie,r.he,r.webnnEnsureTensor,r.ie,r.webnnDownloadTensor,r.He,r.webnnEnableTraceEvent]=e.slice(1),r.webnnReleaseTensorId=r.he,r.webnnUploadTensor=r.ie,r.webnnRegisterMLContext=r.He,r.webnnOnRunStart=e=>t.onRunStart(e),r.webnnOnRunEnd=t.onRunEnd.bind(t),r.webnnOnReleaseSession=e=>{t.onReleaseSession(e)},r.webnnCreateMLTensorDownloader=(e,r)=>t.createMLTensorDownloader(e,r),r.webnnRegisterMLTensor=(e,r,n,a)=>t.registerMLTensor(e,r,n,a),r.webnnCreateMLContext=e=>t.createMLContext(e),r.webnnRegisterMLConstant=(e,n,a,i,o,u)=>t.registerMLConstant(e,n,a,i,o,r.Zc,u),r.webnnRegisterGraphInput=t.registerGraphInput.bind(t),r.webnnIsGraphInput=t.isGraphInput.bind(t),r.webnnRegisterGraphOutput=t.registerGraphOutput.bind(t),r.webnnIsGraphOutput=t.isGraphOutput.bind(t),r.webnnCreateTemporaryTensor=t.createTemporaryTensor.bind(t),r.webnnIsGraphInputOutputTypeSupported=t.isGraphInputOutputTypeSupported.bind(t)},L?r:new Promise(((e,r)=>{h=e,v=r}))}export default e;var r=globalThis.self?.name?.startsWith(\"em-pthread\");r&&e();","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport type { OrtWasmModule } from './wasm-types';\nimport { isNode } from './wasm-utils-env';\n\n/**\n * The origin of the current location.\n *\n * In Node.js, this is undefined.\n */\nconst origin = isNode || typeof location === 'undefined' ? undefined : location.origin;\n\n/**\n * Some bundlers (eg. Webpack) will rewrite `import.meta.url` to a file URL at compile time.\n *\n * This function checks if `import.meta.url` starts with `file:`, but using the `>` and `<` operators instead of\n * `startsWith` function so that code minimizers can remove the dead code correctly.\n *\n * For example, if we use terser to minify the following code:\n * ```js\n * if (\"file://hard-coded-filename\".startsWith(\"file:\")) {\n *   console.log(1)\n * } else {\n *   console.log(2)\n * }\n *\n * if (\"file://hard-coded-filename\" > \"file:\" && \"file://hard-coded-filename\" < \"file;\") {\n *   console.log(3)\n * } else {\n *   console.log(4)\n * }\n * ```\n *\n * The minified code will be:\n * ```js\n * \"file://hard-coded-filename\".startsWith(\"file:\")?console.log(1):console.log(2),console.log(3);\n * ```\n *\n * (use Terser 5.39.0 with default options, https://try.terser.org/)\n *\n * @returns true if the import.meta.url is hardcoded as a file URI.\n */\nexport const isEsmImportMetaUrlHardcodedAsFileUri =\n  BUILD_DEFS.IS_ESM && BUILD_DEFS.ESM_IMPORT_META_URL! > 'file:' && BUILD_DEFS.ESM_IMPORT_META_URL! < 'file;';\n\nconst getScriptSrc = (): string | undefined => {\n  // if Nodejs, return undefined\n  if (isNode) {\n    return undefined;\n  }\n  // if It's ESM, use import.meta.url\n  if (BUILD_DEFS.IS_ESM) {\n    // For ESM, if the import.meta.url is a file URL, this usually means the bundler rewrites `import.meta.url` to\n    // the file path at compile time. In this case, this file path cannot be used to determine the runtime URL.\n    //\n    // We need to use the URL constructor like this:\n    // ```js\n    // new URL('actual-bundle-name.js', import.meta.url).href\n    // ```\n    // So that bundler can preprocess the URL correctly.\n    if (isEsmImportMetaUrlHardcodedAsFileUri) {\n      // if the rewritten URL is a relative path, we need to use the origin to resolve the URL.\n\n      // The following is a workaround for Vite.\n      //\n      // Vite uses a bundler(rollup/rolldown) that does not rewrite `import.meta.url` to a file URL. So in theory, this\n      // code path should not be executed in Vite. However, the bundler does not know it and it still try to load the\n      // following pattern:\n      // - `return new URL('filename', import.meta.url).href`\n      //\n      // By replacing the pattern above with the following code, we can skip the resource loading behavior:\n      // - `const URL2 = URL; return new URL2('filename', import.meta.url).href;`\n      //\n      // And it still works in Webpack.\n      const URL2 = URL;\n      return new URL(new URL2(BUILD_DEFS.BUNDLE_FILENAME, BUILD_DEFS.ESM_IMPORT_META_URL).href, origin).href;\n    }\n\n    return BUILD_DEFS.ESM_IMPORT_META_URL;\n  }\n\n  return typeof document !== 'undefined'\n    ? (document.currentScript as HTMLScriptElement)?.src\n    : // use `self.location.href` if available\n      typeof self !== 'undefined'\n      ? self.location?.href\n      : undefined;\n};\n\n/**\n * The classic script source URL. This is not always available in non ESModule environments.\n *\n * In Node.js, this is undefined.\n */\nexport const scriptSrc = getScriptSrc();\n\n/**\n * Infer the wasm path prefix from the script source URL.\n *\n * @returns The inferred wasm path prefix, or undefined if the script source URL is not available or is a blob URL.\n */\nexport const inferWasmPathPrefixFromScriptSrc = (): string | undefined => {\n  if (scriptSrc && !scriptSrc.startsWith('blob:')) {\n    return scriptSrc.substring(0, scriptSrc.lastIndexOf('/') + 1);\n  }\n  return undefined;\n};\n\n/**\n * Check if the given filename with prefix is from the same origin.\n */\nconst isSameOrigin = (filename: string, prefixOverride?: string) => {\n  try {\n    const baseUrl = prefixOverride ?? scriptSrc;\n    const url = baseUrl ? new URL(filename, baseUrl) : new URL(filename);\n    return url.origin === origin;\n  } catch {\n    return false;\n  }\n};\n\n/**\n * Normalize the inputs to an absolute URL with the given prefix override. If failed, return undefined.\n */\nconst normalizeUrl = (filename: string, prefixOverride?: string) => {\n  const baseUrl = prefixOverride ?? scriptSrc;\n  try {\n    const url = baseUrl ? new URL(filename, baseUrl) : new URL(filename);\n    return url.href;\n  } catch {\n    return undefined;\n  }\n};\n\n/**\n * Create a fallback URL if an absolute URL cannot be created by the normalizeUrl function.\n */\nconst fallbackUrl = (filename: string, prefixOverride?: string) => `${prefixOverride ?? './'}${filename}`;\n\n/**\n * This helper function is used to preload a module from a URL.\n *\n * If the origin of the worker URL is different from the current origin, the worker cannot be loaded directly.\n * See discussions in https://github.com/webpack-contrib/worker-loader/issues/154\n *\n * In this case, we will fetch the worker URL and create a new Blob URL with the same origin as a workaround.\n *\n * @param absoluteUrl - The absolute URL to preload.\n *\n * @returns - A promise that resolves to a new Blob URL\n */\nconst preload = async (absoluteUrl: string): Promise<string> => {\n  const response = await fetch(absoluteUrl, { credentials: 'same-origin' });\n  const blob = await response.blob();\n  return URL.createObjectURL(blob);\n};\n\n/**\n * This helper function is used to dynamically import a module from a URL.\n *\n * The build script has special handling for this function to ensure that the URL is not bundled into the final output.\n *\n * @param url - The URL to import.\n *\n * @returns - A promise that resolves to the default export of the module.\n */\nconst dynamicImportDefault = async <T>(url: string): Promise<T> =>\n  (await import(/* webpackIgnore: true */ url)).default;\n\n/**\n * The proxy worker factory imported from the proxy worker module.\n *\n * This is only available when the WebAssembly proxy is not disabled.\n */\nconst createProxyWorker: ((urlOverride?: string) => Worker) | undefined =\n  // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n  BUILD_DEFS.DISABLE_WASM_PROXY ? undefined : require('./proxy-worker/main').default;\n\n/**\n * Import the proxy worker.\n *\n * This function will perform the following steps:\n * 1. If a preload is needed, it will preload the module and return the object URL.\n * 2. Use the proxy worker factory to create the proxy worker.\n *\n * @returns - A promise that resolves to a tuple of 2 elements:\n *            - The object URL of the preloaded module, or undefined if no preload is needed.\n *            - The proxy worker.\n */\nexport const importProxyWorker = async (): Promise<[undefined | string, Worker]> => {\n  if (!scriptSrc) {\n    throw new Error('Failed to load proxy worker: cannot determine the script source URL.');\n  }\n\n  // If the script source is from the same origin, we can use the embedded proxy module directly.\n  if (isSameOrigin(scriptSrc)) {\n    return [undefined, createProxyWorker!()];\n  }\n\n  // Otherwise, need to preload\n  const url = await preload(scriptSrc);\n  return [url, createProxyWorker!(url)];\n};\n\n/**\n * The embedded WebAssembly module.\n *\n * This is only available in ESM and when embedding is not disabled.\n */\nconst embeddedWasmModule: EmscriptenModuleFactory<OrtWasmModule> | undefined =\n  BUILD_DEFS.IS_ESM && BUILD_DEFS.ENABLE_BUNDLE_WASM_JS\n    ? // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n      require(\n        !BUILD_DEFS.DISABLE_JSEP\n          ? '../../dist/ort-wasm-simd-threaded.jsep.mjs'\n          : !BUILD_DEFS.DISABLE_WEBGPU\n            ? '../../dist/ort-wasm-simd-threaded.asyncify.mjs'\n            : '../../dist/ort-wasm-simd-threaded.mjs',\n      ).default\n    : undefined;\n\n/**\n * Import the WebAssembly module.\n *\n * This function will perform the following steps:\n * 1. If the embedded module exists and no custom URL is specified, use the embedded module.\n * 2. If a preload is needed, it will preload the module and return the object URL.\n * 3. Otherwise, it will perform a dynamic import of the module.\n *\n * @returns - A promise that resolves to a tuple of 2 elements:\n *            - The object URL of the preloaded module, or undefined if no preload is needed.\n *            - The default export of the module, which is a factory function to create the WebAssembly module.\n */\nexport const importWasmModule = async (\n  urlOverride: string | undefined,\n  prefixOverride: string | undefined,\n  isMultiThreaded: boolean,\n  isWasmOverridden: boolean,\n): Promise<[undefined | string, EmscriptenModuleFactory<OrtWasmModule>]> => {\n  //\n  // Check if we should use the embedded module.\n  //\n\n  // To use the embedded module, it should be available, and no URL override or prefix override should be specified.\n  let useEmbeddedModule = embeddedWasmModule && !(urlOverride || prefixOverride);\n  if (useEmbeddedModule) {\n    if (!scriptSrc) {\n      // no URL info available.\n      //\n      // Note: when the embedded module is available, it means the current script is ESM. Usually, in ESM, the\n      // `import.meta.url` is available. But in some cases (eg. Cloudflare Workers), the value of `import.meta.url`\n      // can be `null` or `undefined`. In this case, we can only load the embedded module when:\n      //\n      // 1. The WebAssembly module binary is overridden:\n      //    ```js\n      //    env.wasm.wasmPaths = undefined;  // or not specified\n      //    env.wasm.wasmBinary = /* a Uint8Array containing the WebAssembly binary */;\n      //    ```\n      //\n      // 2. The \".wasm\" only is overridden.\n      //    ```js\n      //    env.wasm.wasmPaths = { wasm: /* URL of the .wasm file */ };\n      //    ```\n      //\n      if (isWasmOverridden && !isMultiThreaded) {\n        useEmbeddedModule = true;\n      } else {\n        throw new Error('cannot determine the script source URL.');\n      }\n    } else {\n      // if the script source is available, we can check if it is from the same origin.\n      useEmbeddedModule = isSameOrigin(scriptSrc);\n    }\n  }\n  if (useEmbeddedModule) {\n    return [undefined, embeddedWasmModule!];\n  } else {\n    const wasmModuleFilename = !BUILD_DEFS.DISABLE_JSEP\n      ? 'ort-wasm-simd-threaded.jsep.mjs'\n      : !BUILD_DEFS.DISABLE_WEBGPU\n        ? 'ort-wasm-simd-threaded.asyncify.mjs'\n        : 'ort-wasm-simd-threaded.mjs';\n    const wasmModuleUrl = urlOverride ?? normalizeUrl(wasmModuleFilename, prefixOverride);\n    // need to preload if all of the following conditions are met:\n    // 1. not in Node.js.\n    //    - Node.js does not have the same origin policy for creating workers.\n    // 2. multi-threaded is enabled.\n    //    - If multi-threaded is disabled, no worker will be created. So we don't need to preload the module.\n    // 3. the absolute URL is available.\n    //    - If the absolute URL is failed to be created, the origin cannot be determined. In this case, we will not\n    //    preload the module.\n    // 4. the worker URL is not from the same origin.\n    //    - If the worker URL is from the same origin, we can create the worker directly.\n    const needPreload = !isNode && isMultiThreaded && wasmModuleUrl && !isSameOrigin(wasmModuleUrl, prefixOverride);\n    const url = needPreload\n      ? await preload(wasmModuleUrl)\n      : (wasmModuleUrl ?? fallbackUrl(wasmModuleFilename, prefixOverride));\n    return [needPreload ? url : undefined, await dynamicImportDefault<EmscriptenModuleFactory<OrtWasmModule>>(url)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Env } from 'onnxruntime-common';\n\nimport type { OrtWasmModule } from './wasm-types';\nimport { importWasmModule, inferWasmPathPrefixFromScriptSrc } from './wasm-utils-import';\n\nlet wasm: OrtWasmModule | undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n  if (typeof SharedArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  try {\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(\n      new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 4, 1, 3, 1, 1, 10, 11, 1, 9, 0, 65, 0, 254, 16,\n        2, 0, 26, 11,\n      ]),\n    );\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(\n      new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1, 28, 0, 65, 0, 253, 15, 253, 12, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 253, 186, 1, 26, 11,\n      ]),\n    );\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isRelaxedSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly Relaxed SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing Relaxed SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    // (module\n    //   (func (result v128)\n    //      i32.const 1\n    //      i8x16.splat\n    //      i32.const 2\n    //      i8x16.splat\n    //      i32.const 3\n    //      i8x16.splat\n    //      i32x4.relaxed_dot_i8x16_i7x16_add_s\n    //   )\n    //  )\n    return WebAssembly.validate(\n      new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 19, 1, 17, 0, 65, 1, 253, 15, 65, 2, 253,\n        15, 65, 3, 253, 15, 253, 147, 2, 11,\n      ]),\n    );\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const initializeWebAssembly = async (flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error(\"multiple calls to 'initializeWebAssembly()' detected.\");\n  }\n  if (aborted) {\n    throw new Error(\"previous call to 'initializeWebAssembly()' failed.\");\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  let numThreads = flags.numThreads!;\n\n  // ensure SIMD is supported\n  if (flags.simd === false) {\n    // skip SIMD feature checking as it is disabled explicitly by user\n  } else if (flags.simd === 'relaxed') {\n    // check if relaxed SIMD is supported\n    if (!isRelaxedSimdSupported()) {\n      throw new Error('Relaxed WebAssembly SIMD is not supported in the current environment.');\n    }\n  } else if (!isSimdSupported()) {\n    throw new Error('WebAssembly SIMD is not supported in the current environment.');\n  }\n\n  // check if multi-threading is supported\n  const multiThreadSupported = isMultiThreadSupported();\n  if (numThreads > 1 && !multiThreadSupported) {\n    if (typeof self !== 'undefined' && !self.crossOriginIsolated) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'env.wasm.numThreads is set to ' +\n          numThreads +\n          ', but this will not work unless you enable crossOriginIsolated mode. ' +\n          'See https://web.dev/cross-origin-isolation-guide/ for more info.',\n      );\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn(\n      'WebAssembly multi-threading is not supported in the current environment. ' + 'Falling back to single-threading.',\n    );\n\n    // set flags.numThreads to 1 so that OrtInit() will not create a global thread pool.\n    flags.numThreads = numThreads = 1;\n  }\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const mjsPathOverrideFlag = (wasmPaths as Env.WasmFilePaths)?.mjs;\n  const mjsPathOverride = (mjsPathOverrideFlag as URL)?.href ?? mjsPathOverrideFlag;\n  const wasmPathOverrideFlag = (wasmPaths as Env.WasmFilePaths)?.wasm;\n  const wasmPathOverride = (wasmPathOverrideFlag as URL)?.href ?? wasmPathOverrideFlag;\n  const wasmBinaryOverride = flags.wasmBinary;\n\n  const [objectUrl, ortWasmFactory] = await importWasmModule(\n    mjsPathOverride,\n    wasmPrefixOverride,\n    numThreads > 1,\n    !!wasmBinaryOverride || !!wasmPathOverride,\n  );\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(\n      new Promise((resolve) => {\n        setTimeout(() => {\n          isTimeout = true;\n          resolve();\n        }, timeout);\n      }),\n    );\n  }\n\n  // promise for module initialization\n  tasks.push(\n    new Promise((resolve, reject) => {\n      const config: Partial<OrtWasmModule> = {\n        /**\n         * The number of threads. WebAssembly will create (Module.numThreads - 1) workers. If it is 1, no worker will be\n         * created.\n         */\n        numThreads,\n      };\n\n      if (wasmBinaryOverride) {\n        // Set a custom buffer which contains the WebAssembly binary. This will skip the wasm file fetching.\n        config.wasmBinary = wasmBinaryOverride;\n      } else if (wasmPathOverride || wasmPrefixOverride) {\n        // A callback function to locate the WebAssembly file. The function should return the full path of the file.\n        //\n        // Since Emscripten 3.1.58, this function is only called for the .wasm file.\n        config.locateFile = (fileName) => wasmPathOverride ?? wasmPrefixOverride + fileName;\n      } else if (mjsPathOverride && mjsPathOverride.indexOf('blob:') !== 0) {\n        // if mjs path is specified, use it as the base path for the .wasm file.\n        config.locateFile = (fileName) => new URL(fileName, mjsPathOverride).href;\n      } else if (objectUrl) {\n        const inferredWasmPathPrefix = inferWasmPathPrefixFromScriptSrc();\n        if (inferredWasmPathPrefix) {\n          // if the wasm module is preloaded, use the inferred wasm path as the base path for the .wasm file.\n          config.locateFile = (fileName) => inferredWasmPathPrefix + fileName;\n        }\n      }\n\n      ortWasmFactory(config).then(\n        // wasm module initialized successfully\n        (module) => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n          if (objectUrl) {\n            URL.revokeObjectURL(objectUrl);\n          }\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        },\n      );\n    }),\n  );\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    // TODO: currently \"PThread.terminateAllThreads()\" is not exposed in the wasm module.\n    //       And this function is not yet called by any code.\n    //       If it is needed in the future, we should expose it in the wasm module and uncomment the following line.\n\n    // wasm?.PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { getInstance } from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions = (\n  options: Record<string, unknown>,\n  prefix: string,\n  seen: WeakSet<Record<string, unknown>>,\n  handler: ExtraOptionsHandler,\n): void => {\n  if (typeof options == 'object' && options !== null) {\n    if (seen.has(options)) {\n      throw new Error('Circular reference in options');\n    } else {\n      seen.add(options);\n    }\n  }\n\n  Object.entries(options).forEach(([key, value]) => {\n    const name = prefix ? prefix + key : key;\n    if (typeof value === 'object') {\n      iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n    } else if (typeof value === 'string' || typeof value === 'number') {\n      handler(name, value.toString());\n    } else if (typeof value === 'boolean') {\n      handler(name, value ? '1' : '0');\n    } else {\n      throw new Error(`Can't handle extra config type: ${typeof value}`);\n    }\n  });\n};\n\n/**\n * check web assembly API's last error and throw error if any error occurred.\n * @param message a message used when an error occurred.\n */\nexport const checkLastError = (message: string): void => {\n  const wasm = getInstance();\n\n  const stack = wasm.stackSave();\n  try {\n    const ptrSize = wasm.PTR_SIZE;\n    const paramsOffset = wasm.stackAlloc(2 * ptrSize);\n    wasm._OrtGetLastError(paramsOffset, paramsOffset + ptrSize);\n    const errorCode = Number(wasm.getValue(paramsOffset, ptrSize === 4 ? 'i32' : 'i64'));\n    const errorMessagePointer = wasm.getValue(paramsOffset + ptrSize, '*');\n    const errorMessage = errorMessagePointer ? wasm.UTF8ToString(errorMessagePointer) : '';\n    throw new Error(`${message} ERROR_CODE: ${errorCode}, ERROR_MESSAGE: ${errorMessage}`);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { InferenceSession } from 'onnxruntime-common';\n\nimport { getInstance } from './wasm-factory';\nimport { allocWasmString, checkLastError, iterateExtraOptions } from './wasm-utils';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2; // Default to warning\n    } else if (\n      typeof options.logSeverityLevel !== 'number' ||\n      !Number.isInteger(options.logSeverityLevel) ||\n      options.logSeverityLevel < 0 ||\n      options.logSeverityLevel > 4\n    ) {\n      throw new Error(`log severity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0; // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n      runOptions.logSeverityLevel!,\n      runOptions.logVerbosityLevel!,\n      !!runOptions.terminate!,\n      tagDataOffset,\n    );\n    if (runOptionsHandle === 0) {\n      checkLastError(\"Can't create run options.\");\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a run config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach((alloc) => wasm._free(alloc));\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport type { InferenceSession } from 'onnxruntime-common';\n\nimport { getInstance } from './wasm-factory';\nimport { allocWasmString, checkLastError, iterateExtraOptions } from './wasm-utils';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string | unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'layout':\n      return 3;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential' | 'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (\n    options.executionProviders &&\n    options.executionProviders.some((ep) => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')\n  ) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst appendSessionConfig = (sessionOptionsHandle: number, key: string, value: string, allocs: number[]): void => {\n  const keyDataOffset = allocWasmString(key, allocs);\n  const valueDataOffset = allocWasmString(value, allocs);\n  if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n    checkLastError(`Can't set a session config entry: ${key} - ${value}.`);\n  }\n};\n\nconst appendEpOption = (epOptions: Array<[number, number]>, key: string, value: string, allocs: number[]): void => {\n  const keyDataOffset = allocWasmString(key, allocs);\n  const valueDataOffset = allocWasmString(value, allocs);\n  epOptions.push([keyDataOffset, valueDataOffset]);\n};\n\nconst setExecutionProviders = async (\n  sessionOptionsHandle: number,\n  executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n  allocs: number[],\n): Promise<void> => {\n  for (const ep of executionProviders) {\n    let epName = typeof ep === 'string' ? ep : ep.name;\n    const epOptions: Array<[number, number]> = [];\n\n    // check EP name\n    switch (epName) {\n      case 'webnn':\n        epName = 'WEBNN';\n        if (typeof ep !== 'string') {\n          const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n          // const context = (webnnOptions as InferenceSession.WebNNOptionsWithMLContext)?.context;\n          const deviceType = (webnnOptions as InferenceSession.WebNNContextOptions)?.deviceType;\n          if (deviceType) {\n            appendSessionConfig(sessionOptionsHandle, 'deviceType', deviceType, allocs);\n          }\n        }\n        break;\n      case 'webgpu':\n        if (!BUILD_DEFS.DISABLE_WEBGPU) {\n          epName = 'WebGPU';\n          let customDevice: GPUDevice | undefined;\n\n          if (typeof ep !== 'string') {\n            const customOptions = ep as unknown as { device: GPUDevice };\n            if (customOptions.device) {\n              if (typeof GPUDevice !== 'undefined' && customOptions.device instanceof GPUDevice) {\n                customDevice = customOptions.device;\n              } else {\n                throw new Error('Invalid GPU device set in WebGPU EP options.');\n              }\n            }\n\n            // TODO: handle more options\n          }\n\n          const info = getInstance().webgpuRegisterDevice!(customDevice);\n          if (info) {\n            const [deviceId, instanceHandle, deviceHandle] = info;\n            appendEpOption(epOptions, 'deviceId', deviceId.toString(), allocs);\n            appendEpOption(epOptions, 'webgpuInstance', instanceHandle.toString(), allocs);\n            appendEpOption(epOptions, 'webgpuDevice', deviceHandle.toString(), allocs);\n          }\n        } else {\n          epName = 'JS';\n          if (typeof ep !== 'string') {\n            const webgpuOptions = ep as InferenceSession.WebGpuExecutionProviderOption;\n            if (webgpuOptions?.preferredLayout) {\n              if (webgpuOptions.preferredLayout !== 'NCHW' && webgpuOptions.preferredLayout !== 'NHWC') {\n                throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${webgpuOptions.preferredLayout}`);\n              }\n              appendSessionConfig(sessionOptionsHandle, 'preferredLayout', webgpuOptions.preferredLayout, allocs);\n            }\n          }\n        }\n        break;\n      case 'wasm':\n      case 'cpu':\n        continue;\n      default:\n        throw new Error(`not supported execution provider: ${epName}`);\n    }\n\n    const epNameDataOffset = allocWasmString(epName, allocs);\n    const epOptionsCount = epOptions.length;\n    let keysOffset = 0;\n    let valuesOffset = 0;\n    if (epOptionsCount > 0) {\n      keysOffset = getInstance()._malloc(epOptionsCount * getInstance().PTR_SIZE);\n      allocs.push(keysOffset);\n      valuesOffset = getInstance()._malloc(epOptionsCount * getInstance().PTR_SIZE);\n      allocs.push(valuesOffset);\n      for (let i = 0; i < epOptionsCount; i++) {\n        getInstance().setValue(keysOffset + i * getInstance().PTR_SIZE, epOptions[i][0], '*');\n        getInstance().setValue(valuesOffset + i * getInstance().PTR_SIZE, epOptions[i][1], '*');\n      }\n    }\n    if (\n      (await getInstance()._OrtAppendExecutionProvider(\n        sessionOptionsHandle,\n        epNameDataOffset,\n        keysOffset,\n        valuesOffset,\n        epOptionsCount,\n      )) !== 0\n    ) {\n      checkLastError(`Can't append execution provider: ${epName}.`);\n    }\n  }\n};\n\nexport const setSessionOptions = async (options?: InferenceSession.SessionOptions): Promise<[number, number[]]> => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n      typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2; // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log severity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0; // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset =\n      typeof sessionOptions.optimizedModelFilePath === 'string'\n        ? allocWasmString(sessionOptions.optimizedModelFilePath, allocs)\n        : 0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n      graphOptimizationLevel,\n      !!sessionOptions.enableCpuMemArena,\n      !!sessionOptions.enableMemPattern,\n      executionMode,\n      !!sessionOptions.enableProfiling,\n      0,\n      logIdDataOffset,\n      logSeverityLevel,\n      logVerbosityLevel,\n      optimizedModelFilePathOffset,\n    );\n    if (sessionOptionsHandle === 0) {\n      checkLastError(\"Can't create session options.\");\n    }\n\n    if (sessionOptions.executionProviders) {\n      await setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.enableGraphCapture !== undefined) {\n      if (typeof sessionOptions.enableGraphCapture !== 'boolean') {\n        throw new Error(`enableGraphCapture must be a boolean value: ${sessionOptions.enableGraphCapture}`);\n      }\n      appendSessionConfig(\n        sessionOptionsHandle,\n        'enableGraphCapture',\n        sessionOptions.enableGraphCapture.toString(),\n        allocs,\n      );\n    }\n\n    if (sessionOptions.freeDimensionOverrides) {\n      for (const [name, value] of Object.entries(sessionOptions.freeDimensionOverrides)) {\n        if (typeof name !== 'string') {\n          throw new Error(`free dimension override name must be a string: ${name}`);\n        }\n        if (typeof value !== 'number' || !Number.isInteger(value) || value < 0) {\n          throw new Error(`free dimension override value must be a non-negative integer: ${value}`);\n        }\n        const nameOffset = allocWasmString(name, allocs);\n        if (wasm._OrtAddFreeDimensionOverride(sessionOptionsHandle, nameOffset, value) !== 0) {\n          checkLastError(`Can't set a free dimension override: ${name} - ${value}.`);\n        }\n      }\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        appendSessionConfig(sessionOptionsHandle, key, value, allocs);\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      if (wasm._OrtReleaseSessionOptions(sessionOptionsHandle) !== 0) {\n        checkLastError(\"Can't release session options.\");\n      }\n    }\n    allocs.forEach((alloc) => wasm._free(alloc));\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Tensor } from 'onnxruntime-common';\n\n// a dummy type declaration for Float16Array in case any polyfill is available.\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-explicit-any\n  const Float16Array: any;\n}\n\n// This file includes common definitions. They do NOT have dependency on the WebAssembly instance.\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16,\n\n  // 4-bit data-types\n  uint4 = 21,\n  int4 = 22,\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n    case 'int4':\n      return DataType.int4;\n    case 'uint4':\n      return DataType.uint4;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'float16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n    case DataType.int4:\n      return 'int4';\n    case DataType.uint4:\n      return 'uint4';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor size in bytes by the given data type and dimensions\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const calculateTensorSizeInBytes = (\n  dateType: number,\n  dimsOrSize: readonly number[] | number,\n): number | undefined => {\n  const elementSize = [\n    -1, // undefined = 0\n    4, // float = 1\n    1, // uint8 = 2\n    1, // int8 = 3\n    2, // uint16 = 4\n    2, // int16 = 5\n    4, // int32 = 6\n    8, // int64 = 7\n    -1, // string = 8\n    1, // bool = 9\n    2, // float16 = 10\n    8, // double = 11\n    4, // uint32 = 12\n    8, // uint64 = 13\n    -1, // complex64 = 14\n    -1, // complex128 = 15\n    -1, // bfloat16 = 16\n    -1, // FLOAT8E4M3FN = 17\n    -1, // FLOAT8E4M3FNUZ = 18\n    -1, // FLOAT8E5M2 = 19\n    -1, // FLOAT8E5M2FNUZ = 20\n    0.5, // uint4 = 21\n    0.5, // int4 = 22\n  ][dateType];\n\n  const size = typeof dimsOrSize === 'number' ? dimsOrSize : dimsOrSize.reduce((a, b) => a * b, 1);\n  return elementSize > 0 ? Math.ceil(size * elementSize) : undefined;\n};\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (\n  type: Tensor.Type,\n):\n  | Float32ArrayConstructor\n  | Uint8ArrayConstructor\n  | Int8ArrayConstructor\n  | Uint16ArrayConstructor\n  | Int16ArrayConstructor\n  | Int32ArrayConstructor\n  | BigInt64ArrayConstructor\n  | Uint8ArrayConstructor\n  | Float64ArrayConstructor\n  | Uint32ArrayConstructor\n  | BigUint64ArrayConstructor => {\n  switch (type) {\n    case 'float16':\n      // allow Float16Array polyfill.\n      return typeof Float16Array !== 'undefined' && Float16Array.from ? Float16Array : Uint16Array;\n    case 'float32':\n      return Float32Array;\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int16':\n      return Int16Array;\n    case 'int32':\n      return Int32Array;\n    case 'bool':\n      return Uint8Array;\n    case 'float64':\n      return Float64Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'int64':\n      return BigInt64Array;\n    case 'uint64':\n      return BigUint64Array;\n    default:\n      throw new Error(`unsupported type: ${type}`);\n  }\n};\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose' | 'info' | 'warning' | 'error' | 'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n/**\n * Check whether the given tensor type is supported by GPU buffer\n */\nexport const isGpuBufferSupportedType = (type: Tensor.Type): type is Tensor.GpuBufferDataTypes =>\n  type === 'float32' ||\n  type === 'float16' ||\n  type === 'int32' ||\n  type === 'int64' ||\n  type === 'uint32' ||\n  type === 'uint8' ||\n  type === 'bool' ||\n  type === 'uint4' ||\n  type === 'int4';\n\n/**\n * Check whether the given tensor type is supported by WebNN MLTensor\n */\nexport const isMLTensorSupportedType = (type: Tensor.Type): type is Tensor.MLTensorDataTypes =>\n  type === 'float32' ||\n  type === 'float16' ||\n  type === 'int32' ||\n  type === 'int64' ||\n  type === 'uint32' ||\n  type === 'uint64' ||\n  type === 'int8' ||\n  type === 'uint8' ||\n  type === 'bool' ||\n  type === 'uint4' ||\n  type === 'int4';\n\n/**\n * Map string data location to integer value\n */\nexport const dataLocationStringToEnum = (location: Tensor.DataLocation): number => {\n  switch (location) {\n    case 'none':\n      return 0;\n    case 'cpu':\n      return 1;\n    case 'cpu-pinned':\n      return 2;\n    case 'texture':\n      return 3;\n    case 'gpu-buffer':\n      return 4;\n    case 'ml-tensor':\n      return 5;\n    default:\n      throw new Error(`unsupported data location: ${location}`);\n  }\n};\n\n/**\n * Map integer data location to string value\n */\nexport const dataLocationEnumToString = (location: number): Tensor.DataLocation | undefined =>\n  (['none', 'cpu', 'cpu-pinned', 'texture', 'gpu-buffer', 'ml-tensor'] as const)[location];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { isNode } from './wasm-utils-env';\n\n/**\n * Load a file into a Uint8Array.\n *\n * @param file - the file to load. Can be a URL/path, a Blob, an ArrayBuffer, or a Uint8Array.\n * @returns a Uint8Array containing the file data.\n */\nexport const loadFile = async (file: string | Blob | ArrayBufferLike | Uint8Array): Promise<Uint8Array> => {\n  if (typeof file === 'string') {\n    if (isNode) {\n      // load file into ArrayBuffer in Node.js\n      try {\n        const { readFile } = require('node:fs/promises');\n        return new Uint8Array(await readFile(file));\n      } catch (e) {\n        if (e.code === 'ERR_FS_FILE_TOO_LARGE') {\n          // file is too large, use fs.createReadStream instead\n          const { createReadStream } = require('node:fs');\n          const stream = createReadStream(file);\n          const chunks: Uint8Array[] = [];\n          for await (const chunk of stream) {\n            chunks.push(chunk);\n          }\n          return new Uint8Array(Buffer.concat(chunks));\n        }\n        throw e;\n      }\n    } else {\n      // load file into ArrayBuffer in browsers\n      const response = await fetch(file);\n      if (!response.ok) {\n        throw new Error(`failed to load external data file: ${file}`);\n      }\n      const contentLengthHeader = response.headers.get('Content-Length');\n      const fileSize = contentLengthHeader ? parseInt(contentLengthHeader, 10) : 0;\n      if (fileSize < 1073741824 /* 1GB */) {\n        // when Content-Length header is not set, we cannot determine the file size. We assume it is small enough to\n        // load into memory.\n        return new Uint8Array(await response.arrayBuffer());\n      } else {\n        // file is too large, use stream instead\n        if (!response.body) {\n          throw new Error(`failed to load external data file: ${file}, no response body.`);\n        }\n        const reader = response.body.getReader();\n\n        let buffer;\n        try {\n          // try to create ArrayBuffer directly\n          buffer = new ArrayBuffer(fileSize);\n        } catch (e) {\n          if (e instanceof RangeError) {\n            // use WebAssembly Memory to allocate larger ArrayBuffer\n            const pages = Math.ceil(fileSize / 65536);\n            buffer = new WebAssembly.Memory({ initial: pages, maximum: pages }).buffer;\n          } else {\n            throw e;\n          }\n        }\n\n        let offset = 0;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n          const { done, value } = await reader.read();\n          if (done) {\n            break;\n          }\n          const chunkSize = value.byteLength;\n          const chunk = new Uint8Array(buffer, offset, chunkSize);\n          chunk.set(value);\n          offset += chunkSize;\n        }\n        return new Uint8Array(buffer, 0, fileSize);\n      }\n    }\n  } else if (file instanceof Blob) {\n    return new Uint8Array(await file.arrayBuffer());\n  } else if (file instanceof Uint8Array) {\n    return file;\n  } else {\n    return new Uint8Array(file);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Tensor } from 'onnxruntime-common';\n\nimport { tensorTypeToTypedArrayConstructor } from '../wasm-common';\n\nexport const createView = (\n  dataBuffer: ArrayBuffer,\n  type: Tensor.Type,\n):\n  | Int32Array\n  | Uint32Array\n  | BigInt64Array\n  | BigUint64Array\n  | Uint8Array\n  | Float32Array\n  | Float64Array\n  | Int8Array\n  | Int16Array\n  | Uint16Array => new (tensorTypeToTypedArrayConstructor(type))(dataBuffer);\n\n/**\n * a TensorView does not own the data.\n */\nexport interface TensorView {\n  readonly data: number;\n  readonly dataType: number;\n  readonly dims: readonly number[];\n\n  /**\n   * get a Float16Array data view of the tensor data. tensor data must be on CPU.\n   */\n  getUint16Array(): Uint16Array;\n\n  /**\n   * get a Float32Array data view of the tensor data. tensor data must be on CPU.\n   */\n  getFloat32Array(): Float32Array;\n\n  /**\n   * get a BigInt64Array data view of the tensor data. tensor data must be on CPU.\n   */\n  getBigInt64Array(): BigInt64Array;\n\n  /**\n   * get a Int32Array data view of the tensor data. tensor data must be on CPU.\n   */\n  getInt32Array(): Int32Array;\n\n  /**\n   * get a Uint16Array data view of the tensor data. tensor data must be on CPU.\n   */\n  getUint16Array(): Uint16Array;\n\n  /**\n   * create a new tensor view with the same data but different dimensions.\n   */\n  reshape(newDims: readonly number[]): TensorView;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Env } from 'onnxruntime-common';\n\nimport { logLevelStringToEnum } from '../wasm-common';\n\ntype LogLevel = NonNullable<Env['logLevel']>;\ntype MessageString = string;\ntype MessageFunction = () => string;\ntype Message = MessageString | MessageFunction;\n\nconst logLevelPrefix = ['V', 'I', 'W', 'E', 'F'];\n\nconst doLog = (level: number, message: string): void => {\n  // eslint-disable-next-line no-console\n  console.log(`[${logLevelPrefix[level]},${new Date().toISOString()}]${message}`);\n};\n\nlet configLogLevel: LogLevel | undefined;\nlet debug: boolean | undefined;\n\nexport const configureLogger = ($configLogLevel: LogLevel, $debug: boolean): void => {\n  configLogLevel = $configLogLevel;\n  debug = $debug;\n};\n\n/**\n * A simple logging utility to log messages to the console.\n */\nexport const LOG = (logLevel: LogLevel, msg: Message): void => {\n  const messageLevel = logLevelStringToEnum(logLevel);\n  const configLevel = logLevelStringToEnum(configLogLevel);\n  if (messageLevel >= configLevel) {\n    doLog(messageLevel, typeof msg === 'function' ? msg() : msg);\n  }\n};\n\n/**\n * A simple logging utility to log messages to the console. Only logs when debug is enabled.\n */\nexport const LOG_DEBUG: typeof LOG = (...args: Parameters<typeof LOG>) => {\n  if (debug) {\n    LOG(...args);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { WebNNBackend } from '../backend-webnn';\nimport { tensorTypeToTypedArrayConstructor } from '../../wasm-common';\nimport { LOG_DEBUG } from '../log';\n\n// WebNN API currently does not have a TypeScript definition file. This file is a workaround with types generated from\n// WebNN API specification.\n// https://github.com/webmachinelearning/webnn/issues/677\n/// <reference path=\"webnn.d.ts\" />\n\n/**\n * Map from MLOperandDataType to size in bits. Using bits instead of bytes to avoid possible precision loss on int4 and uint4.\n */\nconst webnnDataTypeToSize = new Map<MLOperandDataType, number>([\n  ['float32', 32],\n  ['float16', 16],\n  ['int32', 32],\n  ['uint32', 32],\n  ['int64', 64],\n  ['uint64', 64],\n  ['int8', 8],\n  ['uint8', 8],\n  ['int4', 4],\n  ['uint4', 4],\n]);\n\n// Convert integer data to an Int32Array buffer.\n// Supports conversion from int64, uint64, uint32, int8 and uint8 to int32.\nexport const convertDataToInt32 = (data: Uint8Array, dataType: MLOperandDataType): Uint8Array => {\n  if (dataType === 'int32') {\n    return data;\n  }\n\n  const dataTypeSize = webnnDataTypeToSize.get(dataType);\n  if (!dataTypeSize) {\n    throw new Error(`WebNN backend does not support data type: ${dataType}`);\n  }\n  const bytesPerElement = dataTypeSize / 8;\n  // Make sure the data length is a multiple of the data type size.\n  if (data.byteLength % bytesPerElement !== 0) {\n    throw new Error(`Invalid Uint8Array length - must be a multiple of ${bytesPerElement}.`);\n  }\n\n  // Convert Uint8Array to original typed array.\n  const numElements = data.byteLength / bytesPerElement;\n  const originalArray = new (tensorTypeToTypedArrayConstructor(dataType))(data.buffer, data.byteOffset, numElements);\n\n  switch (dataType) {\n    case 'int64':\n    case 'uint64': {\n      // Convert original typed array to Int32Array.\n      const int32Array = new Int32Array(numElements);\n      for (let i = 0; i < numElements; i++) {\n        const value = originalArray[i];\n\n        // Check for overflow.\n        if (value > 2147483647n || value < -2147483648n) {\n          throw new Error(`Can not convert int64 data to int32 - value out of range.`);\n        }\n\n        int32Array[i] = Number(value);\n      }\n\n      return new Uint8Array(int32Array.buffer);\n    }\n    case 'int8':\n    case 'uint8':\n    case 'uint32': {\n      // Check for overflow.\n      if (dataType === 'uint32') {\n        if (originalArray.some((value) => value > 2147483647)) {\n          throw new Error(`Can not convert uint32 data to int32 - value out of range.`);\n        }\n      }\n      // Convert original typed array to Int32Array.\n      const int32Array = Int32Array.from(originalArray, Number);\n      return new Uint8Array(int32Array.buffer);\n    }\n    default:\n      throw new Error(`Unsupported data conversion from ${dataType} to 'int32'`);\n  }\n};\n\n// Convert Int32Array data to original integer data buffer.\n// Supports conversion from int32 to int64, uint64, uint32, int8 and uint8.\nexport const convertInt32ToData = (data: Uint8Array, dataType: MLOperandDataType): Uint8Array => {\n  if (dataType === 'int32') {\n    return data;\n  }\n\n  // Make sure the data length is a multiple of 4 bytes (Int32Array).\n  if (data.byteLength % 4 !== 0) {\n    throw new Error('Invalid Uint8Array length - must be a multiple of 4 (int32).');\n  }\n\n  // Convert Uint8Array to Int32Array.\n  const numElements = data.byteLength / 4;\n  const int32Array = new Int32Array(data.buffer, data.byteOffset, numElements);\n\n  switch (dataType) {\n    case 'int64': {\n      const bigInt64Array = BigInt64Array.from(int32Array, BigInt);\n      return new Uint8Array(bigInt64Array.buffer);\n    }\n    case 'uint64': {\n      if (int32Array.some((value) => value < 0)) {\n        throw new Error('Can not convert int32 data to uin64 - negative value found.');\n      }\n      const bigUint64Array = BigUint64Array.from(int32Array, BigInt);\n      return new Uint8Array(bigUint64Array.buffer);\n    }\n    case 'int8': {\n      if (int32Array.some((value) => value < -128 || value > 127)) {\n        throw new Error('Can not convert int32 data to int8 - value out of range.');\n      }\n      const int8Array = Int8Array.from(int32Array, Number);\n      return new Uint8Array(int8Array.buffer);\n    }\n    case 'uint8': {\n      if (int32Array.some((value) => value < 0 || value > 255)) {\n        throw new Error('Can not convert int32 data to uint8 - value out of range.');\n      }\n      return Uint8Array.from(int32Array, Number);\n    }\n    case 'uint32': {\n      if (int32Array.some((value) => value < 0)) {\n        throw new Error('Can not convert int32 data to uint32 - negative value found.');\n      }\n      const uint32Array = Uint32Array.from(int32Array, Number);\n      return new Uint8Array(uint32Array.buffer);\n    }\n    default:\n      throw new Error(`Unsupported data conversion from 'int32' to ${dataType}`);\n  }\n};\n\nexport type TensorId = number;\n\n/**\n * Manages TensorId to MLTensor mapping.\n */\nexport interface TensorManager {\n  /**\n   * Reserve a new TensorId.\n   */\n  reserveTensorId(): TensorId;\n  /**\n   * Release a TensorId.\n   */\n  releaseTensorId(tensorId: TensorId): void;\n  /**\n   * Ensure a MLTensor is created for the TensorId.\n   */\n  ensureTensor(\n    sessionId: number,\n    tensorId: TensorId,\n    dataType: MLOperandDataType,\n    shape: readonly number[],\n    copyOld: boolean,\n  ): Promise<MLTensor>;\n  /**\n   * Upload data to a MLTensor.\n   */\n  upload(tensorId: TensorId, data: Uint8Array): void;\n  /**\n   * Download data from a MLTensor.\n   */\n  download(tensorId: TensorId): Promise<ArrayBuffer>;\n  download(tensorId: TensorId, dstTensor: ArrayBufferView | ArrayBuffer): Promise<undefined>;\n  /**\n   * Release all tensors for a given session.\n   */\n  releaseTensorsForSession(session: number): void;\n  /**\n   * Register an externally created MLTensor with a given session id and return a TensorId.\n   */\n  registerTensor(sessionId: number, mlTensor: MLTensor, dataType: MLOperandDataType, shape: number[]): TensorId;\n}\n\nlet tensorGuid = 1;\nconst createNewTensorId = (): TensorId => tensorGuid++;\n\n/**\n * Map from data type to fallback data type.\n * When the context does not support the original data type, use fallback data type as workaround.\n * Note: Currently, we only support fallback to int32 for certain integer data types.\n */\nconst webnnDataTypeToFallback = new Map<MLOperandDataType, MLOperandDataType>([\n  ['int8', 'int32'],\n  ['uint8', 'int32'],\n  ['uint32', 'int32'],\n  ['int64', 'int32'],\n]);\n\n/**\n * Calculate the byte length of a tensor with the given data type and shape.\n */\nconst calculateByteLength = (dataType: MLOperandDataType, shape: readonly number[]): number => {\n  const dataTypeSize = webnnDataTypeToSize.get(dataType);\n  if (!dataTypeSize) {\n    throw new Error(`WebNN backend does not support data type: ${dataType}`);\n  }\n  return shape.length > 0 ? Math.ceil((shape.reduce((a, b) => a * b) * dataTypeSize) / 8) : 0;\n};\n\n/**\n * TensorWrapper wraps an MLTensor and provides a way to track the last session that used it.\n */\nclass TensorWrapper {\n  // The id of the last session that used this tensor.\n  public sessionId: number;\n  // This flag is used to indicate whether the data has been converted to fallback data type.\n  public isDataConverted = false;\n\n  private mlContext: MLContext;\n  private mlTensor: MLTensor;\n  private dataType: MLOperandDataType;\n  // Fallback data type to use when the context does not support the original data type.\n  private fallbackDataType: MLOperandDataType | undefined;\n  private tensorShape: readonly number[];\n\n  constructor(descriptor: {\n    sessionId: number;\n    context: MLContext;\n    tensor: MLTensor;\n    dataType: MLOperandDataType;\n    shape: readonly number[];\n    fallbackDataType?: MLOperandDataType;\n  }) {\n    const { sessionId, context, tensor, dataType, shape, fallbackDataType } = descriptor;\n    this.sessionId = sessionId;\n    this.mlContext = context;\n    this.mlTensor = tensor;\n    this.dataType = dataType;\n    this.tensorShape = shape;\n    this.fallbackDataType = fallbackDataType;\n  }\n\n  public get tensor(): MLTensor {\n    return this.mlTensor;\n  }\n\n  public get type(): MLOperandDataType {\n    return this.dataType;\n  }\n\n  public get fallbackType(): MLOperandDataType | undefined {\n    return this.fallbackDataType;\n  }\n\n  public get shape(): readonly number[] {\n    return this.tensorShape;\n  }\n\n  public get byteLength(): number {\n    return calculateByteLength(this.dataType, this.tensorShape);\n  }\n\n  public destroy(): void {\n    LOG_DEBUG('verbose', () => '[WebNN] TensorWrapper.destroy');\n    this.mlTensor.destroy();\n  }\n\n  public write(data: Uint8Array): void {\n    this.mlContext.writeTensor(this.mlTensor, data);\n  }\n\n  public async read(): Promise<ArrayBuffer>;\n  public async read(dstBuffer?: ArrayBufferView | ArrayBuffer): Promise<ArrayBuffer | undefined>;\n  public async read(dstBuffer?: ArrayBufferView | ArrayBuffer): Promise<ArrayBuffer | undefined> {\n    if (this.fallbackDataType) {\n      // This tensor has been fallback to int32 as workaround, we need to read it as its original integer data type.\n      const data = await this.mlContext.readTensor(this.mlTensor);\n      const originalData = convertInt32ToData(new Uint8Array(data), this.dataType);\n\n      if (dstBuffer) {\n        const targetBuffer =\n          dstBuffer instanceof ArrayBuffer\n            ? new Uint8Array(dstBuffer)\n            : new Uint8Array(dstBuffer.buffer, dstBuffer.byteOffset, dstBuffer.byteLength);\n        targetBuffer.set(originalData);\n        return undefined;\n      } else {\n        return originalData.buffer;\n      }\n    } else {\n      return dstBuffer ? this.mlContext.readTensor(this.mlTensor, dstBuffer) : this.mlContext.readTensor(this.mlTensor);\n    }\n  }\n\n  public canReuseTensor(context: MLContext, dataType: MLOperandDataType, shape: readonly number[]): boolean {\n    return (\n      this.mlContext === context &&\n      this.dataType === dataType &&\n      this.tensorShape.length === shape.length &&\n      this.tensorShape.every((v, i) => v === shape[i])\n    );\n  }\n\n  public setIsDataConverted(isConverted: boolean): void {\n    this.isDataConverted = isConverted;\n  }\n}\n\n/**\n * TensorTracker tracks the MLTensor and pending upload data.\n *\n * We need to track the MLTensor and pending upload data because we delay the creation of MLTensor until\n * we know the data type and shape. This is because WebNN only support creating MLTensors with dataTypes and shape.\n */\nclass TensorIdTracker {\n  private activeUpload?: Uint8Array;\n\n  constructor(\n    private tensorManager: TensorManagerImpl,\n    private wrapper?: TensorWrapper,\n  ) {}\n\n  public get tensorWrapper(): TensorWrapper | undefined {\n    return this.wrapper;\n  }\n\n  public releaseTensor(): void {\n    if (this.tensorWrapper) {\n      this.tensorManager.releaseTensor(this.tensorWrapper);\n      this.wrapper = undefined;\n    }\n  }\n\n  public async ensureTensor(\n    sessionId: number,\n    dataType: MLOperandDataType,\n    shape: readonly number[],\n    copyOld: boolean,\n  ): Promise<MLTensor> {\n    const context = this.tensorManager.getMLContext(sessionId);\n    const opLimits = this.tensorManager.getMLOpSupportLimits(sessionId);\n    let fallbackDataType: MLOperandDataType | undefined;\n    // Check if the context supports the data type. If not, try to use the fallback data type.\n    if (!opLimits?.input.dataTypes.includes(dataType)) {\n      fallbackDataType = webnnDataTypeToFallback.get(dataType);\n      if (!fallbackDataType || opLimits?.input.dataTypes.includes(fallbackDataType)) {\n        throw new Error(`WebNN backend does not support data type: ${dataType}`);\n      }\n      LOG_DEBUG(\n        'verbose',\n        () => `[WebNN] TensorIdTracker.ensureTensor: fallback dataType from ${dataType} to ${fallbackDataType}`,\n      );\n    }\n\n    if (this.wrapper) {\n      if (this.wrapper.canReuseTensor(context, dataType, shape)) {\n        return this.wrapper.tensor;\n      } else {\n        if (copyOld) {\n          if (this.wrapper.byteLength !== calculateByteLength(dataType, shape)) {\n            throw new Error('Unable to copy data to tensor with different size.');\n          }\n          this.activeUpload = new Uint8Array(await this.wrapper.read());\n        }\n        this.tensorManager.releaseTensor(this.wrapper);\n      }\n    }\n\n    // eslint-disable-next-line no-bitwise\n    const usage = typeof MLTensorUsage == 'undefined' ? undefined : MLTensorUsage.READ | MLTensorUsage.WRITE;\n    this.wrapper = await this.tensorManager.getCachedTensor(\n      sessionId,\n      dataType,\n      shape,\n      usage,\n      true,\n      true,\n      fallbackDataType,\n    );\n\n    if (copyOld && this.activeUpload) {\n      // We don't need to convert the original integer data to int32,\n      // because it has been converted when it was uploaded.\n      this.wrapper.write(this.activeUpload);\n      this.activeUpload = undefined;\n    }\n\n    return this.wrapper.tensor;\n  }\n\n  public upload(data: Uint8Array): void {\n    let newData = data;\n    if (this.wrapper) {\n      if (this.wrapper.fallbackType) {\n        if (this.wrapper.fallbackType === 'int32') {\n          // Convert original integer data to int32.\n          newData = convertDataToInt32(data, this.wrapper.type);\n          this.wrapper.setIsDataConverted(true);\n        } else {\n          throw new Error(`Unsupported fallback data type: ${this.wrapper.fallbackType}`);\n        }\n      }\n\n      // Check if the data size matches the tensor size.\n      if (data.byteLength === this.wrapper.byteLength) {\n        // Write the newData to the tensor.\n        this.wrapper.write(newData);\n        return;\n      } else {\n        LOG_DEBUG('verbose', () => 'Data size does not match tensor size. Releasing tensor.');\n        this.releaseTensor();\n      }\n    }\n\n    if (this.activeUpload) {\n      this.activeUpload.set(newData);\n    } else {\n      this.activeUpload = new Uint8Array(newData);\n    }\n  }\n\n  public async download(dstBuffer?: ArrayBufferView | ArrayBuffer): Promise<ArrayBuffer | undefined> {\n    if (this.activeUpload) {\n      // If this.activeUpload has been converted to int32, we need to convert it back to original integer data type.\n      const dstData = this.wrapper?.isDataConverted\n        ? convertInt32ToData(this.activeUpload, this.wrapper?.type)\n        : this.activeUpload;\n\n      if (dstBuffer) {\n        if (dstBuffer instanceof ArrayBuffer) {\n          new Uint8Array(dstBuffer).set(dstData);\n        } else {\n          new Uint8Array(dstBuffer.buffer, dstBuffer.byteOffset, dstBuffer.byteLength).set(dstData);\n        }\n        return;\n      } else {\n        return dstData.buffer;\n      }\n    }\n    if (!this.wrapper) {\n      throw new Error('Tensor has not been created.');\n    }\n\n    if (!dstBuffer) {\n      return this.wrapper.read();\n    }\n    return this.wrapper.read(dstBuffer);\n  }\n}\n\nclass TensorManagerImpl implements TensorManager {\n  private tensorTrackersById: Map<TensorId, TensorIdTracker> = new Map();\n  private freeTensors: TensorWrapper[] = [];\n  private externalTensors: Set<TensorWrapper> = new Set();\n\n  constructor(private backend: WebNNBackend) {}\n\n  public getMLContext(sessionId: number): MLContext {\n    const context = this.backend.getMLContext(sessionId);\n    if (!context) {\n      throw new Error('MLContext not found for session.');\n    }\n    return context;\n  }\n\n  public getMLOpSupportLimits(sessionId: number): MLOpSupportLimits | undefined {\n    return this.backend.getMLOpSupportLimits(sessionId);\n  }\n\n  public reserveTensorId(): TensorId {\n    const tensorId = createNewTensorId();\n    this.tensorTrackersById.set(tensorId, new TensorIdTracker(this));\n    return tensorId;\n  }\n\n  public releaseTensorId(tensorId: TensorId): void {\n    const tensorTracker = this.tensorTrackersById.get(tensorId);\n    if (!tensorTracker) {\n      return;\n    }\n    this.tensorTrackersById.delete(tensorId);\n    if (tensorTracker.tensorWrapper) {\n      this.releaseTensor(tensorTracker.tensorWrapper);\n    }\n  }\n\n  public async ensureTensor(\n    sessionId: number,\n    tensorId: TensorId,\n    dataType: MLOperandDataType,\n    shape: number[],\n    copyOld: boolean,\n  ): Promise<MLTensor> {\n    LOG_DEBUG(\n      'verbose',\n      () =>\n        `[WebNN] TensorManager.ensureTensor {tensorId: ${tensorId}, dataType: ${\n          dataType\n        }, shape: ${shape}, copyOld: ${copyOld}}`,\n    );\n    const tensor = this.tensorTrackersById.get(tensorId);\n    if (!tensor) {\n      throw new Error('Tensor not found.');\n    }\n    return tensor.ensureTensor(sessionId, dataType, shape, copyOld);\n  }\n\n  public upload(tensorId: TensorId, data: Uint8Array): void {\n    const tensor = this.tensorTrackersById.get(tensorId);\n    if (!tensor) {\n      throw new Error('Tensor not found.');\n    }\n    tensor.upload(data);\n  }\n\n  public async download(tensorId: TensorId): Promise<ArrayBuffer>;\n  public async download(tensorId: TensorId, dstBuffer: ArrayBufferView | ArrayBuffer): Promise<undefined>;\n  async download(tensorId: TensorId, dstBuffer?: ArrayBufferView | ArrayBuffer): Promise<ArrayBuffer | undefined> {\n    LOG_DEBUG(\n      'verbose',\n      () => `[WebNN] TensorManager.download {tensorId: ${tensorId}, dstBuffer: ${dstBuffer?.byteLength}}`,\n    );\n    const tensorTracker = this.tensorTrackersById.get(tensorId);\n    if (!tensorTracker) {\n      throw new Error('Tensor not found.');\n    }\n    return tensorTracker.download(dstBuffer);\n  }\n\n  public releaseTensorsForSession(sessionId: number): void {\n    for (const tensor of this.freeTensors) {\n      if (tensor.sessionId === sessionId) {\n        tensor.destroy();\n      }\n    }\n    this.freeTensors = this.freeTensors.filter((tensor) => tensor.sessionId !== sessionId);\n  }\n\n  public registerTensor(\n    sessionId: number,\n    mlTensor: MLTensor,\n    dataType: MLOperandDataType,\n    shape: readonly number[],\n  ): TensorId {\n    const context = this.getMLContext(sessionId);\n    const tensorId = createNewTensorId();\n    // Defaulting to READ | WRITE if usage is not provided.\n    // eslint-disable-next-line no-bitwise\n    const wrapper = new TensorWrapper({\n      sessionId,\n      context,\n      tensor: mlTensor,\n      dataType,\n      shape,\n    });\n    this.tensorTrackersById.set(tensorId, new TensorIdTracker(this, wrapper));\n    this.externalTensors.add(wrapper);\n    return tensorId;\n  }\n\n  /**\n   * Get or create an MLTensor with the given data type and shape.\n   */\n  public async getCachedTensor(\n    sessionId: number,\n    dataType: MLOperandDataType,\n    shape: readonly number[],\n    usage: MLTensorUsageFlags | undefined,\n    writable: boolean,\n    readable: boolean,\n    fallbackDataType?: MLOperandDataType,\n  ): Promise<TensorWrapper> {\n    const context = this.getMLContext(sessionId);\n    for (const [index, tensor] of this.freeTensors.entries()) {\n      if (tensor.canReuseTensor(context, dataType, shape)) {\n        LOG_DEBUG(\n          'verbose',\n          () =>\n            `[WebNN] Reusing tensor {dataType: ${dataType}, ${\n              fallbackDataType ? `fallbackDataType: ${fallbackDataType},` : ''\n            } shape: ${shape}`,\n        );\n        const wrapper = this.freeTensors.splice(index, 1)[0];\n        wrapper.sessionId = sessionId;\n        return wrapper;\n      }\n    }\n    LOG_DEBUG(\n      'verbose',\n      () =>\n        `[WebNN] MLContext.createTensor {dataType: ${dataType}, ${\n          fallbackDataType ? `fallbackDataType: ${fallbackDataType},` : ''\n        } shape: ${shape}}`,\n    );\n    const tensor = await context.createTensor({\n      dataType: fallbackDataType ?? dataType, // If fallback data type is provided, use it.\n      shape,\n      dimensions: shape,\n      usage,\n      writable,\n      readable,\n    });\n    return new TensorWrapper({ sessionId, context, tensor, dataType, shape, fallbackDataType });\n  }\n\n  /**\n   * Release tensor for reuse unless external.\n   */\n  public releaseTensor(tensorWrapper: TensorWrapper) {\n    if (this.externalTensors.has(tensorWrapper)) {\n      this.externalTensors.delete(tensorWrapper);\n    }\n    this.freeTensors.push(tensorWrapper);\n  }\n}\n\nexport const createTensorManager = (...args: ConstructorParameters<typeof TensorManagerImpl>): TensorManager =>\n  new TensorManagerImpl(...args);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// WebNN API currently does not have a TypeScript definition file. This file is a workaround with types generated from\n// WebNN API specification.\n// https://github.com/webmachinelearning/webnn/issues/677\n/// <reference path=\"webnn/webnn.d.ts\" />\n\nimport { Env, Tensor } from 'onnxruntime-common';\n\nimport { DataType, tensorDataTypeStringToEnum } from '../wasm-common';\nimport { getInstance } from '../wasm-factory';\n\nimport { createView } from './tensor-view';\nimport { TensorId, createTensorManager, convertDataToInt32 } from './webnn/tensor-manager';\nimport { configureLogger, LOG_DEBUG } from './log';\n\n/*\n * TensorProto::data_type to WebNN OperandType mapping.\n */\nconst onnxDataTypeToWebnnDataType = new Map<DataType, MLOperandDataType>([\n  [DataType.float, 'float32'],\n  [DataType.float16, 'float16'],\n  [DataType.int32, 'int32'],\n  [DataType.uint32, 'uint32'],\n  [DataType.int64, 'int64'],\n  [DataType.uint64, 'uint64'],\n  [DataType.int4, 'int4'],\n  [DataType.uint4, 'uint4'],\n  [DataType.int8, 'int8'],\n  [DataType.uint8, 'uint8'],\n  [DataType.bool, 'uint8'],\n]);\n\ntype MLContextEntry = {\n  gpuDevice?: GPUDevice;\n  options?: MLContextOptions;\n  mlContext: MLContext;\n};\n\nconst compareMLContextOptions = (a?: MLContextOptions, b?: MLContextOptions): boolean => {\n  if (a === b) {\n    return true;\n  }\n  if (a === undefined || b === undefined) {\n    return false;\n  }\n  const aKeys = Object.keys(a).sort() as Array<keyof typeof a>;\n  const bKeys = Object.keys(b).sort() as Array<keyof typeof b>;\n  return aKeys.length === bKeys.length && aKeys.every((key, index) => key === bKeys[index] && a[key] === b[key]);\n};\n\n/**\n * WebNN backend implementation. This class is used to keep track of the MLTensors created by the backend and keep track\n * of the current MLContext being used by the sessions.\n */\nexport class WebNNBackend {\n  /**\n   * Tensor managers for each session.\n   */\n  private tensorManager = createTensorManager(this);\n  /**\n   * Maps from session id to MLContexts.\n   */\n  private mlContextBySessionId = new Map<number, MLContext>();\n  /**\n   * Maps from MLContext to session ids.\n   */\n  private sessionIdsByMLContext = new Map<MLContext, Set<number>>();\n  /**\n   * Cache of MLContexts.\n   */\n  private mlContextCache: MLContextEntry[] = [];\n  /**\n   * Current session id.\n   */\n  private activeSessionId?: number;\n  /**\n   * Maps from session id to list of graph inputs.\n   */\n  private sessionGraphInputs: Map<number, string[]> = new Map();\n  /**\n   * Maps from session id to list of graph outputs.\n   */\n  private sessionGraphOutputs: Map<number, string[]> = new Map();\n  /**\n   * Temporary graph inputs for the current session.\n   * These inputs will be registered when the session is created.\n   */\n  private temporaryGraphInputs: string[] = [];\n  /**\n   * Temporary graph outputs for the current session.\n   * These outputs will be registered when the session is created.\n   */\n  private temporaryGraphOutputs: string[] = [];\n  /**\n   * Temporary tensors for the current session.\n   */\n  private temporarySessionTensorIds: Map<number, TensorId[]> = new Map();\n  /**\n   * Maps from session id to MLOpSupportLimits.\n   */\n  private mlOpSupportLimitsBySessionId = new Map<number, MLOpSupportLimits>();\n\n  constructor(env: Env) {\n    configureLogger(env.logLevel!, !!env.debug);\n  }\n\n  public get currentSessionId(): number {\n    if (this.activeSessionId === undefined) {\n      throw new Error('No active session');\n    }\n    return this.activeSessionId;\n  }\n\n  public onRunStart(sessionId: number): void {\n    LOG_DEBUG('verbose', () => `[WebNN] onRunStart {sessionId: ${sessionId}}`);\n    this.activeSessionId = sessionId;\n  }\n\n  public onRunEnd(sessionId: number): void {\n    LOG_DEBUG('verbose', () => `[WebNN] onRunEnd {sessionId: ${sessionId}}`);\n    const tensorIds = this.temporarySessionTensorIds.get(sessionId);\n    if (!tensorIds) {\n      return;\n    }\n    for (const tensorId of tensorIds) {\n      LOG_DEBUG('verbose', () => `[WebNN] releasing temporary tensor {tensorId: ${tensorId}}`);\n      this.tensorManager.releaseTensorId(tensorId);\n    }\n    this.temporarySessionTensorIds.delete(sessionId);\n    this.activeSessionId = undefined;\n  }\n\n  public async createMLContext(optionsOrDevice?: MLContextOptions | GPUDevice): Promise<MLContext> {\n    if (optionsOrDevice instanceof GPUDevice) {\n      const mlContextIndex = this.mlContextCache.findIndex((entry) => entry.gpuDevice === optionsOrDevice);\n      if (mlContextIndex !== -1) {\n        return this.mlContextCache[mlContextIndex].mlContext;\n      } else {\n        const mlContext = await navigator.ml.createContext(optionsOrDevice);\n        this.mlContextCache.push({ gpuDevice: optionsOrDevice, mlContext });\n        return mlContext;\n      }\n    } else if (optionsOrDevice === undefined) {\n      const mlContextIndex = this.mlContextCache.findIndex(\n        (entry) => entry.options === undefined && entry.gpuDevice === undefined,\n      );\n      if (mlContextIndex !== -1) {\n        return this.mlContextCache[mlContextIndex].mlContext;\n      } else {\n        const mlContext = await navigator.ml.createContext();\n        this.mlContextCache.push({ mlContext });\n        return mlContext;\n      }\n    }\n\n    const mlContextIndex = this.mlContextCache.findIndex((entry) =>\n      compareMLContextOptions(entry.options, optionsOrDevice),\n    );\n    if (mlContextIndex !== -1) {\n      return this.mlContextCache[mlContextIndex].mlContext;\n    } else {\n      const mlContext = await navigator.ml.createContext(optionsOrDevice);\n      this.mlContextCache.push({ options: optionsOrDevice, mlContext });\n      return mlContext;\n    }\n  }\n\n  public registerMLContext(sessionId: number, mlContext: MLContext): void {\n    this.mlContextBySessionId.set(sessionId, mlContext);\n    let sessionIds = this.sessionIdsByMLContext.get(mlContext);\n    if (!sessionIds) {\n      sessionIds = new Set();\n      this.sessionIdsByMLContext.set(mlContext, sessionIds);\n    }\n    sessionIds.add(sessionId);\n\n    if (!this.mlOpSupportLimitsBySessionId.has(sessionId)) {\n      this.mlOpSupportLimitsBySessionId.set(sessionId, mlContext.opSupportLimits());\n    }\n\n    if (this.temporaryGraphInputs.length > 0) {\n      this.sessionGraphInputs.set(sessionId, this.temporaryGraphInputs);\n      this.temporaryGraphInputs = [];\n    }\n    if (this.temporaryGraphOutputs.length > 0) {\n      this.sessionGraphOutputs.set(sessionId, this.temporaryGraphOutputs);\n      this.temporaryGraphOutputs = [];\n    }\n  }\n\n  public onReleaseSession(sessionId: number): void {\n    this.sessionGraphInputs.delete(sessionId);\n    this.sessionGraphOutputs.delete(sessionId);\n    const mlContext = this.mlContextBySessionId.get(sessionId)!;\n    if (!mlContext) {\n      // Current session is not a WebNN session.\n      return;\n    }\n    this.tensorManager.releaseTensorsForSession(sessionId);\n    this.mlContextBySessionId.delete(sessionId);\n    this.mlOpSupportLimitsBySessionId.delete(sessionId);\n    const sessionIds = this.sessionIdsByMLContext.get(mlContext)!;\n    sessionIds.delete(sessionId);\n    if (sessionIds.size === 0) {\n      this.sessionIdsByMLContext.delete(mlContext);\n      const mlContextIndex = this.mlContextCache.findIndex((entry) => entry.mlContext === mlContext);\n      if (mlContextIndex !== -1) {\n        this.mlContextCache.splice(mlContextIndex, 1);\n      }\n    }\n  }\n\n  public getMLContext(sessionId: number): MLContext | undefined {\n    return this.mlContextBySessionId.get(sessionId);\n  }\n\n  public getMLOpSupportLimits(sessionId: number): MLOpSupportLimits | undefined {\n    return this.mlOpSupportLimitsBySessionId.get(sessionId);\n  }\n\n  public reserveTensorId(): TensorId {\n    return this.tensorManager.reserveTensorId();\n  }\n\n  public releaseTensorId(tensorId: TensorId): void {\n    LOG_DEBUG('verbose', () => `[WebNN] releaseTensorId {tensorId: ${tensorId}}`);\n    this.tensorManager.releaseTensorId(tensorId);\n  }\n\n  public async ensureTensor(\n    sessionId: number | undefined,\n    tensorId: TensorId,\n    onnxDataType: DataType,\n    dimensions: number[],\n    copyOld: boolean,\n  ): Promise<MLTensor> {\n    const webnnDataType = onnxDataTypeToWebnnDataType.get(onnxDataType);\n    if (!webnnDataType) {\n      throw new Error(`Unsupported ONNX data type: ${onnxDataType}`);\n    }\n    return this.tensorManager.ensureTensor(\n      sessionId ?? this.currentSessionId,\n      tensorId,\n      webnnDataType,\n      dimensions,\n      copyOld,\n    );\n  }\n\n  public async createTemporaryTensor(\n    sessionId: number,\n    onnxDataType: DataType,\n    shape: readonly number[],\n  ): Promise<TensorId> {\n    LOG_DEBUG('verbose', () => `[WebNN] createTemporaryTensor {onnxDataType: ${onnxDataType}, shape: ${shape}}`);\n    const dataType = onnxDataTypeToWebnnDataType.get(onnxDataType);\n    if (!dataType) {\n      throw new Error(`Unsupported ONNX data type: ${onnxDataType}`);\n    }\n    const tensorId = this.tensorManager.reserveTensorId();\n    await this.tensorManager.ensureTensor(sessionId, tensorId, dataType, shape, false);\n    const tensorIds = this.temporarySessionTensorIds.get(sessionId);\n    if (!tensorIds) {\n      this.temporarySessionTensorIds.set(sessionId, [tensorId]);\n    } else {\n      tensorIds.push(tensorId);\n    }\n    return tensorId;\n  }\n\n  public uploadTensor(tensorId: TensorId, data: Uint8Array): void {\n    const wasm = getInstance();\n    if (!wasm.shouldTransferToMLTensor) {\n      throw new Error('Trying to upload to a MLTensor while shouldTransferToMLTensor is false');\n    }\n    LOG_DEBUG('verbose', () => `[WebNN] uploadTensor {tensorId: ${tensorId}, data: ${data.byteLength}}`);\n    this.tensorManager.upload(tensorId, data);\n  }\n\n  public async downloadTensor(tensorId: TensorId, dstBuffer: ArrayBufferView | ArrayBuffer): Promise<undefined> {\n    return this.tensorManager.download(tensorId, dstBuffer);\n  }\n\n  public createMLTensorDownloader(tensorId: TensorId, type: Tensor.MLTensorDataTypes): () => Promise<Tensor.DataType> {\n    return async () => {\n      const data = await this.tensorManager.download(tensorId);\n      return createView(data, type);\n    };\n  }\n\n  public registerMLTensor(sessionId: number, tensor: MLTensor, onnxDataType: DataType, dimensions: number[]): TensorId {\n    const webnnDataType = onnxDataTypeToWebnnDataType.get(onnxDataType);\n    if (!webnnDataType) {\n      throw new Error(`Unsupported ONNX data type: ${onnxDataType}`);\n    }\n\n    const id = this.tensorManager.registerTensor(sessionId, tensor, webnnDataType, dimensions);\n    LOG_DEBUG(\n      'verbose',\n      () =>\n        `[WebNN] registerMLTensor {tensor: ${tensor}, dataType: ${webnnDataType}, dimensions: ${\n          dimensions\n        }} -> {tensorId: ${id}}`,\n    );\n    return id;\n  }\n\n  // Register a WebNN Constant operand from external data.\n  public registerMLConstant(\n    externalFilePath: string,\n    dataOffset: number,\n    dataLength: number,\n    builder: MLGraphBuilder,\n    desc: MLOperandDescriptor,\n    mountedFiles: Map<string, Uint8Array> | undefined,\n    shouldConvertInt64ToInt32 = false,\n  ): MLOperand {\n    // If available, \"Module.MountedFiles\" is a Map for all preloaded files.\n    if (!mountedFiles) {\n      throw new Error('External mounted files are not available.');\n    }\n\n    let filePath = externalFilePath;\n    if (externalFilePath.startsWith('./')) {\n      filePath = externalFilePath.substring(2);\n    }\n    const fileData = mountedFiles.get(filePath);\n    if (!fileData) {\n      throw new Error(`File with name ${filePath} not found in preloaded files.`);\n    }\n\n    if (dataOffset + dataLength > fileData.byteLength) {\n      throw new Error('Out of bounds: data offset and length exceed the external file data size.');\n    }\n\n    const buffer = fileData.slice(dataOffset, dataOffset + dataLength).buffer;\n    let bufferView: ArrayBufferView;\n    switch (desc.dataType) {\n      case 'float32':\n        bufferView = new Float32Array(buffer);\n        break;\n      case 'float16':\n        bufferView =\n          typeof Float16Array !== 'undefined' && Float16Array.from ? new Float16Array(buffer) : new Uint16Array(buffer);\n        break;\n      case 'int32':\n        bufferView = new Int32Array(buffer);\n        break;\n      case 'uint32':\n        bufferView = new Uint32Array(buffer);\n        break;\n      case 'int64':\n        if (shouldConvertInt64ToInt32) {\n          // Int64 is not supported by current context, use int32 instead.\n          const int32Buffer = convertDataToInt32(new Uint8Array(buffer), 'int64');\n          bufferView = new Int32Array(int32Buffer.buffer);\n          desc.dataType = 'int32';\n        } else {\n          bufferView = new BigInt64Array(buffer);\n        }\n        break;\n      case 'uint64':\n        bufferView = new BigUint64Array(buffer);\n        break;\n      case 'int8':\n        bufferView = new Int8Array(buffer);\n        break;\n      case 'int4':\n      case 'uint4':\n      case 'uint8':\n        bufferView = new Uint8Array(buffer);\n        break;\n      default:\n        throw new Error(`Unsupported data type: ${desc.dataType} in creating WebNN Constant from external data.`);\n    }\n\n    LOG_DEBUG(\n      'verbose',\n      () =>\n        `[WebNN] registerMLConstant {dataType: ${desc.dataType}, shape: ${desc.shape}}} ${\n          shouldConvertInt64ToInt32 ? '(Note: it was int64 data type and registered to int32 as workaround)' : ''\n        }`,\n    );\n\n    return builder.constant(desc, bufferView);\n  }\n\n  public registerGraphInput(inputName: string): void {\n    this.temporaryGraphInputs.push(inputName);\n  }\n\n  public registerGraphOutput(outputName: string): void {\n    this.temporaryGraphOutputs.push(outputName);\n  }\n\n  public isGraphInput(sessionId: number, inputName: string): boolean {\n    const inputNames = this.sessionGraphInputs.get(sessionId);\n    if (!inputNames) {\n      return false;\n    }\n    return inputNames.includes(inputName);\n  }\n\n  public isGraphOutput(sessionId: number, outputName: string): boolean {\n    const outputNames = this.sessionGraphOutputs.get(sessionId);\n    if (!outputNames) {\n      return false;\n    }\n    return outputNames.includes(outputName);\n  }\n\n  public isGraphInputOutputTypeSupported(sessionId: number, type: Tensor.Type, isInput = true): boolean {\n    const dataType = onnxDataTypeToWebnnDataType.get(tensorDataTypeStringToEnum(type));\n    const opLimits = this.mlOpSupportLimitsBySessionId.get(sessionId);\n\n    if (typeof dataType === 'undefined') {\n      return false;\n    }\n\n    if (isInput) {\n      return !!opLimits?.input.dataTypes.includes(dataType);\n    } else {\n      return !!opLimits?.output.dataTypes.includes(dataType);\n    }\n  }\n\n  public flush(): void {\n    // Unlike the WebGPU backend, the WebNN backend does not need to flush any pending operations.\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// WebNN API currently does not have a TypeScript definition file. This file is a workaround with types generated from\n// WebNN API specification.\n// https://github.com/webmachinelearning/webnn/issues/677\n/// <reference path=\"jsep/webnn/webnn.d.ts\" />\n\nimport { Env, InferenceSession, Tensor, TRACE_EVENT_BEGIN, TRACE_EVENT_END } from 'onnxruntime-common';\n\nimport {\n  SerializableInternalBuffer,\n  SerializableSessionMetadata,\n  SerializableTensorMetadata,\n  TensorMetadata,\n} from './proxy-messages';\nimport { setRunOptions } from './run-options';\nimport { setSessionOptions } from './session-options';\nimport {\n  calculateTensorSizeInBytes,\n  dataLocationStringToEnum,\n  isGpuBufferSupportedType,\n  isMLTensorSupportedType,\n  logLevelStringToEnum,\n  tensorDataTypeEnumToString,\n  tensorDataTypeStringToEnum,\n  tensorTypeToTypedArrayConstructor,\n} from './wasm-common';\nimport { getInstance } from './wasm-factory';\nimport { allocWasmString, checkLastError } from './wasm-utils';\nimport { loadFile } from './wasm-utils-load-file';\n\n// #region Initializations\n\n/**\n * There are 4 different \"initialization\" steps for ORT. They happen in different places and different time.\n *\n * 1. JavaScript initialization for onnxruntime-common and onnxruntime-web.\n *    This is the first initialization step. In this step, onnxruntime-web calls onnxruntime-common's registerBackend()\n * function multiple times to register all the available backends. The backend registration is very fast. It only\n * registers the backend name with the uninitialized backend object. No heavy initialization is done in this step.\n *    Refer to web/lib/index.ts for the backend registration.\n *\n * 2. WebAssembly artifact initialization.\n *    This happens when any registered wasm backend is used for the first time (ie. `ort.InferenceSession.create()` is\n * called). In this step, onnxruntime-web does the followings:\n *     - create a proxy worker and make sure the proxy worker is ready to receive messages, if proxy is enabled.\n *     - perform feature detection, locate correct WebAssembly artifact path and call the Emscripten generated\n * JavaScript code to initialize the WebAssembly runtime.\n *         - if proxy is enabled, this step happens in the proxy worker using message 'init-wasm'.\n *         - downloading the 'ort-wasm{...}.wasm' file is done in this step.\n *         - if multi-thread is enabled, one or more webworker will be created to initialize the PThread threadpool.\n *\n * 3. ORT environment initialization.\n *    This happens after step 2. In this step, onnxruntime-web performs ONNX Runtime environment initialization.\n * Function `_OrtInit()` is called in this step.\n *     - if proxy is enabled, this step happens in the proxy worker using message 'init-ort'.\n *     - logging level (ort.env.logLevel) and thread number (ort.env.wasm.numThreads) are set in this step.\n *\n * 4. Session initialization.\n *    This happens when `ort.InferenceSession.create()` is called. Unlike the first 3 steps (they only called once),\n * this step will be done for each session. In this step, onnxruntime-web does the followings:\n *    If the parameter is a URL:\n *    - download the model data from the URL.\n *    - copy the model data to the WASM heap. (proxy: 'copy-from')\n *    - dereference the model buffer. This step allows the original ArrayBuffer to be garbage collected.\n *    - call `_OrtCreateSession()` to create the session. (proxy: 'create')\n *\n *    If the parameter is a Uint8Array object:\n *    - copy the model data to the WASM heap. (proxy: 'copy-from')\n *    - call `_OrtCreateSession()` to create the session. (proxy: 'create')\n *\n *\n */\n\n/**\n * initialize ORT environment.\n *\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    checkLastError(\"Can't initialize onnxruntime.\");\n  }\n};\n\n/**\n * initialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async (env: Env): Promise<void> => {\n  // init ORT\n  initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n};\n\n/**\n * perform EP specific initialization.\n *\n * @param env\n * @param epName\n */\nexport const initEp = async (env: Env, epName: string): Promise<void> => {\n  // initialize ASYNCIFY support\n  getInstance().asyncInit?.();\n\n  // perform WebGPU availability check ( either JSEP or WebGPU EP )\n  let webgpuAdapter = env.webgpu.adapter as GPUAdapter | null;\n  if (epName === 'webgpu') {\n    if (typeof navigator === 'undefined' || !navigator.gpu) {\n      throw new Error('WebGPU is not supported in current environment');\n    }\n    if (!webgpuAdapter) {\n      // if adapter is not set, request a new adapter.\n      const powerPreference = env.webgpu.powerPreference;\n      if (powerPreference !== undefined && powerPreference !== 'low-power' && powerPreference !== 'high-performance') {\n        throw new Error(`Invalid powerPreference setting: \"${powerPreference}\"`);\n      }\n      const forceFallbackAdapter = env.webgpu.forceFallbackAdapter;\n      if (forceFallbackAdapter !== undefined && typeof forceFallbackAdapter !== 'boolean') {\n        throw new Error(`Invalid forceFallbackAdapter setting: \"${forceFallbackAdapter}\"`);\n      }\n      webgpuAdapter = await navigator.gpu.requestAdapter({ powerPreference, forceFallbackAdapter });\n      if (!webgpuAdapter) {\n        throw new Error(\n          'Failed to get GPU adapter. ' +\n            'You may need to enable flag \"--enable-unsafe-webgpu\" if you are using Chrome.',\n        );\n      }\n    } else {\n      // if adapter is set, validate it.\n      if (\n        typeof webgpuAdapter.limits !== 'object' ||\n        typeof webgpuAdapter.features !== 'object' ||\n        typeof webgpuAdapter.requestDevice !== 'function'\n      ) {\n        throw new Error('Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.');\n      }\n    }\n  }\n\n  // perform WebNN availability check ( either JSEP or WebNN EP )\n  if (epName === 'webnn') {\n    if (typeof navigator === 'undefined' || !(navigator as unknown as { ml: unknown }).ml) {\n      throw new Error('WebNN is not supported in current environment');\n    }\n  }\n\n  if (!BUILD_DEFS.DISABLE_JSEP) {\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n    const initJsep = require('./jsep/init').init;\n\n    if (epName === 'webgpu') {\n      await initJsep('webgpu', getInstance(), env, webgpuAdapter);\n    }\n    if (epName === 'webnn') {\n      await initJsep('webnn', getInstance(), env);\n    }\n  } else {\n    if (!BUILD_DEFS.DISABLE_WEBGPU && epName === 'webgpu') {\n      getInstance().webgpuInit!((device) => {\n        env.webgpu.device = device;\n      });\n    }\n    if (!BUILD_DEFS.DISABLE_WEBNN && epName === 'webnn') {\n      // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n      const backend = new (require('./jsep/backend-webnn').WebNNBackend)(env);\n      getInstance().webnnInit!([\n        backend,\n        // webnnReserveTensorId\n        () => backend.reserveTensorId(),\n        // webnnReleaseTensorId,\n        (tensorId: number) => backend.releaseTensorId(tensorId),\n        // webnnEnsureTensor\n        async (sessionId: number | undefined, tensorId: number, onnxDataType: number, shape: number[], copyOld) =>\n          backend.ensureTensor(sessionId, tensorId, onnxDataType, shape, copyOld),\n        // webnnUploadTensor\n        (tensorId: number, data: Uint8Array) => {\n          backend.uploadTensor(tensorId, data);\n        },\n        // webnnDownloadTensor\n        async (tensorId: number, dstBuffer: ArrayBufferView | ArrayBuffer) =>\n          backend.downloadTensor(tensorId, dstBuffer),\n        // webnnRegisterMLContext\n        (sessionId: number, mlContext: MLContext) => backend.registerMLContext(sessionId, mlContext),\n        // webnnEnableTraceEvent\n        !!env.trace,\n      ]);\n    }\n  }\n};\n\n// #endregion Initializations\n\n/**\n * valid data locations for input/output tensors.\n */\ntype SupportedTensorDataLocationForInputOutput =\n  | 'cpu'\n  | 'cpu-pinned'\n  | 'gpu-buffer'\n  | 'ml-tensor'\n  // Use 'ml-tensor' during inference, but output a tensor located on the CPU.\n  | 'ml-tensor-cpu-output';\n\ntype IOBindingState = {\n  /**\n   * the handle of IO binding.\n   */\n  readonly handle: number;\n\n  /**\n   * the preferred location for each output tensor.\n   *\n   * value is one of 'cpu', 'cpu-pinned', 'gpu-buffer', 'ml-tensor'.\n   */\n  readonly outputPreferredLocations: readonly SupportedTensorDataLocationForInputOutput[];\n\n  /**\n   * enum value of the preferred location for each output tensor.\n   */\n  readonly outputPreferredLocationsEncoded: readonly number[];\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded; bindingState\n */\ntype SessionMetadata = [\n  inferenceSessionId: number,\n  inputNamesUTF8Encoded: number[],\n  outputNamesUTF8Encoded: number[],\n  bindingState: IOBindingState | null,\n  enableGraphCapture: boolean,\n  inputOutputBound: boolean,\n];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * get the input/output count of the session.\n * @param sessionHandle the handle representing the session. should be non-zero.\n * @returns a tuple including 2 numbers, representing the input count and output count.\n */\nconst getSessionInputOutputCount = (sessionHandle: number): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const ptrSize = wasm.PTR_SIZE;\n    const dataOffset = wasm.stackAlloc(2 * ptrSize);\n    const errorCode = wasm._OrtGetInputOutputCount(sessionHandle, dataOffset, dataOffset + ptrSize);\n    if (errorCode !== 0) {\n      checkLastError(\"Can't get session input/output count.\");\n    }\n    const type = ptrSize === 4 ? 'i32' : 'i64';\n    return [Number(wasm.getValue(dataOffset, type)), Number(wasm.getValue(dataOffset + ptrSize, type))];\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\nconst getSessionInputOutputMetadata = (\n  sessionHandle: number,\n  index: number,\n): [nameOffset: number, elementType: number, dims?: Array<number | string>] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  let metadataOffset = 0;\n  try {\n    const ptrSize = wasm.PTR_SIZE;\n    const dataOffset = wasm.stackAlloc(2 * ptrSize);\n    const errorCode = wasm._OrtGetInputOutputMetadata(sessionHandle, index, dataOffset, dataOffset + ptrSize);\n    if (errorCode !== 0) {\n      checkLastError(\"Can't get session input/output metadata.\");\n    }\n    const nameOffset = Number(wasm.getValue(dataOffset, '*'));\n    metadataOffset = Number(wasm.getValue(dataOffset + ptrSize, '*'));\n    // get element type\n    const elementType = wasm.HEAP32[metadataOffset / 4];\n    if (elementType === 0) {\n      return [nameOffset, 0]; // non-tensor\n    }\n\n    // get dims count\n    const dimsCount = wasm.HEAPU32[metadataOffset / 4 + 1];\n    // get dims\n    const dims: Array<number | string> = [];\n    for (let i = 0; i < dimsCount; i++) {\n      const symbolicDimNameOffset = Number(wasm.getValue(metadataOffset + 8 + i * ptrSize, '*'));\n      dims.push(\n        symbolicDimNameOffset !== 0\n          ? wasm.UTF8ToString(symbolicDimNameOffset)\n          : Number(wasm.getValue(metadataOffset + 8 + (i + dimsCount) * ptrSize, '*')),\n      );\n    }\n    return [nameOffset, elementType, dims];\n  } finally {\n    wasm.stackRestore(stack);\n    if (metadataOffset !== 0) {\n      wasm._OrtFree(metadataOffset);\n    }\n  }\n};\n\n/**\n * allocate the memory and memcpy the external buffer.\n *\n * @param model - the external buffer containing the model data. Must not be the same buffer as the WASM heap.\n * @returns a 2-elements tuple - the pointer and size of the allocated buffer\n */\nexport const copyFromExternalBuffer = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  if (modelDataOffset === 0) {\n    throw new Error(`Can't create a session. failed to allocate a buffer of size ${model.byteLength}.`);\n  }\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\n/**\n * create an inference session from a model data buffer.\n *\n * @param modelData - either a Uint8Array object representing the model data, or a 2-elements tuple containing the\n *     pointer and size of the model data buffer.\n * @param options an optional session options object.\n * @returns a 3-elements tuple containing [session handle, input names, output names]\n */\nexport const createSession = async (\n  modelData: Uint8Array | SerializableInternalBuffer,\n  options?: InferenceSession.SessionOptions,\n): Promise<SerializableSessionMetadata> => {\n  let modelDataOffset: number, modelDataLength: number;\n  const wasm = getInstance();\n\n  if (Array.isArray(modelData)) {\n    // if model data is an array, it must be a 2-elements tuple containing the pointer and size of the model data\n    [modelDataOffset, modelDataLength] = modelData;\n  } else if (modelData.buffer === wasm.HEAPU8.buffer) {\n    // if model data uses the same buffer as the WASM heap, we don't need to copy it.\n    [modelDataOffset, modelDataLength] = [modelData.byteOffset, modelData.byteLength];\n  } else {\n    // otherwise, copy the model data to the WASM heap.\n    [modelDataOffset, modelDataLength] = copyFromExternalBuffer(modelData);\n  }\n\n  let sessionHandle = 0;\n  let sessionOptionsHandle = 0;\n  let ioBindingHandle = 0;\n  let allocs: number[] = [];\n  const inputNamesUTF8Encoded = [];\n  const outputNamesUTF8Encoded = [];\n\n  try {\n    [sessionOptionsHandle, allocs] = await setSessionOptions(options);\n\n    if (options?.externalData && wasm.mountExternalData) {\n      const loadingPromises = [];\n      for (const file of options.externalData) {\n        const path = typeof file === 'string' ? file : file.path;\n        loadingPromises.push(\n          loadFile(typeof file === 'string' ? file : file.data).then((data) => {\n            wasm.mountExternalData(path, data);\n          }),\n        );\n      }\n\n      // wait for all external data files to be loaded\n      await Promise.all(loadingPromises);\n    }\n\n    for (const provider of options?.executionProviders ?? []) {\n      const providerName = typeof provider === 'string' ? provider : provider.name;\n      if (providerName === 'webnn') {\n        wasm.shouldTransferToMLTensor = false;\n        if (typeof provider !== 'string') {\n          const webnnOptions = provider as InferenceSession.WebNNExecutionProviderOption;\n          const context = (webnnOptions as InferenceSession.WebNNOptionsWithMLContext)?.context;\n          const gpuDevice = (webnnOptions as InferenceSession.WebNNOptionsWebGpu)?.gpuDevice;\n          const deviceType = (webnnOptions as InferenceSession.WebNNContextOptions)?.deviceType;\n          const powerPreference = (webnnOptions as InferenceSession.WebNNContextOptions)?.powerPreference;\n          if (context) {\n            wasm.currentContext = context as MLContext;\n          } else if (gpuDevice) {\n            wasm.currentContext = await wasm.webnnCreateMLContext!(gpuDevice);\n          } else {\n            wasm.currentContext = await wasm.webnnCreateMLContext!({ deviceType, powerPreference });\n          }\n        } else {\n          wasm.currentContext = await wasm.webnnCreateMLContext!();\n        }\n        break;\n      }\n    }\n\n    sessionHandle = await wasm._OrtCreateSession(modelDataOffset, modelDataLength, sessionOptionsHandle);\n    wasm.webgpuOnCreateSession?.(sessionHandle);\n    if (sessionHandle === 0) {\n      checkLastError(\"Can't create a session.\");\n    }\n\n    wasm.jsepOnCreateSession?.();\n\n    // clear current MLContext after session creation\n    if (wasm.currentContext) {\n      wasm.webnnRegisterMLContext!(sessionHandle, wasm.currentContext);\n      wasm.currentContext = undefined;\n      wasm.shouldTransferToMLTensor = true;\n    }\n\n    const [inputCount, outputCount] = getSessionInputOutputCount(sessionHandle);\n\n    const enableGraphCapture = !!options?.enableGraphCapture;\n\n    const inputNames = [];\n    const outputNames = [];\n    const inputMetadata: InferenceSession.ValueMetadata[] = [];\n    const outputMetadata: InferenceSession.ValueMetadata[] = [];\n    const outputPreferredLocations: SupportedTensorDataLocationForInputOutput[] = [];\n    for (let i = 0; i < inputCount; i++) {\n      const [nameOffset, elementType, shape] = getSessionInputOutputMetadata(sessionHandle, i);\n      if (nameOffset === 0) {\n        checkLastError(\"Can't get an input name.\");\n      }\n      inputNamesUTF8Encoded.push(nameOffset);\n      const name = wasm.UTF8ToString(nameOffset);\n      inputNames.push(name);\n      inputMetadata.push(\n        elementType === 0\n          ? { name, isTensor: false }\n          : { name, isTensor: true, type: tensorDataTypeEnumToString(elementType), shape: shape! },\n      );\n    }\n    for (let i = 0; i < outputCount; i++) {\n      const [nameOffset, elementType, shape] = getSessionInputOutputMetadata(sessionHandle, i + inputCount);\n      if (nameOffset === 0) {\n        checkLastError(\"Can't get an output name.\");\n      }\n      outputNamesUTF8Encoded.push(nameOffset);\n      const nameString = wasm.UTF8ToString(nameOffset);\n      outputNames.push(nameString);\n      outputMetadata.push(\n        elementType === 0\n          ? { name: nameString, isTensor: false }\n          : { name: nameString, isTensor: true, type: tensorDataTypeEnumToString(elementType), shape: shape! },\n      );\n\n      if (!BUILD_DEFS.DISABLE_JSEP || !BUILD_DEFS.DISABLE_WEBGPU) {\n        if (enableGraphCapture && options?.preferredOutputLocation === undefined) {\n          outputPreferredLocations.push('gpu-buffer');\n          continue;\n        }\n        const location =\n          typeof options?.preferredOutputLocation === 'string'\n            ? options.preferredOutputLocation\n            : (options?.preferredOutputLocation?.[nameString] ?? 'cpu');\n        const isGraphOutput = wasm.webnnIsGraphOutput;\n        if (location === 'cpu' && isGraphOutput && isGraphOutput(sessionHandle, nameString)) {\n          outputPreferredLocations.push('ml-tensor-cpu-output');\n          continue;\n        }\n        if (location !== 'cpu' && location !== 'cpu-pinned' && location !== 'gpu-buffer' && location !== 'ml-tensor') {\n          throw new Error(`Not supported preferred output location: ${location}.`);\n        }\n        if (enableGraphCapture && location !== 'gpu-buffer') {\n          throw new Error(\n            `Not supported preferred output location: ${location}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`,\n          );\n        }\n        outputPreferredLocations.push(location);\n      }\n    }\n\n    // use IO binding only when at least one output is preferred to be on GPU.\n    let bindingState: IOBindingState | null = null;\n    if (\n      (!BUILD_DEFS.DISABLE_JSEP || !BUILD_DEFS.DISABLE_WEBGPU) &&\n      outputPreferredLocations.some((l) => l === 'gpu-buffer' || l === 'ml-tensor' || l === 'ml-tensor-cpu-output')\n    ) {\n      ioBindingHandle = wasm._OrtCreateBinding(sessionHandle);\n      if (ioBindingHandle === 0) {\n        checkLastError(\"Can't create IO binding.\");\n      }\n\n      bindingState = {\n        handle: ioBindingHandle,\n        outputPreferredLocations,\n        outputPreferredLocationsEncoded: outputPreferredLocations\n          // 'ml-tensor-cpu-output' is treated as 'ml-tensor' for the purpose of IO binding.\n          .map((l) => (l === 'ml-tensor-cpu-output' ? 'ml-tensor' : l))\n          .map((l) => dataLocationStringToEnum(l)),\n      };\n    }\n\n    activeSessions.set(sessionHandle, [\n      sessionHandle,\n      inputNamesUTF8Encoded,\n      outputNamesUTF8Encoded,\n      bindingState,\n      enableGraphCapture,\n      false,\n    ]);\n    return [sessionHandle, inputNames, outputNames, inputMetadata, outputMetadata];\n  } catch (e) {\n    inputNamesUTF8Encoded.forEach((buf) => wasm._OrtFree(buf));\n    outputNamesUTF8Encoded.forEach((buf) => wasm._OrtFree(buf));\n\n    if (ioBindingHandle !== 0) {\n      if (wasm._OrtReleaseBinding(ioBindingHandle) !== 0) {\n        checkLastError(\"Can't release IO binding.\");\n      }\n    }\n\n    if (sessionHandle !== 0) {\n      if (wasm._OrtReleaseSession(sessionHandle) !== 0) {\n        checkLastError(\"Can't release session.\");\n      }\n    }\n    throw e;\n  } finally {\n    wasm._free(modelDataOffset);\n    if (sessionOptionsHandle !== 0) {\n      if (wasm._OrtReleaseSessionOptions(sessionOptionsHandle) !== 0) {\n        checkLastError(\"Can't release session options.\");\n      }\n    }\n    allocs.forEach((alloc) => wasm._free(alloc));\n\n    // unmount external data if necessary\n    wasm.unmountExternalData?.();\n  }\n};\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot release session. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState, enableGraphCapture] = session;\n\n  if (ioBindingState) {\n    if (enableGraphCapture) {\n      if (wasm._OrtClearBoundOutputs(ioBindingState.handle) !== 0) {\n        checkLastError(\"Can't clear bound outputs.\");\n      }\n    }\n    if (wasm._OrtReleaseBinding(ioBindingState.handle) !== 0) {\n      checkLastError(\"Can't release IO binding.\");\n    }\n  }\n\n  wasm.jsepOnReleaseSession?.(sessionId);\n  wasm.webnnOnReleaseSession?.(sessionId);\n  wasm.webgpuOnReleaseSession?.(sessionId);\n\n  inputNamesUTF8Encoded.forEach((buf) => wasm._OrtFree(buf));\n  outputNamesUTF8Encoded.forEach((buf) => wasm._OrtFree(buf));\n  if (wasm._OrtReleaseSession(sessionHandle) !== 0) {\n    checkLastError(\"Can't release session.\");\n  }\n  activeSessions.delete(sessionId);\n};\n\nexport const prepareInputOutputTensor = async (\n  tensor: TensorMetadata | null,\n  tensorHandles: number[],\n  allocs: number[],\n  sessionId: number,\n  tensorNameUTF8Encoded: number,\n  index: number,\n  enableGraphCapture = false,\n): Promise<void> => {\n  if (!tensor) {\n    tensorHandles.push(0);\n    return;\n  }\n\n  const wasm = getInstance();\n  const ptrSize = wasm.PTR_SIZE;\n\n  const dataType = tensor[0];\n  const dims = tensor[1];\n  const location = tensor[3];\n  let actualLocation = location;\n\n  let rawData: number;\n  let dataByteLength: number;\n\n  if (dataType === 'string' && (location === 'gpu-buffer' || location === 'ml-tensor')) {\n    throw new Error('String tensor is not supported on GPU.');\n  }\n\n  if (enableGraphCapture && location !== 'gpu-buffer') {\n    throw new Error(\n      `External buffer must be provided for input/output index ${index} when enableGraphCapture is true.`,\n    );\n  }\n\n  if (location === 'gpu-buffer') {\n    const gpuBuffer = tensor[2].gpuBuffer;\n    dataByteLength = calculateTensorSizeInBytes(tensorDataTypeStringToEnum(dataType), dims)!;\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU) {\n      const registerBuffer = wasm.webgpuRegisterBuffer;\n      if (!registerBuffer) {\n        throw new Error('Tensor location \"gpu-buffer\" is not supported without using WebGPU.');\n      }\n\n      rawData = registerBuffer(gpuBuffer, sessionId);\n    } else {\n      const registerBuffer = wasm.jsepRegisterBuffer;\n      if (!registerBuffer) {\n        throw new Error('Tensor location \"gpu-buffer\" is not supported without using WebGPU.');\n      }\n      rawData = registerBuffer(sessionId, index, gpuBuffer, dataByteLength);\n    }\n  } else if (location === 'ml-tensor') {\n    const mlTensor = tensor[2].mlTensor as MLTensor;\n    dataByteLength = calculateTensorSizeInBytes(tensorDataTypeStringToEnum(dataType), dims)!;\n\n    const registerMLTensor = wasm.webnnRegisterMLTensor;\n    if (!registerMLTensor) {\n      throw new Error('Tensor location \"ml-tensor\" is not supported without using WebNN.');\n    }\n    rawData = registerMLTensor(sessionId, mlTensor, tensorDataTypeStringToEnum(dataType), dims);\n  } else {\n    const data = tensor[2];\n\n    if (Array.isArray(data)) {\n      // string tensor\n      dataByteLength = ptrSize * data.length;\n      rawData = wasm._malloc(dataByteLength);\n      allocs.push(rawData);\n      for (let i = 0; i < data.length; i++) {\n        if (typeof data[i] !== 'string') {\n          throw new TypeError(`tensor data at index ${i} is not a string`);\n        }\n        wasm.setValue(rawData + i * ptrSize, allocWasmString(data[i], allocs), '*');\n      }\n    } else {\n      const isGraphInput = wasm.webnnIsGraphInput;\n      const isGraphOutput = wasm.webnnIsGraphOutput;\n      if (dataType !== 'string' && isGraphInput && isGraphOutput) {\n        const tensorName = wasm.UTF8ToString(tensorNameUTF8Encoded);\n        // Promote the tensor to 'ml-tensor' if it is a graph input.\n        if (isGraphInput(sessionId, tensorName) || isGraphOutput(sessionId, tensorName)) {\n          const dataTypeEnum = tensorDataTypeStringToEnum(dataType);\n          dataByteLength = calculateTensorSizeInBytes(dataTypeEnum, dims)!;\n          actualLocation = 'ml-tensor';\n          const createTemporaryTensor = wasm.webnnCreateTemporaryTensor;\n          const uploadTensor = wasm.webnnUploadTensor;\n          if (!createTemporaryTensor || !uploadTensor) {\n            throw new Error('Tensor location \"ml-tensor\" is not supported without using WebNN.');\n          }\n          const tensorId = await createTemporaryTensor(sessionId, dataTypeEnum, dims as number[]);\n          uploadTensor(tensorId, new Uint8Array(data.buffer, data.byteOffset, data.byteLength));\n          rawData = tensorId;\n        } else {\n          dataByteLength = data.byteLength;\n          rawData = wasm._malloc(dataByteLength);\n          allocs.push(rawData);\n          wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), rawData);\n        }\n      } else {\n        dataByteLength = data.byteLength;\n        rawData = wasm._malloc(dataByteLength);\n        allocs.push(rawData);\n        wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), rawData);\n      }\n    }\n  }\n\n  const stack = wasm.stackSave();\n  const dimsOffset = wasm.stackAlloc(4 * dims.length);\n  try {\n    dims.forEach((d, index) => wasm.setValue(dimsOffset + index * ptrSize, d, ptrSize === 4 ? 'i32' : 'i64'));\n    const tensor = wasm._OrtCreateTensor(\n      tensorDataTypeStringToEnum(dataType),\n      rawData,\n      dataByteLength,\n      dimsOffset,\n      dims.length,\n      dataLocationStringToEnum(actualLocation),\n    );\n    if (tensor === 0) {\n      checkLastError(`Can't create tensor for input/output. session=${sessionId}, index=${index}.`);\n    }\n    tensorHandles.push(tensor);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\n/**\n * perform inference run\n */\nexport const run = async (\n  sessionId: number,\n  inputIndices: number[],\n  inputTensors: TensorMetadata[],\n  outputIndices: number[],\n  outputTensors: Array<TensorMetadata | null>,\n  options: InferenceSession.RunOptions,\n): Promise<TensorMetadata[]> => {\n  const wasm = getInstance();\n  const ptrSize = wasm.PTR_SIZE;\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot run inference. invalid session id: ${sessionId}`);\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n  const ioBindingState = session[3];\n  const enableGraphCapture = session[4];\n  const inputOutputBound = session[5];\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputTensorHandles: number[] = [];\n  const outputTensorHandles: number[] = [];\n  const inputOutputAllocs: number[] = [];\n\n  const beforeRunStack = wasm.stackSave();\n  const inputValuesOffset = wasm.stackAlloc(inputCount * ptrSize);\n  const inputNamesOffset = wasm.stackAlloc(inputCount * ptrSize);\n  const outputValuesOffset = wasm.stackAlloc(outputCount * ptrSize);\n  const outputNamesOffset = wasm.stackAlloc(outputCount * ptrSize);\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    TRACE_EVENT_BEGIN('wasm prepareInputOutputTensor');\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      await prepareInputOutputTensor(\n        inputTensors[i],\n        inputTensorHandles,\n        inputOutputAllocs,\n        sessionId,\n        inputNamesUTF8Encoded[inputIndices[i]],\n        inputIndices[i],\n        enableGraphCapture,\n      );\n    }\n\n    // create output tensors\n    for (let i = 0; i < outputCount; i++) {\n      await prepareInputOutputTensor(\n        outputTensors[i],\n        outputTensorHandles,\n        inputOutputAllocs,\n        sessionId,\n        outputNamesUTF8Encoded[outputIndices[i]],\n        inputCount + outputIndices[i],\n        enableGraphCapture,\n      );\n    }\n    TRACE_EVENT_END('wasm prepareInputOutputTensor');\n\n    for (let i = 0; i < inputCount; i++) {\n      wasm.setValue(inputValuesOffset + i * ptrSize, inputTensorHandles[i], '*');\n      wasm.setValue(inputNamesOffset + i * ptrSize, inputNamesUTF8Encoded[inputIndices[i]], '*');\n    }\n    for (let i = 0; i < outputCount; i++) {\n      wasm.setValue(outputValuesOffset + i * ptrSize, outputTensorHandles[i], '*');\n      wasm.setValue(outputNamesOffset + i * ptrSize, outputNamesUTF8Encoded[outputIndices[i]], '*');\n    }\n\n    if ((!BUILD_DEFS.DISABLE_JSEP || !BUILD_DEFS.DISABLE_WEBGPU) && ioBindingState && !inputOutputBound) {\n      const { handle, outputPreferredLocations, outputPreferredLocationsEncoded } = ioBindingState;\n\n      if (inputNamesUTF8Encoded.length !== inputCount) {\n        throw new Error(\n          `input count from feeds (${inputCount}) is expected to be always equal to model's input count (${inputNamesUTF8Encoded.length}).`,\n        );\n      }\n\n      TRACE_EVENT_BEGIN('wasm bindInputsOutputs');\n      // process inputs\n      for (let i = 0; i < inputCount; i++) {\n        const index = inputIndices[i];\n        const errorCode = await wasm._OrtBindInput(handle, inputNamesUTF8Encoded[index], inputTensorHandles[i]);\n        if (errorCode !== 0) {\n          checkLastError(`Can't bind input[${i}] for session=${sessionId}.`);\n        }\n      }\n\n      // process pre-allocated outputs\n      for (let i = 0; i < outputCount; i++) {\n        const index = outputIndices[i];\n        const location = outputTensors[i]?.[3]; // undefined means output is not pre-allocated.\n\n        if (location) {\n          // output is pre-allocated. bind the tensor.\n          const errorCode = wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], outputTensorHandles[i], 0);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind pre-allocated output[${i}] for session=${sessionId}.`);\n          }\n        } else {\n          // output is not pre-allocated. reset preferred location.\n          const errorCode = wasm._OrtBindOutput(\n            handle,\n            outputNamesUTF8Encoded[index],\n            0,\n            outputPreferredLocationsEncoded[index],\n          );\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind output[${i}] to ${outputPreferredLocations[i]} for session=${sessionId}.`);\n          }\n        }\n      }\n      TRACE_EVENT_END('wasm bindInputsOutputs');\n      activeSessions.set(sessionId, [\n        sessionHandle,\n        inputNamesUTF8Encoded,\n        outputNamesUTF8Encoded,\n        ioBindingState,\n        enableGraphCapture,\n        true,\n      ]);\n    }\n\n    wasm.jsepOnRunStart?.(sessionHandle);\n    wasm.webnnOnRunStart?.(sessionHandle);\n\n    let errorCode: number;\n    if ((!BUILD_DEFS.DISABLE_JSEP || !BUILD_DEFS.DISABLE_WEBGPU) && ioBindingState) {\n      errorCode = await wasm._OrtRunWithBinding(\n        sessionHandle,\n        ioBindingState.handle,\n        outputCount,\n        outputValuesOffset,\n        runOptionsHandle,\n      );\n    } else {\n      errorCode = await wasm._OrtRun(\n        sessionHandle,\n        inputNamesOffset,\n        inputValuesOffset,\n        inputCount,\n        outputNamesOffset,\n        outputCount,\n        outputValuesOffset,\n        runOptionsHandle,\n      );\n    }\n\n    if (errorCode !== 0) {\n      checkLastError('failed to call OrtRun().');\n    }\n\n    const output: TensorMetadata[] = [];\n    const outputPromises: Array<Promise<[number, Tensor.DataType]>> = [];\n\n    TRACE_EVENT_BEGIN('wasm ProcessOutputTensor');\n    for (let i = 0; i < outputCount; i++) {\n      const tensor = Number(wasm.getValue(outputValuesOffset + i * ptrSize, '*'));\n      if (tensor === outputTensorHandles[i]) {\n        // output tensor is pre-allocated. no need to copy data.\n        output.push(outputTensors[i]!);\n        continue;\n      }\n\n      const beforeGetTensorDataStack = wasm.stackSave();\n      // stack allocate 4 pointer value\n      const tensorDataOffset = wasm.stackAlloc(4 * ptrSize);\n\n      let keepOutputTensor = false;\n      let type: Tensor.Type | undefined,\n        dataOffset = 0;\n      try {\n        const errorCode = wasm._OrtGetTensorData(\n          tensor,\n          tensorDataOffset,\n          tensorDataOffset + ptrSize,\n          tensorDataOffset + 2 * ptrSize,\n\n          tensorDataOffset + 3 * ptrSize,\n        );\n        if (errorCode !== 0) {\n          checkLastError(`Can't access output tensor data on index ${i}.`);\n        }\n        const valueType = ptrSize === 4 ? 'i32' : 'i64';\n        const dataType = Number(wasm.getValue(tensorDataOffset, valueType));\n        dataOffset = wasm.getValue(tensorDataOffset + ptrSize, '*');\n        const dimsOffset = wasm.getValue(tensorDataOffset + ptrSize * 2, '*');\n        const dimsLength = Number(wasm.getValue(tensorDataOffset + ptrSize * 3, valueType));\n        const dims = [];\n        for (let i = 0; i < dimsLength; i++) {\n          dims.push(Number(wasm.getValue(dimsOffset + i * ptrSize, valueType)));\n        }\n        if (wasm._OrtFree(dimsOffset) !== 0) {\n          checkLastError(\"Can't free memory for tensor dims.\");\n        }\n        const size = dims.reduce((a, b) => a * b, 1);\n        type = tensorDataTypeEnumToString(dataType);\n\n        const preferredLocation = ioBindingState?.outputPreferredLocations[outputIndices[i]];\n\n        if (type === 'string') {\n          if (preferredLocation === 'gpu-buffer' || preferredLocation === 'ml-tensor') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n          const stringData: string[] = [];\n          for (let i = 0; i < size; i++) {\n            const offset = wasm.getValue(dataOffset + i * ptrSize, '*');\n            const nextOffset = wasm.getValue(dataOffset + (i + 1) * ptrSize, '*');\n            const maxBytesToRead = i === size - 1 ? undefined : nextOffset - offset;\n            stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n          }\n          output.push([type, dims, stringData, 'cpu']);\n        } else {\n          // If a certain output's preferred location is GPU but the tensor is empty, we still need to create a CPU\n          // tensor for it. There is no mapping GPU buffer for an empty tensor.\n          if (preferredLocation === 'gpu-buffer' && size > 0) {\n            const getBuffer = !BUILD_DEFS.DISABLE_WEBGPU ? wasm.webgpuGetBuffer : wasm.jsepGetBuffer;\n            if (!getBuffer) {\n              throw new Error('preferredLocation \"gpu-buffer\" is not supported without using WebGPU.');\n            }\n            const gpuBuffer = getBuffer(dataOffset);\n            const bufferSize = calculateTensorSizeInBytes(dataType, size);\n            if (bufferSize === undefined || !isGpuBufferSupportedType(type)) {\n              throw new Error(`Unsupported data type: ${type}`);\n            }\n\n            // do not release the tensor right now. it will be released when user calls tensor.dispose().\n            keepOutputTensor = true;\n\n            if (!BUILD_DEFS.DISABLE_WEBGPU) {\n              wasm.webgpuRegisterBuffer!(gpuBuffer, sessionId, dataOffset);\n              const downloadDataFunction = wasm.webgpuCreateDownloader!(gpuBuffer, bufferSize, sessionId);\n              output.push([\n                type,\n                dims,\n                {\n                  gpuBuffer,\n                  download: async () => {\n                    const arrayBuffer = await downloadDataFunction();\n                    const data = new (tensorTypeToTypedArrayConstructor(type!))(arrayBuffer);\n                    return data as Tensor.DataTypeMap[Tensor.GpuBufferDataTypes];\n                  },\n                  dispose: () => {\n                    if (wasm._OrtReleaseTensor(tensor) !== 0) {\n                      checkLastError(\"Can't release tensor.\");\n                    }\n                  },\n                },\n                'gpu-buffer',\n              ]);\n            } else {\n              output.push([\n                type,\n                dims,\n                {\n                  gpuBuffer,\n                  download: wasm.jsepCreateDownloader!(gpuBuffer, bufferSize, type),\n                  dispose: () => {\n                    if (wasm._OrtReleaseTensor(tensor) !== 0) {\n                      checkLastError(\"Can't release tensor.\");\n                    }\n                  },\n                },\n                'gpu-buffer',\n              ]);\n            }\n          } else if (preferredLocation === 'ml-tensor' && size > 0) {\n            const ensureTensor = wasm.webnnEnsureTensor;\n            const isGraphInputOutputTypeSupported = wasm.webnnIsGraphInputOutputTypeSupported;\n            if (!ensureTensor || !isGraphInputOutputTypeSupported) {\n              throw new Error('preferredLocation \"ml-tensor\" is not supported without using WebNN.');\n            }\n            const tensorSize = calculateTensorSizeInBytes(dataType, size);\n            if (tensorSize === undefined || !isMLTensorSupportedType(type)) {\n              throw new Error(`Unsupported data type: ${type}`);\n            }\n            if (!isGraphInputOutputTypeSupported(sessionId, type, false)) {\n              throw new Error(\n                `preferredLocation \"ml-tensor\" for ${type} output is not supported by current WebNN Context.`,\n              );\n            }\n\n            // If the graph has been partitioned, the output tensor may have not been created. For this reason, we use\n            // ensureTensor to get/create the MLTensor. In which case, we don't need to copy the data if a new tensor\n            // has been created.\n            const mlTensor = await ensureTensor(sessionId, dataOffset, dataType, dims, false);\n\n            // do not release the tensor right now. it will be released when user calls tensor.dispose().\n            keepOutputTensor = true;\n\n            output.push([\n              type,\n              dims,\n              {\n                mlTensor,\n                download: wasm.webnnCreateMLTensorDownloader!(dataOffset, type),\n                dispose: () => {\n                  wasm.webnnReleaseTensorId!(dataOffset);\n                  wasm._OrtReleaseTensor(tensor);\n                },\n              },\n              'ml-tensor',\n            ]);\n          } else if (preferredLocation === 'ml-tensor-cpu-output' && size > 0) {\n            const data = wasm.webnnCreateMLTensorDownloader!(dataOffset, type as Tensor.MLTensorDataTypes)();\n            const index = output.length;\n            // Delay the data download and releasing the tensor until we can wait for all output tensors to be downloaded.\n            keepOutputTensor = true;\n            outputPromises.push(\n              (async () => {\n                const result: [number, Tensor.DataType] = [index, await data];\n                wasm.webnnReleaseTensorId!(dataOffset);\n                wasm._OrtReleaseTensor(tensor);\n                return result;\n              })(),\n            );\n            output.push([type, dims, [], 'cpu']);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength).set(\n              wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength),\n            );\n            output.push([type, dims, data, 'cpu']);\n          }\n        }\n      } finally {\n        wasm.stackRestore(beforeGetTensorDataStack);\n        if (type === 'string' && dataOffset) {\n          wasm._free(dataOffset);\n        }\n        if (!keepOutputTensor) {\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n    }\n\n    if (ioBindingState && !enableGraphCapture) {\n      if (wasm._OrtClearBoundOutputs(ioBindingState.handle) !== 0) {\n        checkLastError(\"Can't clear bound outputs.\");\n      }\n      activeSessions.set(sessionId, [\n        sessionHandle,\n        inputNamesUTF8Encoded,\n        outputNamesUTF8Encoded,\n        ioBindingState,\n        enableGraphCapture,\n        false,\n      ]);\n    }\n    // Wait for all output tensor data to be downloaded.\n    for (const [index, data] of await Promise.all(outputPromises)) {\n      output[index][2] = data;\n    }\n    TRACE_EVENT_END('wasm ProcessOutputTensor');\n    return output;\n  } finally {\n    wasm.webnnOnRunEnd?.(sessionHandle);\n\n    wasm.stackRestore(beforeRunStack);\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU) {\n      inputTensors.forEach((t) => {\n        if (t && t[3] === 'gpu-buffer') {\n          wasm.webgpuUnregisterBuffer!(t[2].gpuBuffer);\n        }\n      });\n      outputTensors.forEach((t) => {\n        if (t && t[3] === 'gpu-buffer') {\n          wasm.webgpuUnregisterBuffer!(t[2].gpuBuffer);\n        }\n      });\n    }\n    inputTensorHandles.forEach((v) => wasm._OrtReleaseTensor(v));\n    outputTensorHandles.forEach((v) => wasm._OrtReleaseTensor(v));\n    inputOutputAllocs.forEach((p) => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach((p) => wasm._free(p));\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    checkLastError(\"Can't get an profile file name.\");\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensorMetadata[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && 'buffer' in data) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { env, InferenceSession } from 'onnxruntime-common';\n\nimport {\n  OrtWasmMessage,\n  SerializableInternalBuffer,\n  SerializableSessionMetadata,\n  SerializableTensorMetadata,\n  TensorMetadata,\n} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport { initializeWebAssembly } from './wasm-factory';\nimport {\n  importProxyWorker,\n  inferWasmPathPrefixFromScriptSrc,\n  isEsmImportMetaUrlHardcodedAsFileUri,\n} from './wasm-utils-import';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker | undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\nlet temporaryObjectUrl: string | undefined;\n\ntype PromiseCallbacks<T = void> = [resolve: (result: T) => void, reject: (reason: unknown) => void];\nlet initWasmCallbacks: PromiseCallbacks;\nconst queuedCallbacks: Map<OrtWasmMessage['type'], Array<PromiseCallbacks<unknown>>> = new Map();\n\nconst enqueueCallbacks = (type: OrtWasmMessage['type'], callbacks: PromiseCallbacks<unknown>): void => {\n  const queue = queuedCallbacks.get(type);\n  if (queue) {\n    queue.push(callbacks);\n  } else {\n    queuedCallbacks.set(type, [callbacks]);\n  }\n};\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      if (temporaryObjectUrl) {\n        URL.revokeObjectURL(temporaryObjectUrl);\n        temporaryObjectUrl = undefined;\n      }\n      break;\n    case 'init-ep':\n    case 'copy-from':\n    case 'create':\n    case 'release':\n    case 'run':\n    case 'end-profiling': {\n      const callbacks = queuedCallbacks.get(ev.data.type)!;\n      if (ev.data.err) {\n        callbacks.shift()![1](ev.data.err);\n      } else {\n        callbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    }\n    default:\n  }\n};\n\nexport const initializeWebAssemblyAndOrtRuntime = async (): Promise<void> => {\n  if (initialized) {\n    return;\n  }\n  if (initializing) {\n    throw new Error(\"multiple calls to 'initWasm()' detected.\");\n  }\n  if (aborted) {\n    throw new Error(\"previous call to 'initWasm()' failed.\");\n  }\n\n  initializing = true;\n\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n\n      void importProxyWorker().then(([objectUrl, worker]) => {\n        try {\n          proxyWorker = worker;\n          proxyWorker.onerror = (ev: ErrorEvent) => reject(ev);\n          proxyWorker.onmessage = onProxyWorkerMessage;\n          initWasmCallbacks = [resolve, reject];\n          const message: OrtWasmMessage = { type: 'init-wasm', in: env };\n\n          // if the proxy worker is loaded from a blob URL, we need to make sure the path information is not lost.\n          //\n          // when `env.wasm.wasmPaths` is not set, we need to pass the path information to the worker.\n          //\n          if (!BUILD_DEFS.ENABLE_BUNDLE_WASM_JS && !message.in!.wasm.wasmPaths && objectUrl) {\n            // for a build not bundled the wasm JS, we need to pass the path prefix to the worker.\n            // the path prefix will be used to resolve the path to both the wasm JS and the wasm file.\n            const inferredWasmPathPrefix = inferWasmPathPrefixFromScriptSrc();\n            if (inferredWasmPathPrefix) {\n              message.in!.wasm.wasmPaths = inferredWasmPathPrefix;\n            }\n          }\n\n          if (\n            BUILD_DEFS.IS_ESM &&\n            BUILD_DEFS.ENABLE_BUNDLE_WASM_JS &&\n            !message.in!.wasm.wasmPaths &&\n            (objectUrl || isEsmImportMetaUrlHardcodedAsFileUri)\n          ) {\n            // for a build bundled the wasm JS, if either of the following conditions is met:\n            // - the proxy worker is loaded from a blob URL\n            // - `import.meta.url` is a file URL, it means it is overwritten by the bundler.\n            //\n            // in either case, the path information is lost, we need to pass the path of the .wasm file to the worker.\n            // we need to use the bundler preferred URL format:\n            // new URL('filename', import.meta.url)\n            // so that the bundler can handle the file using corresponding loaders.\n            message.in!.wasm.wasmPaths = {\n              wasm: !BUILD_DEFS.DISABLE_JSEP\n                ? new URL('ort-wasm-simd-threaded.jsep.wasm', BUILD_DEFS.ESM_IMPORT_META_URL).href\n                : !BUILD_DEFS.DISABLE_WEBGPU\n                  ? new URL('ort-wasm-simd-threaded.asyncify.wasm', BUILD_DEFS.ESM_IMPORT_META_URL).href\n                  : new URL('ort-wasm-simd-threaded.wasm', BUILD_DEFS.ESM_IMPORT_META_URL).href,\n            };\n          }\n          proxyWorker.postMessage(message);\n          temporaryObjectUrl = objectUrl;\n        } catch (e) {\n          reject(e);\n        }\n      }, reject);\n    });\n  } else {\n    try {\n      await initializeWebAssembly(env.wasm);\n      await core.initRuntime(env);\n      initialized = true;\n    } catch (e) {\n      aborted = true;\n      throw e;\n    } finally {\n      initializing = false;\n    }\n  }\n};\n\nexport const initializeOrtEp = async (epName: string): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('init-ep', [resolve, reject]);\n      const message: OrtWasmMessage = { type: 'init-ep', in: { epName, env } };\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initEp(env, epName);\n  }\n};\n\nexport const copyFromExternalBuffer = async (buffer: Uint8Array): Promise<SerializableInternalBuffer> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableInternalBuffer>((resolve, reject) => {\n      enqueueCallbacks('copy-from', [resolve, reject]);\n      const message: OrtWasmMessage = { type: 'copy-from', in: { buffer } };\n      proxyWorker!.postMessage(message, [buffer.buffer]);\n    });\n  } else {\n    return core.copyFromExternalBuffer(buffer);\n  }\n};\n\nexport const createSession = async (\n  model: SerializableInternalBuffer | Uint8Array,\n  options?: InferenceSession.SessionOptions,\n): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check unsupported options\n    if (options?.preferredOutputLocation) {\n      throw new Error('session option \"preferredOutputLocation\" is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      enqueueCallbacks('create', [resolve, reject]);\n      const message: OrtWasmMessage = { type: 'create', in: { model, options: { ...options } } };\n      const transferable: Transferable[] = [];\n      if (model instanceof Uint8Array) {\n        transferable.push(model.buffer);\n      }\n      proxyWorker!.postMessage(message, transferable);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async (sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('release', [resolve, reject]);\n      const message: OrtWasmMessage = { type: 'release', in: sessionId };\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async (\n  sessionId: number,\n  inputIndices: number[],\n  inputs: TensorMetadata[],\n  outputIndices: number[],\n  outputs: Array<TensorMetadata | null>,\n  options: InferenceSession.RunOptions,\n): Promise<TensorMetadata[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check inputs location\n    if (inputs.some((t) => t[3] !== 'cpu')) {\n      throw new Error('input tensor on GPU is not supported for proxy.');\n    }\n    // check outputs location\n    if (outputs.some((t) => t)) {\n      throw new Error('pre-allocated output tensor is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableTensorMetadata[]>((resolve, reject) => {\n      enqueueCallbacks('run', [resolve, reject]);\n      const serializableInputs = inputs as SerializableTensorMetadata[]; // every input is on CPU.\n      const message: OrtWasmMessage = {\n        type: 'run',\n        in: { sessionId, inputIndices, inputs: serializableInputs, outputIndices, options },\n      };\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(serializableInputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, outputs, options);\n  }\n};\n\nexport const endProfiling = async (sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('end-profiling', [resolve, reject]);\n      const message: OrtWasmMessage = { type: 'end-profiling', in: sessionId };\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  InferenceSession,\n  InferenceSessionHandler,\n  SessionHandler,\n  Tensor,\n  TRACE_FUNC_BEGIN,\n  TRACE_FUNC_END,\n} from 'onnxruntime-common';\n\nimport { SerializableInternalBuffer, TensorMetadata } from './proxy-messages';\nimport { copyFromExternalBuffer, createSession, endProfiling, releaseSession, run } from './proxy-wrapper';\nimport { isGpuBufferSupportedType, isMLTensorSupportedType } from './wasm-common';\nimport { isNode } from './wasm-utils-env';\nimport { loadFile } from './wasm-utils-load-file';\n\nexport const encodeTensorMetadata = (tensor: Tensor, getName: () => string): TensorMetadata => {\n  switch (tensor.location) {\n    case 'cpu':\n      return [tensor.type, tensor.dims, tensor.data, 'cpu'];\n    case 'gpu-buffer':\n      return [tensor.type, tensor.dims, { gpuBuffer: tensor.gpuBuffer }, 'gpu-buffer'];\n    case 'ml-tensor':\n      return [tensor.type, tensor.dims, { mlTensor: tensor.mlTensor }, 'ml-tensor'];\n    default:\n      throw new Error(`invalid data location: ${tensor.location} for ${getName()}`);\n  }\n};\n\nexport const decodeTensorMetadata = (tensor: TensorMetadata): Tensor => {\n  switch (tensor[3]) {\n    case 'cpu':\n      return new Tensor(tensor[0], tensor[2], tensor[1]);\n    case 'gpu-buffer': {\n      const dataType = tensor[0];\n      if (!isGpuBufferSupportedType(dataType)) {\n        throw new Error(`not supported data type: ${dataType} for deserializing GPU tensor`);\n      }\n      const { gpuBuffer, download, dispose } = tensor[2];\n      return Tensor.fromGpuBuffer(gpuBuffer, { dataType, dims: tensor[1], download, dispose });\n    }\n    case 'ml-tensor': {\n      const dataType = tensor[0];\n      if (!isMLTensorSupportedType(dataType)) {\n        throw new Error(`not supported data type: ${dataType} for deserializing MLTensor tensor`);\n      }\n      const { mlTensor, download, dispose } = tensor[2];\n      return Tensor.fromMLTensor(mlTensor, { dataType, dims: tensor[1], download, dispose });\n    }\n    default:\n      throw new Error(`invalid data location: ${tensor[3]}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements InferenceSessionHandler {\n  private sessionId: number;\n\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  inputMetadata: readonly InferenceSession.ValueMetadata[];\n  outputMetadata: readonly InferenceSession.ValueMetadata[];\n\n  async fetchModelAndCopyToWasmMemory(path: string): Promise<SerializableInternalBuffer> {\n    // fetch model from url and move to wasm heap.\n    return copyFromExternalBuffer(await loadFile(path));\n  }\n\n  async loadModel(pathOrBuffer: string | Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    TRACE_FUNC_BEGIN();\n    let model: Parameters<typeof createSession>[0];\n\n    if (typeof pathOrBuffer === 'string') {\n      if (isNode) {\n        // node\n        model = await loadFile(pathOrBuffer);\n      } else {\n        // browser\n        // fetch model and copy to wasm heap.\n        model = await this.fetchModelAndCopyToWasmMemory(pathOrBuffer);\n      }\n    } else {\n      model = pathOrBuffer;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames, this.inputMetadata, this.outputMetadata] = await createSession(\n      model,\n      options,\n    );\n    TRACE_FUNC_END();\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(\n    feeds: SessionHandler.FeedsType,\n    fetches: SessionHandler.FetchesType,\n    options: InferenceSession.RunOptions,\n  ): Promise<SessionHandler.ReturnType> {\n    TRACE_FUNC_BEGIN();\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach((kvp) => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputArray: Array<Tensor | null> = [];\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach((kvp) => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputArray.push(tensor);\n      outputIndices.push(index);\n    });\n\n    const inputs = inputArray.map((t, i) =>\n      encodeTensorMetadata(t, () => `input \"${this.inputNames[inputIndices[i]]}\"`),\n    );\n    const outputs = outputArray.map((t, i) =>\n      t ? encodeTensorMetadata(t, () => `output \"${this.outputNames[outputIndices[i]]}\"`) : null,\n    );\n\n    const results = await run(this.sessionId, inputIndices, inputs, outputIndices, outputs, options);\n\n    const resultMap: SessionHandler.ReturnType = {};\n    for (let i = 0; i < results.length; i++) {\n      resultMap[this.outputNames[outputIndices[i]]] = outputArray[i] ?? decodeTensorMetadata(results[i]);\n    }\n    TRACE_FUNC_END();\n    return resultMap;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Backend, env, InferenceSession, InferenceSessionHandler } from 'onnxruntime-common';\n\nimport { initializeOrtEp, initializeWebAssemblyAndOrtRuntime } from './wasm/proxy-wrapper';\nimport { OnnxruntimeWebAssemblySessionHandler } from './wasm/session-handler-inference';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  const simd = env.wasm.simd;\n  if (typeof simd !== 'boolean' && simd !== undefined && simd !== 'fixed' && simd !== 'relaxed') {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Property \"env.wasm.simd\" is set to unknown value \"${simd}\". Reset it to \\`false\\` and ignore SIMD feature checking.`,\n    );\n    env.wasm.simd = false;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.trace !== 'boolean') {\n    env.wasm.trace = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    // The following logic only applies when `ort.env.wasm.numThreads` is not set by user. We will always honor user's\n    // setting if it is provided.\n\n    // Browser: when crossOriginIsolated is false, SharedArrayBuffer is not available so WebAssembly threads will not\n    // work. In this case, we will set numThreads to 1.\n    //\n    // There is an exception: when the browser is configured to force-enable SharedArrayBuffer (e.g. Chromuim with\n    // --enable-features=SharedArrayBuffer), it is possible that `self.crossOriginIsolated` is false and\n    // SharedArrayBuffer is available at the same time. This is usually for testing. In this case,  we will still set\n    // numThreads to 1 here. If we want to enable multi-threading in test, we should set `ort.env.wasm.numThreads` to a\n    // value greater than 1.\n    if (typeof self !== 'undefined' && !self.crossOriginIsolated) {\n      env.wasm.numThreads = 1;\n    } else {\n      const numCpuLogicalCores =\n        typeof navigator === 'undefined' ? require('node:os').cpus().length : navigator.hardwareConcurrency;\n      env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n    }\n  }\n};\n\nexport class OnnxruntimeWebAssemblyBackend implements Backend {\n  /**\n   * This function initializes the WebAssembly backend.\n   *\n   * This function will be called only once for each backend name. It will be called the first time when\n   * `ort.InferenceSession.create()` is called with a registered backend name.\n   *\n   * @param backendName - the registered backend name.\n   */\n  async init(backendName: string): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyAndOrtRuntime();\n\n    // performe EP specific initialization\n    await initializeOrtEp(backendName);\n  }\n  createInferenceSessionHandler(\n    path: string,\n    options?: InferenceSession.SessionOptions,\n  ): Promise<InferenceSessionHandler>;\n  createInferenceSessionHandler(\n    buffer: Uint8Array,\n    options?: InferenceSession.SessionOptions,\n  ): Promise<InferenceSessionHandler>;\n  async createInferenceSessionHandler(\n    pathOrBuffer: string | Uint8Array,\n    options?: InferenceSession.SessionOptions,\n  ): Promise<InferenceSessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return handler;\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow bundler to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow bundler remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport * as ort from 'onnxruntime-common';\nexport default ort;\n\nimport { registerBackend, env } from 'onnxruntime-common';\nimport { version } from './version';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_JSEP && !BUILD_DEFS.DISABLE_WEBGPU) {\n  throw new Error(\n    'The current build is specified to enable both JSEP and WebGPU EP. This is not a valid configuration. ' +\n      'JSEP and WebGPU EPs cannot be enabled at the same time.',\n  );\n}\n\nif (!BUILD_DEFS.DISABLE_WEBNN && BUILD_DEFS.DISABLE_JSEP && BUILD_DEFS.DISABLE_WEBGPU) {\n  throw new Error(\n    'The current build is specified to enable WebNN EP without JSEP or WebGPU EP. This is not a valid configuration. ' +\n      'WebNN EP requires either JSEP or WebGPU EP to be enabled.',\n  );\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_JSEP || !BUILD_DEFS.DISABLE_WEBGPU) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  if (!BUILD_DEFS.DISABLE_WEBNN) {\n    registerBackend('webnn', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n}\n\nObject.defineProperty(env.versions, 'web', { value: version, enumerable: true });\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.23.0-dev.20250906-ecb26fb775';\n"]}